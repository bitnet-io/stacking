{"version":3,"file":"index.js","mappings":"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","sources":["webpack://StacksStacking/webpack/universalModuleDefinition","webpack://StacksStacking/webpack/runtime/create fake namespace object","webpack://StacksStacking/../../node_modules/@noble/hashes/_assert.js","webpack://StacksStacking/../../node_modules/@noble/hashes/_sha2.js","webpack://StacksStacking/../../node_modules/@noble/hashes/cryptoBrowser.js","webpack://StacksStacking/../../node_modules/@noble/hashes/sha256.js","webpack://StacksStacking/../../node_modules/@noble/hashes/utils.js","webpack://StacksStacking/../../node_modules/base-x/src/index.js","webpack://StacksStacking/../../node_modules/bs58/index.js","webpack://StacksStacking/../../node_modules/c32check/lib/address.js","webpack://StacksStacking/../../node_modules/c32check/lib/base58check.js","webpack://StacksStacking/../../node_modules/c32check/lib/checksum.js","webpack://StacksStacking/../../node_modules/c32check/lib/encoding.js","webpack://StacksStacking/../../node_modules/c32check/lib/index.js","webpack://StacksStacking/../../node_modules/cross-fetch/dist/browser-polyfill.js","webpack://StacksStacking/../../node_modules/lodash.clonedeep/index.js","webpack://StacksStacking/webpack/bootstrap","webpack://StacksStacking/webpack/runtime/compat get default export","webpack://StacksStacking/webpack/runtime/define property getters","webpack://StacksStacking/webpack/runtime/global","webpack://StacksStacking/webpack/runtime/hasOwnProperty shorthand","webpack://StacksStacking/webpack/runtime/make namespace object","webpack://StacksStacking/webpack/runtime/node module decorator","webpack://StacksStacking/../common/dist/esm/utils.js","webpack://StacksStacking/../common/dist/esm/constants.js","webpack://StacksStacking/../network/dist/esm/fetch.js","webpack://StacksStacking/../network/dist/esm/network.js","webpack://StacksStacking/../transactions/dist/esm/constants.js","webpack://StacksStacking/../common/dist/esm/buffer.js","webpack://StacksStacking/../../node_modules/@noble/hashes/esm/_assert.js","webpack://StacksStacking/../../node_modules/@noble/hashes/esm/utils.js","webpack://StacksStacking/../../node_modules/@noble/hashes/esm/cryptoBrowser.js","webpack://StacksStacking/../../node_modules/@noble/hashes/esm/_sha2.js","webpack://StacksStacking/../../node_modules/@noble/hashes/esm/ripemd160.js","webpack://StacksStacking/../../node_modules/@noble/hashes/esm/sha256.js","webpack://StacksStacking/../../node_modules/@noble/hashes/esm/_u64.js","webpack://StacksStacking/../../node_modules/@noble/hashes/esm/sha512.js","webpack://StacksStacking/../../node_modules/@noble/secp256k1/lib/esm/index.js","webpack://StacksStacking/../../node_modules/@noble/hashes/esm/hmac.js","webpack://StacksStacking/../common/dist/esm/signatures.js","webpack://StacksStacking/../transactions/dist/esm/common.js","webpack://StacksStacking/../transactions/dist/esm/keys.js","webpack://StacksStacking/../common/dist/esm/keys.js","webpack://StacksStacking/../transactions/dist/esm/postcondition-types.js","webpack://StacksStacking/../transactions/dist/esm/payload.js","webpack://StacksStacking/../transactions/dist/esm/signature.js","webpack://StacksStacking/../transactions/dist/esm/clarity/constants.js","webpack://StacksStacking/../transactions/dist/esm/types.js","webpack://StacksStacking/../transactions/dist/esm/errors.js","webpack://StacksStacking/../transactions/dist/esm/clarity/serialize.js","webpack://StacksStacking/../transactions/dist/esm/clarity/types/intCV.js","webpack://StacksStacking/../transactions/dist/esm/clarity/types/bufferCV.js","webpack://StacksStacking/../transactions/dist/esm/clarity/types/principalCV.js","webpack://StacksStacking/../transactions/dist/esm/clarity/types/optionalCV.js","webpack://StacksStacking/../transactions/dist/esm/clarity/types/tupleCV.js","webpack://StacksStacking/../transactions/dist/esm/utils.js","webpack://StacksStacking/../transactions/dist/esm/bytesReader.js","webpack://StacksStacking/../transactions/dist/esm/clarity/deserialize.js","webpack://StacksStacking/../transactions/dist/esm/clarity/types/booleanCV.js","webpack://StacksStacking/../transactions/dist/esm/clarity/types/responseCV.js","webpack://StacksStacking/../transactions/dist/esm/clarity/types/listCV.js","webpack://StacksStacking/../transactions/dist/esm/clarity/types/stringCV.js","webpack://StacksStacking/../transactions/dist/esm/authorization.js","webpack://StacksStacking/../transactions/dist/esm/clarity/clarityValue.js","webpack://StacksStacking/../transactions/dist/esm/contract-abi.js","webpack://StacksStacking/../transactions/dist/esm/signer.js","webpack://StacksStacking/../transactions/dist/esm/transaction.js","webpack://StacksStacking/../transactions/dist/esm/builders.js","webpack://StacksStacking/./src/constants.ts","webpack://StacksStacking/../../node_modules/@scure/base/lib/esm/index.js","webpack://StacksStacking/../encryption/dist/esm/keys.js","webpack://StacksStacking/./src/utils.ts","webpack://StacksStacking/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StacksStacking\"] = factory();\n\telse\n\t\troot[\"StacksStacking\"] = factory();\n})(this, () => {\nreturn ","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.c32ToB58 = exports.b58ToC32 = exports.c32addressDecode = exports.c32address = exports.versions = void 0;\nconst checksum_1 = require(\"./checksum\");\nconst base58check = require(\"./base58check\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nexports.versions = {\n    mainnet: {\n        p2pkh: 22,\n        p2sh: 20, // 'M'\n    },\n    testnet: {\n        p2pkh: 26,\n        p2sh: 21, // 'N'\n    },\n};\n// address conversion : bitcoin to stacks\nconst ADDR_BITCOIN_TO_STACKS = {};\nADDR_BITCOIN_TO_STACKS[0] = exports.versions.mainnet.p2pkh;\nADDR_BITCOIN_TO_STACKS[5] = exports.versions.mainnet.p2sh;\nADDR_BITCOIN_TO_STACKS[111] = exports.versions.testnet.p2pkh;\nADDR_BITCOIN_TO_STACKS[196] = exports.versions.testnet.p2sh;\n// address conversion : stacks to bitcoin\nconst ADDR_STACKS_TO_BITCOIN = {};\nADDR_STACKS_TO_BITCOIN[exports.versions.mainnet.p2pkh] = 0;\nADDR_STACKS_TO_BITCOIN[exports.versions.mainnet.p2sh] = 5;\nADDR_STACKS_TO_BITCOIN[exports.versions.testnet.p2pkh] = 111;\nADDR_STACKS_TO_BITCOIN[exports.versions.testnet.p2sh] = 196;\n/**\n * Make a c32check address with the given version and hash160\n * The only difference between a c32check string and c32 address\n * is that the letter 'S' is pre-pended.\n * @param {number} version - the address version number\n * @param {string} hash160hex - the hash160 to encode (must be a hash160)\n * @returns {string} the address\n */\nfunction c32address(version, hash160hex) {\n    if (!hash160hex.match(/^[0-9a-fA-F]{40}$/)) {\n        throw new Error('Invalid argument: not a hash160 hex string');\n    }\n    const c32string = (0, checksum_1.c32checkEncode)(version, hash160hex);\n    return `S${c32string}`;\n}\nexports.c32address = c32address;\n/**\n * Decode a c32 address into its version and hash160\n * @param {string} c32addr - the c32check-encoded address\n * @returns {[number, string]} a tuple with the version and hash160\n */\nfunction c32addressDecode(c32addr) {\n    if (c32addr.length <= 5) {\n        throw new Error('Invalid c32 address: invalid length');\n    }\n    if (c32addr[0] != 'S') {\n        throw new Error('Invalid c32 address: must start with \"S\"');\n    }\n    return (0, checksum_1.c32checkDecode)(c32addr.slice(1));\n}\nexports.c32addressDecode = c32addressDecode;\n/*\n * Convert a base58check address to a c32check address.\n * Try to convert the version number if one is not given.\n * @param {string} b58check - the base58check encoded address\n * @param {number} version - the version number, if not inferred from the address\n * @returns {string} the c32 address with the given version number (or the\n *   semantically-equivalent c32 version number, if not given)\n */\nfunction b58ToC32(b58check, version = -1) {\n    const addrInfo = base58check.decode(b58check);\n    const hash160String = (0, utils_1.bytesToHex)(addrInfo.data);\n    const addrVersion = parseInt((0, utils_1.bytesToHex)(addrInfo.prefix), 16);\n    let stacksVersion;\n    if (version < 0) {\n        stacksVersion = addrVersion;\n        if (ADDR_BITCOIN_TO_STACKS[addrVersion] !== undefined) {\n            stacksVersion = ADDR_BITCOIN_TO_STACKS[addrVersion];\n        }\n    }\n    else {\n        stacksVersion = version;\n    }\n    return c32address(stacksVersion, hash160String);\n}\nexports.b58ToC32 = b58ToC32;\n/*\n * Convert a c32check address to a base58check address.\n * @param {string} c32string - the c32check address\n * @param {number} version - the version number, if not inferred from the address\n * @returns {string} the base58 address with the given version number (or the\n *    semantically-equivalent bitcoin version number, if not given)\n */\nfunction c32ToB58(c32string, version = -1) {\n    const addrInfo = c32addressDecode(c32string);\n    const stacksVersion = addrInfo[0];\n    const hash160String = addrInfo[1];\n    let bitcoinVersion;\n    if (version < 0) {\n        bitcoinVersion = stacksVersion;\n        if (ADDR_STACKS_TO_BITCOIN[stacksVersion] !== undefined) {\n            bitcoinVersion = ADDR_STACKS_TO_BITCOIN[stacksVersion];\n        }\n    }\n    else {\n        bitcoinVersion = version;\n    }\n    let prefix = bitcoinVersion.toString(16);\n    if (prefix.length === 1) {\n        prefix = `0${prefix}`;\n    }\n    return base58check.encode(hash160String, prefix);\n}\nexports.c32ToB58 = c32ToB58;\n","/*\n * From https://github.com/wzbg/base58check\n * @Author: zyc\n * @Date:   2016-09-11 23:36:05\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst basex = require(\"base-x\");\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nfunction encode(data, prefix = '00') {\n    const dataBytes = typeof data === 'string' ? (0, utils_1.hexToBytes)(data) : data;\n    const prefixBytes = typeof prefix === 'string' ? (0, utils_1.hexToBytes)(prefix) : data;\n    if (!(dataBytes instanceof Uint8Array) || !(prefixBytes instanceof Uint8Array)) {\n        throw new TypeError('Argument must be of type Uint8Array or string');\n    }\n    const checksum = (0, sha256_1.sha256)((0, sha256_1.sha256)(new Uint8Array([...prefixBytes, ...dataBytes])));\n    return basex(ALPHABET).encode([...prefixBytes, ...dataBytes, ...checksum.slice(0, 4)]);\n}\nexports.encode = encode;\nfunction decode(string) {\n    const bytes = basex(ALPHABET).decode(string);\n    const prefixBytes = bytes.slice(0, 1);\n    const dataBytes = bytes.slice(1, -4);\n    // todo: for better performance replace spread with `concatBytes` method\n    const checksum = (0, sha256_1.sha256)((0, sha256_1.sha256)(new Uint8Array([...prefixBytes, ...dataBytes])));\n    bytes.slice(-4).forEach((check, index) => {\n        if (check !== checksum[index]) {\n            throw new Error('Invalid checksum');\n        }\n    });\n    return { prefix: prefixBytes, data: dataBytes };\n}\nexports.decode = decode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.c32checkDecode = exports.c32checkEncode = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst encoding_1 = require(\"./encoding\");\n/**\n * Get the c32check checksum of a hex-encoded string\n * @param {string} dataHex - the hex string\n * @returns {string} the c32 checksum, as a bin-encoded string\n */\nfunction c32checksum(dataHex) {\n    const dataHash = (0, sha256_1.sha256)((0, sha256_1.sha256)((0, utils_1.hexToBytes)(dataHex)));\n    const checksum = (0, utils_1.bytesToHex)(dataHash.slice(0, 4));\n    return checksum;\n}\n/**\n * Encode a hex string as a c32check string.  This is a lot like how\n * base58check works in Bitcoin-land, but this algorithm uses the\n * z-base-32 alphabet instead of the base58 alphabet.  The algorithm\n * is as follows:\n * * calculate the c32checksum of version + data\n * * c32encode version + data + c32checksum\n * @param {number} version - the version string (between 0 and 31)\n * @param {string} data - the data to encode\n * @returns {string} the c32check representation\n */\nfunction c32checkEncode(version, data) {\n    if (version < 0 || version >= 32) {\n        throw new Error('Invalid version (must be between 0 and 31)');\n    }\n    if (!data.match(/^[0-9a-fA-F]*$/)) {\n        throw new Error('Invalid data (not a hex string)');\n    }\n    data = data.toLowerCase();\n    if (data.length % 2 !== 0) {\n        data = `0${data}`;\n    }\n    let versionHex = version.toString(16);\n    if (versionHex.length === 1) {\n        versionHex = `0${versionHex}`;\n    }\n    const checksumHex = c32checksum(`${versionHex}${data}`);\n    const c32str = (0, encoding_1.c32encode)(`${data}${checksumHex}`);\n    return `${encoding_1.c32[version]}${c32str}`;\n}\nexports.c32checkEncode = c32checkEncode;\n/*\n * Decode a c32check string back into its version and data payload.  This is\n * a lot like how base58check works in Bitcoin-land, but this algorithm uses\n * the z-base-32 alphabet instead of the base58 alphabet.  The algorithm\n * is as follows:\n * * extract the version, data, and checksum\n * * verify the checksum matches c32checksum(version + data)\n * * return data\n * @param {string} c32data - the c32check-encoded string\n * @returns {array} [version (number), data (string)].  The returned data\n * will be a hex string.  Throws an exception if the checksum does not match.\n */\nfunction c32checkDecode(c32data) {\n    c32data = (0, encoding_1.c32normalize)(c32data);\n    const dataHex = (0, encoding_1.c32decode)(c32data.slice(1));\n    const versionChar = c32data[0];\n    const version = encoding_1.c32.indexOf(versionChar);\n    const checksum = dataHex.slice(-8);\n    let versionHex = version.toString(16);\n    if (versionHex.length === 1) {\n        versionHex = `0${versionHex}`;\n    }\n    if (c32checksum(`${versionHex}${dataHex.substring(0, dataHex.length - 8)}`) !== checksum) {\n        throw new Error('Invalid c32check string: checksum mismatch');\n    }\n    return [version, dataHex.substring(0, dataHex.length - 8)];\n}\nexports.c32checkDecode = c32checkDecode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.c32decode = exports.c32normalize = exports.c32encode = exports.c32 = void 0;\nconst utils_1 = require(\"@noble/hashes/utils\");\nexports.c32 = '0123456789ABCDEFGHJKMNPQRSTVWXYZ';\nconst hex = '0123456789abcdef';\n/**\n * Encode a hex string as a c32 string.  Note that the hex string is assumed\n * to be big-endian (and the resulting c32 string will be as well).\n * @param {string} inputHex - the input to encode\n * @param {number} minLength - the minimum length of the c32 string\n * @returns {string} the c32check-encoded representation of the data, as a string\n */\nfunction c32encode(inputHex, minLength) {\n    // must be hex\n    if (!inputHex.match(/^[0-9a-fA-F]*$/)) {\n        throw new Error('Not a hex-encoded string');\n    }\n    if (inputHex.length % 2 !== 0) {\n        inputHex = `0${inputHex}`;\n    }\n    inputHex = inputHex.toLowerCase();\n    let res = [];\n    let carry = 0;\n    for (let i = inputHex.length - 1; i >= 0; i--) {\n        if (carry < 4) {\n            const currentCode = hex.indexOf(inputHex[i]) >> carry;\n            let nextCode = 0;\n            if (i !== 0) {\n                nextCode = hex.indexOf(inputHex[i - 1]);\n            }\n            // carry = 0, nextBits is 1, carry = 1, nextBits is 2\n            const nextBits = 1 + carry;\n            const nextLowBits = nextCode % (1 << nextBits) << (5 - nextBits);\n            const curC32Digit = exports.c32[currentCode + nextLowBits];\n            carry = nextBits;\n            res.unshift(curC32Digit);\n        }\n        else {\n            carry = 0;\n        }\n    }\n    let C32leadingZeros = 0;\n    for (let i = 0; i < res.length; i++) {\n        if (res[i] !== '0') {\n            break;\n        }\n        else {\n            C32leadingZeros++;\n        }\n    }\n    res = res.slice(C32leadingZeros);\n    const zeroPrefix = new TextDecoder().decode((0, utils_1.hexToBytes)(inputHex)).match(/^\\u0000*/);\n    const numLeadingZeroBytesInHex = zeroPrefix ? zeroPrefix[0].length : 0;\n    for (let i = 0; i < numLeadingZeroBytesInHex; i++) {\n        res.unshift(exports.c32[0]);\n    }\n    if (minLength) {\n        const count = minLength - res.length;\n        for (let i = 0; i < count; i++) {\n            res.unshift(exports.c32[0]);\n        }\n    }\n    return res.join('');\n}\nexports.c32encode = c32encode;\n/*\n * Normalize a c32 string\n * @param {string} c32input - the c32-encoded input string\n * @returns {string} the canonical representation of the c32 input string\n */\nfunction c32normalize(c32input) {\n    // must be upper-case\n    // replace all O's with 0's\n    // replace all I's and L's with 1's\n    return c32input.toUpperCase().replace(/O/g, '0').replace(/L|I/g, '1');\n}\nexports.c32normalize = c32normalize;\n/*\n * Decode a c32 string back into a hex string.  Note that the c32 input\n * string is assumed to be big-endian (and the resulting hex string will\n * be as well).\n * @param {string} c32input - the c32-encoded input to decode\n * @param {number} minLength - the minimum length of the output hex string (in bytes)\n * @returns {string} the hex-encoded representation of the data, as a string\n */\nfunction c32decode(c32input, minLength) {\n    c32input = c32normalize(c32input);\n    // must result in a c32 string\n    if (!c32input.match(`^[${exports.c32}]*$`)) {\n        throw new Error('Not a c32-encoded string');\n    }\n    const zeroPrefix = c32input.match(`^${exports.c32[0]}*`);\n    const numLeadingZeroBytes = zeroPrefix ? zeroPrefix[0].length : 0;\n    let res = [];\n    let carry = 0;\n    let carryBits = 0;\n    for (let i = c32input.length - 1; i >= 0; i--) {\n        if (carryBits === 4) {\n            res.unshift(hex[carry]);\n            carryBits = 0;\n            carry = 0;\n        }\n        const currentCode = exports.c32.indexOf(c32input[i]) << carryBits;\n        const currentValue = currentCode + carry;\n        const currentHexDigit = hex[currentValue % 16];\n        carryBits += 1;\n        carry = currentValue >> 4;\n        if (carry > 1 << carryBits) {\n            throw new Error('Panic error in decoding.');\n        }\n        res.unshift(currentHexDigit);\n    }\n    // one last carry\n    res.unshift(hex[carry]);\n    if (res.length % 2 === 1) {\n        res.unshift('0');\n    }\n    let hexLeadingZeros = 0;\n    for (let i = 0; i < res.length; i++) {\n        if (res[i] !== '0') {\n            break;\n        }\n        else {\n            hexLeadingZeros++;\n        }\n    }\n    res = res.slice(hexLeadingZeros - (hexLeadingZeros % 2));\n    let hexStr = res.join('');\n    for (let i = 0; i < numLeadingZeroBytes; i++) {\n        hexStr = `00${hexStr}`;\n    }\n    if (minLength) {\n        const count = minLength * 2 - hexStr.length;\n        for (let i = 0; i < count; i += 2) {\n            hexStr = `00${hexStr}`;\n        }\n    }\n    return hexStr;\n}\nexports.c32decode = c32decode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.b58ToC32 = exports.c32ToB58 = exports.versions = exports.c32normalize = exports.c32addressDecode = exports.c32address = exports.c32checkDecode = exports.c32checkEncode = exports.c32decode = exports.c32encode = void 0;\nconst encoding_1 = require(\"./encoding\");\nObject.defineProperty(exports, \"c32encode\", { enumerable: true, get: function () { return encoding_1.c32encode; } });\nObject.defineProperty(exports, \"c32decode\", { enumerable: true, get: function () { return encoding_1.c32decode; } });\nObject.defineProperty(exports, \"c32normalize\", { enumerable: true, get: function () { return encoding_1.c32normalize; } });\nconst checksum_1 = require(\"./checksum\");\nObject.defineProperty(exports, \"c32checkEncode\", { enumerable: true, get: function () { return checksum_1.c32checkEncode; } });\nObject.defineProperty(exports, \"c32checkDecode\", { enumerable: true, get: function () { return checksum_1.c32checkDecode; } });\nconst address_1 = require(\"./address\");\nObject.defineProperty(exports, \"c32address\", { enumerable: true, get: function () { return address_1.c32address; } });\nObject.defineProperty(exports, \"c32addressDecode\", { enumerable: true, get: function () { return address_1.c32addressDecode; } });\nObject.defineProperty(exports, \"c32ToB58\", { enumerable: true, get: function () { return address_1.c32ToB58; } });\nObject.defineProperty(exports, \"b58ToC32\", { enumerable: true, get: function () { return address_1.b58ToC32; } });\nObject.defineProperty(exports, \"versions\", { enumerable: true, get: function () { return address_1.versions; } });\n","(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(typeof self !== 'undefined' ? self : this);\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","import { Logger } from './logger';\nexport const BLOCKSTACK_HANDLER = 'blockstack';\nexport function nextYear() {\n    return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\nexport function nextMonth() {\n    return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\nexport function nextHour() {\n    return new Date(new Date().setHours(new Date().getHours() + 1));\n}\nexport function megabytesToBytes(megabytes) {\n    if (!Number.isFinite(megabytes)) {\n        return 0;\n    }\n    return Math.floor(megabytes * 1024 * 1024);\n}\nexport function getAesCbcOutputLength(inputByteLength) {\n    const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n    return cipherTextLength;\n}\nexport function getBase64OutputLength(inputByteLength) {\n    const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n    return encodedLength;\n}\nexport function updateQueryStringParameter(uri, key, value) {\n    const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n    const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n    if (uri.match(re)) {\n        return uri.replace(re, `$1${key}=${value}$2`);\n    }\n    else {\n        return `${uri}${separator}${key}=${value}`;\n    }\n}\nexport function isLaterVersion(v1, v2) {\n    if (v1 === undefined || v1 === '') {\n        v1 = '0.0.0';\n    }\n    if (v2 === undefined || v1 === '') {\n        v2 = '0.0.0';\n    }\n    const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n    const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n    for (let index = 0; index < v2.length; index++) {\n        if (index >= v1.length) {\n            v2tuple.push(0);\n        }\n        if (v1tuple[index] < v2tuple[index]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function makeUUID4() {\n    let d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now();\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n}\nexport function isSameOriginAbsoluteUrl(uri1, uri2) {\n    try {\n        const parsedUri1 = new URL(uri1);\n        const parsedUri2 = new URL(uri2);\n        const port1 = parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n        const port2 = parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n        const match = {\n            scheme: parsedUri1.protocol === parsedUri2.protocol,\n            hostname: parsedUri1.hostname === parsedUri2.hostname,\n            port: port1 === port2,\n            absolute: (uri1.includes('http://') || uri1.includes('https://')) &&\n                (uri2.includes('http://') || uri2.includes('https://')),\n        };\n        return match.scheme && match.hostname && match.port && match.absolute;\n    }\n    catch (error) {\n        console.log(error);\n        console.log('Parsing error in same URL origin check');\n        return false;\n    }\n}\nexport function getGlobalScope() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available');\n}\nfunction getAPIUsageErrorMessage(scopeObject, apiName, usageDesc) {\n    if (usageDesc) {\n        return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n    else {\n        return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n}\nexport function getGlobalObject(name, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope = undefined;\n    try {\n        globalScope = getGlobalScope();\n        if (globalScope) {\n            const obj = globalScope[name];\n            if (obj) {\n                return obj;\n            }\n        }\n    }\n    catch (error) {\n        Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n    }\n    if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        Logger.error(errMsg);\n        throw new Error(errMsg);\n    }\n    if (returnEmptyObject) {\n        return {};\n    }\n    return undefined;\n}\nexport function getGlobalObjects(names, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope;\n    try {\n        globalScope = getGlobalScope();\n    }\n    catch (error) {\n        Logger.error(`Error getting global scope: ${error}`);\n        if (throwIfUnavailable) {\n            const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n            Logger.error(errMsg);\n            throw errMsg;\n        }\n        else if (returnEmptyObject) {\n            globalScope = {};\n        }\n    }\n    const result = {};\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        try {\n            if (globalScope) {\n                const obj = globalScope[name];\n                if (obj) {\n                    result[name] = obj;\n                }\n                else if (throwIfUnavailable) {\n                    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                    Logger.error(errMsg);\n                    throw new Error(errMsg);\n                }\n                else if (returnEmptyObject) {\n                    result[name] = {};\n                }\n            }\n        }\n        catch (error) {\n            if (throwIfUnavailable) {\n                const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                Logger.error(errMsg);\n                throw new Error(errMsg);\n            }\n        }\n    }\n    return result;\n}\nexport function intToBytes(value, signed, byteLength) {\n    return bigIntToBytes(intToBigInt(value, signed), byteLength);\n}\nexport function intToBigInt(value, signed) {\n    let parsedValue = value;\n    if (typeof parsedValue === 'number') {\n        if (!Number.isInteger(parsedValue)) {\n            throw new RangeError(`Invalid value. Values of type 'number' must be an integer.`);\n        }\n        if (parsedValue > Number.MAX_SAFE_INTEGER) {\n            throw new RangeError(`Invalid value. Values of type 'number' must be less than or equal to ${Number.MAX_SAFE_INTEGER}. For larger values, try using a BigInt instead.`);\n        }\n        return BigInt(parsedValue);\n    }\n    if (typeof parsedValue === 'string') {\n        if (parsedValue.toLowerCase().startsWith('0x')) {\n            let hex = parsedValue.slice(2);\n            hex = hex.padStart(hex.length + (hex.length % 2), '0');\n            parsedValue = hexToBytes(hex);\n        }\n        else {\n            try {\n                return BigInt(parsedValue);\n            }\n            catch (error) {\n                if (error instanceof SyntaxError) {\n                    throw new RangeError(`Invalid value. String integer '${parsedValue}' is not finite.`);\n                }\n            }\n        }\n    }\n    if (typeof parsedValue === 'bigint') {\n        return parsedValue;\n    }\n    if (parsedValue instanceof Uint8Array) {\n        if (signed) {\n            const bn = fromTwos(BigInt(`0x${bytesToHex(parsedValue)}`), BigInt(parsedValue.byteLength * 8));\n            return BigInt(bn.toString());\n        }\n        else {\n            return BigInt(`0x${bytesToHex(parsedValue)}`);\n        }\n    }\n    if (parsedValue != null &&\n        typeof parsedValue === 'object' &&\n        parsedValue.constructor.name === 'BN') {\n        return BigInt(parsedValue.toString());\n    }\n    throw new TypeError(`Invalid value type. Must be a number, bigint, integer-string, hex-string, or Uint8Array.`);\n}\nexport function with0x(value) {\n    return value.startsWith('0x') ? value : `0x${value}`;\n}\nexport function hexToBigInt(hex) {\n    if (typeof hex !== 'string')\n        throw new TypeError(`hexToBigInt: expected string, got ${typeof hex}`);\n    return BigInt(`0x${hex}`);\n}\nexport function intToHex(integer, lengthBytes = 8) {\n    const value = typeof integer === 'bigint' ? integer : intToBigInt(integer, false);\n    return value.toString(16).padStart(lengthBytes * 2, '0');\n}\nexport function hexToInt(hex) {\n    return parseInt(hex, 16);\n}\nexport function bigIntToBytes(value, length = 16) {\n    const hex = intToHex(value, length);\n    return hexToBytes(hex);\n}\nexport function toTwos(value, width) {\n    if (value < -(BigInt(1) << (width - BigInt(1))) ||\n        (BigInt(1) << (width - BigInt(1))) - BigInt(1) < value) {\n        throw `Unable to represent integer in width: ${width}`;\n    }\n    if (value >= BigInt(0)) {\n        return BigInt(value);\n    }\n    return value + (BigInt(1) << width);\n}\nfunction nthBit(value, n) {\n    return value & (BigInt(1) << n);\n}\nexport function fromTwos(value, width) {\n    if (nthBit(value, width - BigInt(1))) {\n        return value - (BigInt(1) << width);\n    }\n    return value;\n}\nconst hexes = Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (const u of uint8a) {\n        hex += hexes[u];\n    }\n    return hex;\n}\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError(`hexToBytes: expected string, got ${typeof hex}`);\n    }\n    const paddedHex = hex.length % 2 ? `0${hex}` : hex;\n    const array = new Uint8Array(paddedHex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = paddedHex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexport function utf8ToBytes(str) {\n    return new TextEncoder().encode(str);\n}\nexport function bytesToUtf8(arr) {\n    return new TextDecoder().decode(arr);\n}\nexport function asciiToBytes(str) {\n    const byteArray = [];\n    for (let i = 0; i < str.length; i++) {\n        byteArray.push(str.charCodeAt(i) & 0xff);\n    }\n    return new Uint8Array(byteArray);\n}\nexport function bytesToAscii(arr) {\n    return String.fromCharCode.apply(null, arr);\n}\nfunction isNotOctet(octet) {\n    return !Number.isInteger(octet) || octet < 0 || octet > 255;\n}\nexport function octetsToBytes(numbers) {\n    if (numbers.some(isNotOctet))\n        throw new Error('Some values are invalid bytes.');\n    return new Uint8Array(numbers);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        return utf8ToBytes(data);\n    if (data instanceof Uint8Array)\n        return data;\n    throw new TypeError(`Expected input type is (Uint8Array | string) but got (${typeof data})`);\n}\nexport function concatBytes(...arrays) {\n    if (!arrays.every(a => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexport function concatArray(elements) {\n    return concatBytes(...elements.map(e => {\n        if (typeof e === 'number')\n            return octetsToBytes([e]);\n        if (e instanceof Array)\n            return octetsToBytes(e);\n        return e;\n    }));\n}\nexport function isInstance(object, type) {\n    return object instanceof type || object?.constructor?.name?.toLowerCase() === type.name;\n}\n//# sourceMappingURL=utils.js.map","export var ChainID;\n(function (ChainID) {\n    ChainID[ChainID[\"Testnet\"] = 2147483648] = \"Testnet\";\n    ChainID[ChainID[\"Mainnet\"] = 1] = \"Mainnet\";\n})(ChainID || (ChainID = {}));\nexport var TransactionVersion;\n(function (TransactionVersion) {\n    TransactionVersion[TransactionVersion[\"Mainnet\"] = 0] = \"Mainnet\";\n    TransactionVersion[TransactionVersion[\"Testnet\"] = 128] = \"Testnet\";\n})(TransactionVersion || (TransactionVersion = {}));\nexport var PeerNetworkID;\n(function (PeerNetworkID) {\n    PeerNetworkID[PeerNetworkID[\"Mainnet\"] = 385875968] = \"Mainnet\";\n    PeerNetworkID[PeerNetworkID[\"Testnet\"] = 4278190080] = \"Testnet\";\n})(PeerNetworkID || (PeerNetworkID = {}));\nexport const PRIVATE_KEY_COMPRESSED_LENGTH = 33;\nexport const PRIVATE_KEY_UNCOMPRESSED_LENGTH = 32;\nexport const BLOCKSTACK_DEFAULT_GAIA_HUB_URL = 'https://hub.blockstack.org';\n//# sourceMappingURL=constants.js.map","import 'cross-fetch/polyfill';\nconst defaultFetchOpts = {\n    referrerPolicy: 'origin',\n    headers: {\n        'x-hiro-product': 'stacksjs',\n    },\n};\nexport const getFetchOptions = () => {\n    return defaultFetchOpts;\n};\nexport const setFetchOptions = (ops) => {\n    return Object.assign(defaultFetchOpts, ops);\n};\nexport async function fetchWrapper(input, init) {\n    const fetchOpts = {};\n    Object.assign(fetchOpts, defaultFetchOpts, init);\n    const fetchResult = await fetch(input, fetchOpts);\n    return fetchResult;\n}\nexport function hostMatches(host, pattern) {\n    if (typeof pattern === 'string')\n        return pattern === host;\n    return pattern.exec(host);\n}\nexport function createApiKeyMiddleware({ apiKey, host = /(.*)api(.*)\\.stacks\\.co$/i, httpHeader = 'x-api-key', }) {\n    return {\n        pre: context => {\n            const reqUrl = new URL(context.url);\n            if (!hostMatches(reqUrl.host, host))\n                return;\n            const headers = new Headers(context.init.headers);\n            headers.set(httpHeader, apiKey);\n            context.init.headers = headers;\n        },\n    };\n}\nfunction argsForCreateFetchFn(args) {\n    let fetchLib = fetchWrapper;\n    let middlewares = [];\n    if (args.length > 0 && typeof args[0] === 'function') {\n        fetchLib = args.shift();\n    }\n    if (args.length > 0) {\n        middlewares = args;\n    }\n    return { fetchLib, middlewares };\n}\nexport function createFetchFn(...args) {\n    const { fetchLib, middlewares } = argsForCreateFetchFn(args);\n    const fetchFn = async (url, init) => {\n        let fetchParams = { url, init: init ?? {} };\n        for (const middleware of middlewares) {\n            if (typeof middleware.pre === 'function') {\n                const result = await Promise.resolve(middleware.pre({\n                    fetch: fetchLib,\n                    ...fetchParams,\n                }));\n                fetchParams = result ?? fetchParams;\n            }\n        }\n        let response = await fetchLib(fetchParams.url, fetchParams.init);\n        for (const middleware of middlewares) {\n            if (typeof middleware.post === 'function') {\n                const result = await Promise.resolve(middleware.post({\n                    fetch: fetchLib,\n                    url: fetchParams.url,\n                    init: fetchParams.init,\n                    response: response?.clone() ?? response,\n                }));\n                response = result ?? response;\n            }\n        }\n        return response;\n    };\n    return fetchFn;\n}\n//# sourceMappingURL=fetch.js.map","import { TransactionVersion, ChainID } from '@stacks/common';\nimport { createFetchFn } from './fetch';\nexport const HIRO_MAINNET_DEFAULT = 'https://stacks-node-api.mainnet.stacks.co';\nexport const HIRO_TESTNET_DEFAULT = 'https://stacks-node-api.testnet.stacks.co';\nexport const HIRO_MOCKNET_DEFAULT = 'http://localhost:3999';\nexport const StacksNetworks = ['mainnet', 'testnet', 'devnet', 'mocknet'];\nexport class StacksNetwork {\n    constructor(networkConfig) {\n        this.version = TransactionVersion.Mainnet;\n        this.chainId = ChainID.Mainnet;\n        this.bnsLookupUrl = 'https://stacks-node-api.mainnet.stacks.co';\n        this.broadcastEndpoint = '/v2/transactions';\n        this.transferFeeEstimateEndpoint = '/v2/fees/transfer';\n        this.transactionFeeEstimateEndpoint = '/v2/fees/transaction';\n        this.accountEndpoint = '/v2/accounts';\n        this.contractAbiEndpoint = '/v2/contracts/interface';\n        this.readOnlyFunctionCallEndpoint = '/v2/contracts/call-read';\n        this.isMainnet = () => this.version === TransactionVersion.Mainnet;\n        this.getBroadcastApiUrl = () => `${this.coreApiUrl}${this.broadcastEndpoint}`;\n        this.getTransferFeeEstimateApiUrl = () => `${this.coreApiUrl}${this.transferFeeEstimateEndpoint}`;\n        this.getTransactionFeeEstimateApiUrl = () => `${this.coreApiUrl}${this.transactionFeeEstimateEndpoint}`;\n        this.getAccountApiUrl = (address) => `${this.coreApiUrl}${this.accountEndpoint}/${address}?proof=0`;\n        this.getAccountExtendedBalancesApiUrl = (address) => `${this.coreApiUrl}/extended/v1/address/${address}/balances`;\n        this.getAbiApiUrl = (address, contract) => `${this.coreApiUrl}${this.contractAbiEndpoint}/${address}/${contract}`;\n        this.getReadOnlyFunctionCallApiUrl = (contractAddress, contractName, functionName) => `${this.coreApiUrl}${this.readOnlyFunctionCallEndpoint}/${contractAddress}/${contractName}/${encodeURIComponent(functionName)}`;\n        this.getInfoUrl = () => `${this.coreApiUrl}/v2/info`;\n        this.getBlockTimeInfoUrl = () => `${this.coreApiUrl}/extended/v1/info/network_block_times`;\n        this.getPoxInfoUrl = () => `${this.coreApiUrl}/v2/pox`;\n        this.getRewardsUrl = (address, options) => {\n            let url = `${this.coreApiUrl}/extended/v1/burnchain/rewards/${address}`;\n            if (options) {\n                url = `${url}?limit=${options.limit}&offset=${options.offset}`;\n            }\n            return url;\n        };\n        this.getRewardsTotalUrl = (address) => `${this.coreApiUrl}/extended/v1/burnchain/rewards/${address}/total`;\n        this.getRewardHoldersUrl = (address, options) => {\n            let url = `${this.coreApiUrl}/extended/v1/burnchain/reward_slot_holders/${address}`;\n            if (options) {\n                url = `${url}?limit=${options.limit}&offset=${options.offset}`;\n            }\n            return url;\n        };\n        this.getStackerInfoUrl = (contractAddress, contractName) => `${this.coreApiUrl}${this.readOnlyFunctionCallEndpoint}\n    ${contractAddress}/${contractName}/get-stacker-info`;\n        this.getDataVarUrl = (contractAddress, contractName, dataVarName) => `${this.coreApiUrl}/v2/data_var/${contractAddress}/${contractName}/${dataVarName}?proof=0`;\n        this.getMapEntryUrl = (contractAddress, contractName, mapName) => `${this.coreApiUrl}/v2/map_entry/${contractAddress}/${contractName}/${mapName}?proof=0`;\n        this.coreApiUrl = networkConfig.url;\n        this.fetchFn = networkConfig.fetchFn ?? createFetchFn();\n    }\n    getNameInfo(fullyQualifiedName) {\n        const nameLookupURL = `${this.bnsLookupUrl}/v1/names/${fullyQualifiedName}`;\n        return this.fetchFn(nameLookupURL)\n            .then(resp => {\n            if (resp.status === 404) {\n                throw new Error('Name not found');\n            }\n            else if (resp.status !== 200) {\n                throw new Error(`Bad response status: ${resp.status}`);\n            }\n            else {\n                return resp.json();\n            }\n        })\n            .then(nameInfo => {\n            if (nameInfo.address) {\n                return Object.assign({}, nameInfo, { address: nameInfo.address });\n            }\n            else {\n                return nameInfo;\n            }\n        });\n    }\n}\nStacksNetwork.fromName = (networkName) => {\n    switch (networkName) {\n        case 'mainnet':\n            return new StacksMainnet();\n        case 'testnet':\n            return new StacksTestnet();\n        case 'devnet':\n            return new StacksDevnet();\n        case 'mocknet':\n            return new StacksMocknet();\n        default:\n            throw new Error(`Invalid network name provided. Must be one of the following: ${StacksNetworks.join(', ')}`);\n    }\n};\nStacksNetwork.fromNameOrNetwork = (network) => {\n    if (typeof network !== 'string' && 'version' in network) {\n        return network;\n    }\n    return StacksNetwork.fromName(network);\n};\nexport class StacksMainnet extends StacksNetwork {\n    constructor(opts) {\n        super({\n            url: opts?.url ?? HIRO_MAINNET_DEFAULT,\n            fetchFn: opts?.fetchFn,\n        });\n        this.version = TransactionVersion.Mainnet;\n        this.chainId = ChainID.Mainnet;\n    }\n}\nexport class StacksTestnet extends StacksNetwork {\n    constructor(opts) {\n        super({\n            url: opts?.url ?? HIRO_TESTNET_DEFAULT,\n            fetchFn: opts?.fetchFn,\n        });\n        this.version = TransactionVersion.Testnet;\n        this.chainId = ChainID.Testnet;\n    }\n}\nexport class StacksMocknet extends StacksNetwork {\n    constructor(opts) {\n        super({\n            url: opts?.url ?? HIRO_MOCKNET_DEFAULT,\n            fetchFn: opts?.fetchFn,\n        });\n        this.version = TransactionVersion.Testnet;\n        this.chainId = ChainID.Testnet;\n    }\n}\nexport const StacksDevnet = StacksMocknet;\n//# sourceMappingURL=network.js.map","var ChainID;\n(function (ChainID) {\n    ChainID[ChainID[\"Testnet\"] = 2147483648] = \"Testnet\";\n    ChainID[ChainID[\"Mainnet\"] = 1] = \"Mainnet\";\n})(ChainID || (ChainID = {}));\nconst DEFAULT_CHAIN_ID = ChainID.Mainnet;\nconst MAX_STRING_LENGTH_BYTES = 128;\nconst CLARITY_INT_SIZE = 128;\nconst CLARITY_INT_BYTE_SIZE = 16;\nconst COINBASE_LENGTH_BYTES = 32;\nconst RECOVERABLE_ECDSA_SIG_LENGTH_BYTES = 65;\nconst COMPRESSED_PUBKEY_LENGTH_BYTES = 32;\nconst UNCOMPRESSED_PUBKEY_LENGTH_BYTES = 64;\nconst MEMO_MAX_LENGTH_BYTES = 34;\nconst DEFAULT_CORE_NODE_API_URL = 'https://stacks-node-api.mainnet.stacks.co';\nvar StacksMessageType;\n(function (StacksMessageType) {\n    StacksMessageType[StacksMessageType[\"Address\"] = 0] = \"Address\";\n    StacksMessageType[StacksMessageType[\"Principal\"] = 1] = \"Principal\";\n    StacksMessageType[StacksMessageType[\"LengthPrefixedString\"] = 2] = \"LengthPrefixedString\";\n    StacksMessageType[StacksMessageType[\"MemoString\"] = 3] = \"MemoString\";\n    StacksMessageType[StacksMessageType[\"AssetInfo\"] = 4] = \"AssetInfo\";\n    StacksMessageType[StacksMessageType[\"PostCondition\"] = 5] = \"PostCondition\";\n    StacksMessageType[StacksMessageType[\"PublicKey\"] = 6] = \"PublicKey\";\n    StacksMessageType[StacksMessageType[\"LengthPrefixedList\"] = 7] = \"LengthPrefixedList\";\n    StacksMessageType[StacksMessageType[\"Payload\"] = 8] = \"Payload\";\n    StacksMessageType[StacksMessageType[\"MessageSignature\"] = 9] = \"MessageSignature\";\n    StacksMessageType[StacksMessageType[\"StructuredDataSignature\"] = 10] = \"StructuredDataSignature\";\n    StacksMessageType[StacksMessageType[\"TransactionAuthField\"] = 11] = \"TransactionAuthField\";\n})(StacksMessageType || (StacksMessageType = {}));\nexport function whenMessageType(messageType) {\n    return (messageTypeMap) => messageTypeMap[messageType];\n}\nvar PayloadType;\n(function (PayloadType) {\n    PayloadType[PayloadType[\"TokenTransfer\"] = 0] = \"TokenTransfer\";\n    PayloadType[PayloadType[\"SmartContract\"] = 1] = \"SmartContract\";\n    PayloadType[PayloadType[\"VersionedSmartContract\"] = 6] = \"VersionedSmartContract\";\n    PayloadType[PayloadType[\"ContractCall\"] = 2] = \"ContractCall\";\n    PayloadType[PayloadType[\"PoisonMicroblock\"] = 3] = \"PoisonMicroblock\";\n    PayloadType[PayloadType[\"Coinbase\"] = 4] = \"Coinbase\";\n    PayloadType[PayloadType[\"CoinbaseToAltRecipient\"] = 5] = \"CoinbaseToAltRecipient\";\n})(PayloadType || (PayloadType = {}));\nvar ClarityVersion;\n(function (ClarityVersion) {\n    ClarityVersion[ClarityVersion[\"Clarity1\"] = 1] = \"Clarity1\";\n    ClarityVersion[ClarityVersion[\"Clarity2\"] = 2] = \"Clarity2\";\n})(ClarityVersion || (ClarityVersion = {}));\nvar AnchorMode;\n(function (AnchorMode) {\n    AnchorMode[AnchorMode[\"OnChainOnly\"] = 1] = \"OnChainOnly\";\n    AnchorMode[AnchorMode[\"OffChainOnly\"] = 2] = \"OffChainOnly\";\n    AnchorMode[AnchorMode[\"Any\"] = 3] = \"Any\";\n})(AnchorMode || (AnchorMode = {}));\nconst AnchorModeNames = ['onChainOnly', 'offChainOnly', 'any'];\nconst AnchorModeMap = {\n    [AnchorModeNames[0]]: AnchorMode.OnChainOnly,\n    [AnchorModeNames[1]]: AnchorMode.OffChainOnly,\n    [AnchorModeNames[2]]: AnchorMode.Any,\n    [AnchorMode.OnChainOnly]: AnchorMode.OnChainOnly,\n    [AnchorMode.OffChainOnly]: AnchorMode.OffChainOnly,\n    [AnchorMode.Any]: AnchorMode.Any,\n};\nfunction anchorModeFromNameOrValue(mode) {\n    if (mode in AnchorModeMap) {\n        return AnchorModeMap[mode];\n    }\n    throw new Error(`Invalid anchor mode \"${mode}\", must be one of: ${AnchorModeNames.join(', ')}`);\n}\nvar TransactionVersion;\n(function (TransactionVersion) {\n    TransactionVersion[TransactionVersion[\"Mainnet\"] = 0] = \"Mainnet\";\n    TransactionVersion[TransactionVersion[\"Testnet\"] = 128] = \"Testnet\";\n})(TransactionVersion || (TransactionVersion = {}));\nconst DEFAULT_TRANSACTION_VERSION = TransactionVersion.Mainnet;\nvar PostConditionMode;\n(function (PostConditionMode) {\n    PostConditionMode[PostConditionMode[\"Allow\"] = 1] = \"Allow\";\n    PostConditionMode[PostConditionMode[\"Deny\"] = 2] = \"Deny\";\n})(PostConditionMode || (PostConditionMode = {}));\nvar PostConditionType;\n(function (PostConditionType) {\n    PostConditionType[PostConditionType[\"STX\"] = 0] = \"STX\";\n    PostConditionType[PostConditionType[\"Fungible\"] = 1] = \"Fungible\";\n    PostConditionType[PostConditionType[\"NonFungible\"] = 2] = \"NonFungible\";\n})(PostConditionType || (PostConditionType = {}));\nvar AuthType;\n(function (AuthType) {\n    AuthType[AuthType[\"Standard\"] = 4] = \"Standard\";\n    AuthType[AuthType[\"Sponsored\"] = 5] = \"Sponsored\";\n})(AuthType || (AuthType = {}));\nvar AddressHashMode;\n(function (AddressHashMode) {\n    AddressHashMode[AddressHashMode[\"SerializeP2PKH\"] = 0] = \"SerializeP2PKH\";\n    AddressHashMode[AddressHashMode[\"SerializeP2SH\"] = 1] = \"SerializeP2SH\";\n    AddressHashMode[AddressHashMode[\"SerializeP2WPKH\"] = 2] = \"SerializeP2WPKH\";\n    AddressHashMode[AddressHashMode[\"SerializeP2WSH\"] = 3] = \"SerializeP2WSH\";\n})(AddressHashMode || (AddressHashMode = {}));\nvar AddressVersion;\n(function (AddressVersion) {\n    AddressVersion[AddressVersion[\"MainnetSingleSig\"] = 22] = \"MainnetSingleSig\";\n    AddressVersion[AddressVersion[\"MainnetMultiSig\"] = 20] = \"MainnetMultiSig\";\n    AddressVersion[AddressVersion[\"TestnetSingleSig\"] = 26] = \"TestnetSingleSig\";\n    AddressVersion[AddressVersion[\"TestnetMultiSig\"] = 21] = \"TestnetMultiSig\";\n})(AddressVersion || (AddressVersion = {}));\nvar PubKeyEncoding;\n(function (PubKeyEncoding) {\n    PubKeyEncoding[PubKeyEncoding[\"Compressed\"] = 0] = \"Compressed\";\n    PubKeyEncoding[PubKeyEncoding[\"Uncompressed\"] = 1] = \"Uncompressed\";\n})(PubKeyEncoding || (PubKeyEncoding = {}));\nvar FungibleConditionCode;\n(function (FungibleConditionCode) {\n    FungibleConditionCode[FungibleConditionCode[\"Equal\"] = 1] = \"Equal\";\n    FungibleConditionCode[FungibleConditionCode[\"Greater\"] = 2] = \"Greater\";\n    FungibleConditionCode[FungibleConditionCode[\"GreaterEqual\"] = 3] = \"GreaterEqual\";\n    FungibleConditionCode[FungibleConditionCode[\"Less\"] = 4] = \"Less\";\n    FungibleConditionCode[FungibleConditionCode[\"LessEqual\"] = 5] = \"LessEqual\";\n})(FungibleConditionCode || (FungibleConditionCode = {}));\nvar NonFungibleConditionCode;\n(function (NonFungibleConditionCode) {\n    NonFungibleConditionCode[NonFungibleConditionCode[\"Sends\"] = 16] = \"Sends\";\n    NonFungibleConditionCode[NonFungibleConditionCode[\"DoesNotSend\"] = 17] = \"DoesNotSend\";\n})(NonFungibleConditionCode || (NonFungibleConditionCode = {}));\nvar PostConditionPrincipalID;\n(function (PostConditionPrincipalID) {\n    PostConditionPrincipalID[PostConditionPrincipalID[\"Origin\"] = 1] = \"Origin\";\n    PostConditionPrincipalID[PostConditionPrincipalID[\"Standard\"] = 2] = \"Standard\";\n    PostConditionPrincipalID[PostConditionPrincipalID[\"Contract\"] = 3] = \"Contract\";\n})(PostConditionPrincipalID || (PostConditionPrincipalID = {}));\nvar AssetType;\n(function (AssetType) {\n    AssetType[AssetType[\"STX\"] = 0] = \"STX\";\n    AssetType[AssetType[\"Fungible\"] = 1] = \"Fungible\";\n    AssetType[AssetType[\"NonFungible\"] = 2] = \"NonFungible\";\n})(AssetType || (AssetType = {}));\nvar TxRejectedReason;\n(function (TxRejectedReason) {\n    TxRejectedReason[\"Serialization\"] = \"Serialization\";\n    TxRejectedReason[\"Deserialization\"] = \"Deserialization\";\n    TxRejectedReason[\"SignatureValidation\"] = \"SignatureValidation\";\n    TxRejectedReason[\"FeeTooLow\"] = \"FeeTooLow\";\n    TxRejectedReason[\"BadNonce\"] = \"BadNonce\";\n    TxRejectedReason[\"NotEnoughFunds\"] = \"NotEnoughFunds\";\n    TxRejectedReason[\"NoSuchContract\"] = \"NoSuchContract\";\n    TxRejectedReason[\"NoSuchPublicFunction\"] = \"NoSuchPublicFunction\";\n    TxRejectedReason[\"BadFunctionArgument\"] = \"BadFunctionArgument\";\n    TxRejectedReason[\"ContractAlreadyExists\"] = \"ContractAlreadyExists\";\n    TxRejectedReason[\"PoisonMicroblocksDoNotConflict\"] = \"PoisonMicroblocksDoNotConflict\";\n    TxRejectedReason[\"PoisonMicroblockHasUnknownPubKeyHash\"] = \"PoisonMicroblockHasUnknownPubKeyHash\";\n    TxRejectedReason[\"PoisonMicroblockIsInvalid\"] = \"PoisonMicroblockIsInvalid\";\n    TxRejectedReason[\"BadAddressVersionByte\"] = \"BadAddressVersionByte\";\n    TxRejectedReason[\"NoCoinbaseViaMempool\"] = \"NoCoinbaseViaMempool\";\n    TxRejectedReason[\"ServerFailureNoSuchChainTip\"] = \"ServerFailureNoSuchChainTip\";\n    TxRejectedReason[\"ServerFailureDatabase\"] = \"ServerFailureDatabase\";\n    TxRejectedReason[\"ServerFailureOther\"] = \"ServerFailureOther\";\n})(TxRejectedReason || (TxRejectedReason = {}));\nexport { MAX_STRING_LENGTH_BYTES, CLARITY_INT_SIZE, CLARITY_INT_BYTE_SIZE, COINBASE_LENGTH_BYTES as COINBASE_BYTES_LENGTH, DEFAULT_CHAIN_ID, DEFAULT_TRANSACTION_VERSION, RECOVERABLE_ECDSA_SIG_LENGTH_BYTES, COMPRESSED_PUBKEY_LENGTH_BYTES, UNCOMPRESSED_PUBKEY_LENGTH_BYTES, MEMO_MAX_LENGTH_BYTES, DEFAULT_CORE_NODE_API_URL, ChainID, StacksMessageType, PayloadType, ClarityVersion, AnchorMode, AnchorModeNames, anchorModeFromNameOrValue, TransactionVersion, PostConditionMode, PostConditionType, PostConditionPrincipalID, AuthType, AddressHashMode, AddressVersion, PubKeyEncoding, FungibleConditionCode, NonFungibleConditionCode, AssetType, TxRejectedReason, };\n//# sourceMappingURL=constants.js.map","export function equals(a, b) {\n    if (a.byteLength !== b.byteLength)\n        return false;\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nexport function alloc(length, value) {\n    const a = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        a[i] = value;\n    }\n    return a;\n}\nexport function readUInt16BE(source, offset) {\n    return ((source[offset + 0] << 8) | source[offset + 1]) >>> 0;\n}\nexport function writeUInt16BE(source, value, offset) {\n    source[offset + 0] = value >>> 8;\n    source[offset + 1] = value >>> 0;\n}\nexport function readUInt8(source, offset) {\n    return source[offset];\n}\nexport function writeUInt8(destination, value, offset) {\n    destination[offset] = value;\n}\nexport function readUInt16LE(source, offset) {\n    return ((source[offset + 0] << 0) >>> 0) | ((source[offset + 1] << 8) >>> 0);\n}\nexport function writeUInt16LE(destination, value, offset) {\n    destination[offset + 0] = value & 255;\n    value >>>= 8;\n    destination[offset + 1] = value & 255;\n}\nexport function readUInt32BE(source, offset) {\n    return (source[offset] * 2 ** 24 +\n        source[offset + 1] * 2 ** 16 +\n        source[offset + 2] * 2 ** 8 +\n        source[offset + 3]);\n}\nexport function writeUInt32BE(destination, value, offset) {\n    destination[offset + 3] = value;\n    value >>>= 8;\n    destination[offset + 2] = value;\n    value >>>= 8;\n    destination[offset + 1] = value;\n    value >>>= 8;\n    destination[offset] = value;\n}\nexport function readUInt32LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0) |\n        ((source[offset + 2] << 16) >>> 0) |\n        ((source[offset + 3] << 24) >>> 0));\n}\nexport function writeUInt32LE(destination, value, offset) {\n    destination[offset + 0] = value & 255;\n    value >>>= 8;\n    destination[offset + 1] = value & 255;\n    value >>>= 8;\n    destination[offset + 2] = value & 255;\n    value >>>= 8;\n    destination[offset + 3] = value & 255;\n}\n//# sourceMappingURL=buffer.js.map","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nexport class RIPEMD160 extends SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = wrapConstructor(() => new RIPEMD160());\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","import { hexToInt } from './utils';\nconst COORDINATE_BYTES = 32;\nexport function parseRecoverableSignatureVrs(signature) {\n    if (signature.length < COORDINATE_BYTES * 2 * 2 + 1) {\n        throw new Error('Invalid signature');\n    }\n    const recoveryIdHex = signature.slice(0, 2);\n    const r = signature.slice(2, 2 + COORDINATE_BYTES * 2);\n    const s = signature.slice(2 + COORDINATE_BYTES * 2);\n    return {\n        recoveryId: hexToInt(recoveryIdHex),\n        r,\n        s,\n    };\n}\nexport function signatureVrsToRsv(signature) {\n    return signature.slice(2) + signature.slice(0, 2);\n}\nexport function signatureRsvToVrs(signature) {\n    return signature.slice(-2) + signature.slice(0, -2);\n}\n//# sourceMappingURL=signatures.js.map","import { AddressHashMode, AddressVersion, RECOVERABLE_ECDSA_SIG_LENGTH_BYTES, StacksMessageType, TransactionVersion, } from './constants';\nimport { c32address } from 'c32check';\nimport { hexToBytes } from '@stacks/common';\nexport function createMessageSignature(signature) {\n    const length = hexToBytes(signature).byteLength;\n    if (length != RECOVERABLE_ECDSA_SIG_LENGTH_BYTES) {\n        throw Error('Invalid signature');\n    }\n    return {\n        type: StacksMessageType.MessageSignature,\n        data: signature,\n    };\n}\nexport function addressHashModeToVersion(hashMode, txVersion) {\n    switch (hashMode) {\n        case AddressHashMode.SerializeP2PKH:\n            switch (txVersion) {\n                case TransactionVersion.Mainnet:\n                    return AddressVersion.MainnetSingleSig;\n                case TransactionVersion.Testnet:\n                    return AddressVersion.TestnetSingleSig;\n                default:\n                    throw new Error(`Unexpected txVersion ${JSON.stringify(txVersion)} for hashMode ${hashMode}`);\n            }\n        case AddressHashMode.SerializeP2SH:\n        case AddressHashMode.SerializeP2WPKH:\n        case AddressHashMode.SerializeP2WSH:\n            switch (txVersion) {\n                case TransactionVersion.Mainnet:\n                    return AddressVersion.MainnetMultiSig;\n                case TransactionVersion.Testnet:\n                    return AddressVersion.TestnetMultiSig;\n                default:\n                    throw new Error(`Unexpected txVersion ${JSON.stringify(txVersion)} for hashMode ${hashMode}`);\n            }\n        default:\n            throw new Error(`Unexpected hashMode ${JSON.stringify(hashMode)}`);\n    }\n}\nexport function addressFromVersionHash(version, hash) {\n    return { type: StacksMessageType.Address, version, hash160: hash };\n}\nexport function addressToString(address) {\n    return c32address(address.version, address.hash160);\n}\n//# sourceMappingURL=common.js.map","import { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { getPublicKey as nobleGetPublicKey, Point, Signature, signSync, utils, } from '@noble/secp256k1';\nimport { bytesToHex, concatArray, hexToBigInt, hexToBytes, intToHex, parseRecoverableSignatureVrs, privateKeyToBytes, PRIVATE_KEY_COMPRESSED_LENGTH, signatureRsvToVrs, signatureVrsToRsv, } from '@stacks/common';\nimport { c32address } from 'c32check';\nimport { addressFromVersionHash, addressHashModeToVersion, addressToString, createMessageSignature, } from './common';\nimport { AddressHashMode, COMPRESSED_PUBKEY_LENGTH_BYTES, PubKeyEncoding, StacksMessageType, TransactionVersion, UNCOMPRESSED_PUBKEY_LENGTH_BYTES, } from './constants';\nimport { hash160, hashP2PKH } from './utils';\nutils.hmacSha256Sync = (key, ...msgs) => {\n    const h = hmac.create(sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nexport function getAddressFromPrivateKey(privateKey, transactionVersion = TransactionVersion.Mainnet) {\n    const pubKey = pubKeyfromPrivKey(privateKey);\n    return getAddressFromPublicKey(pubKey.data, transactionVersion);\n}\nexport function getAddressFromPublicKey(publicKey, transactionVersion = TransactionVersion.Mainnet) {\n    publicKey = typeof publicKey === 'string' ? publicKey : bytesToHex(publicKey);\n    const addrVer = addressHashModeToVersion(AddressHashMode.SerializeP2PKH, transactionVersion);\n    const addr = addressFromVersionHash(addrVer, hashP2PKH(hexToBytes(publicKey)));\n    const addrString = addressToString(addr);\n    return addrString;\n}\nexport function createStacksPublicKey(key) {\n    return {\n        type: StacksMessageType.PublicKey,\n        data: hexToBytes(key),\n    };\n}\nexport function publicKeyFromSignatureVrs(messageHash, messageSignature, pubKeyEncoding = PubKeyEncoding.Compressed) {\n    const parsedSignature = parseRecoverableSignatureVrs(messageSignature.data);\n    const signature = new Signature(hexToBigInt(parsedSignature.r), hexToBigInt(parsedSignature.s));\n    const point = Point.fromSignature(messageHash, signature, parsedSignature.recoveryId);\n    const compressed = pubKeyEncoding === PubKeyEncoding.Compressed;\n    return point.toHex(compressed);\n}\nexport function publicKeyFromSignatureRsv(messageHash, messageSignature, pubKeyEncoding = PubKeyEncoding.Compressed) {\n    return publicKeyFromSignatureVrs(messageHash, { ...messageSignature, data: signatureRsvToVrs(messageSignature.data) }, pubKeyEncoding);\n}\nexport function publicKeyFromBytes(data) {\n    return { type: StacksMessageType.PublicKey, data };\n}\nexport function isCompressed(key) {\n    return !bytesToHex(key.data).startsWith('04');\n}\nexport function publicKeyToString(key) {\n    return bytesToHex(key.data);\n}\nexport function serializePublicKey(key) {\n    return key.data.slice();\n}\nexport function pubKeyfromPrivKey(privateKey) {\n    const privKey = createStacksPrivateKey(privateKey);\n    const publicKey = nobleGetPublicKey(privKey.data.slice(0, 32), privKey.compressed);\n    return createStacksPublicKey(bytesToHex(publicKey));\n}\nexport function compressPublicKey(publicKey) {\n    const hex = typeof publicKey === 'string' ? publicKey : bytesToHex(publicKey);\n    const compressed = Point.fromHex(hex).toHex(true);\n    return createStacksPublicKey(compressed);\n}\nexport function deserializePublicKey(bytesReader) {\n    const fieldId = bytesReader.readUInt8();\n    const keyLength = fieldId === 4 ? UNCOMPRESSED_PUBKEY_LENGTH_BYTES : COMPRESSED_PUBKEY_LENGTH_BYTES;\n    return publicKeyFromBytes(concatArray([fieldId, bytesReader.readBytes(keyLength)]));\n}\nexport function createStacksPrivateKey(key) {\n    const data = privateKeyToBytes(key);\n    const compressed = data.length == PRIVATE_KEY_COMPRESSED_LENGTH;\n    return { data, compressed };\n}\nexport function makeRandomPrivKey() {\n    return createStacksPrivateKey(utils.randomPrivateKey());\n}\nexport function signWithKey(privateKey, messageHash) {\n    const [rawSignature, recoveryId] = signSync(messageHash, privateKey.data.slice(0, 32), {\n        canonical: true,\n        recovered: true,\n    });\n    if (recoveryId == null) {\n        throw new Error('No signature recoveryId received');\n    }\n    const recoveryIdHex = intToHex(recoveryId, 1);\n    const recoverableSignatureString = recoveryIdHex + Signature.fromHex(rawSignature).toCompactHex();\n    return createMessageSignature(recoverableSignatureString);\n}\nexport function signMessageHashRsv({ messageHash, privateKey, }) {\n    const messageSignature = signWithKey(privateKey, messageHash);\n    return { ...messageSignature, data: signatureVrsToRsv(messageSignature.data) };\n}\nexport function getPublicKey(privateKey) {\n    return pubKeyfromPrivKey(privateKey.data);\n}\nexport function privateKeyToString(privateKey) {\n    return bytesToHex(privateKey.data);\n}\nexport function publicKeyToAddress(version, publicKey) {\n    return c32address(version, bytesToHex(hash160(publicKey.data)));\n}\n//# sourceMappingURL=keys.js.map","import { hexToBytes } from './utils';\nexport function privateKeyToBytes(privateKey) {\n    const privateKeyBuffer = typeof privateKey === 'string' ? hexToBytes(privateKey) : privateKey;\n    if (privateKeyBuffer.length != 32 && privateKeyBuffer.length != 33) {\n        throw new Error(`Improperly formatted private-key. Private-key byte length should be 32 or 33. Length provided: ${privateKeyBuffer.length}`);\n    }\n    if (privateKeyBuffer.length == 33 && privateKeyBuffer[32] !== 1) {\n        throw new Error('Improperly formatted private-key. 33 bytes indicate compressed key, but the last byte must be == 01');\n    }\n    return privateKeyBuffer;\n}\n//# sourceMappingURL=keys.js.map","import { MAX_STRING_LENGTH_BYTES, PostConditionPrincipalID, StacksMessageType, } from './constants';\nimport { c32addressDecode } from 'c32check';\nimport { exceedsMaxLengthBytes } from './utils';\nexport function parseAssetInfoString(id) {\n    const [assetAddress, assetContractName, assetTokenName] = id.split(/\\.|::/);\n    const assetInfo = createAssetInfo(assetAddress, assetContractName, assetTokenName);\n    return assetInfo;\n}\nexport function createLPString(content, lengthPrefixBytes, maxLengthBytes) {\n    const prefixLength = lengthPrefixBytes || 1;\n    const maxLength = maxLengthBytes || MAX_STRING_LENGTH_BYTES;\n    if (exceedsMaxLengthBytes(content, maxLength)) {\n        throw new Error(`String length exceeds maximum bytes ${maxLength}`);\n    }\n    return {\n        type: StacksMessageType.LengthPrefixedString,\n        content,\n        lengthPrefixBytes: prefixLength,\n        maxLengthBytes: maxLength,\n    };\n}\nexport function createAssetInfo(addressString, contractName, assetName) {\n    return {\n        type: StacksMessageType.AssetInfo,\n        address: createAddress(addressString),\n        contractName: createLPString(contractName),\n        assetName: createLPString(assetName),\n    };\n}\nexport function createAddress(c32AddressString) {\n    const addressData = c32addressDecode(c32AddressString);\n    return {\n        type: StacksMessageType.Address,\n        version: addressData[0],\n        hash160: addressData[1],\n    };\n}\nexport function parsePrincipalString(principalString) {\n    if (principalString.includes('.')) {\n        const [address, contractName] = principalString.split('.');\n        return createContractPrincipal(address, contractName);\n    }\n    else {\n        return createStandardPrincipal(principalString);\n    }\n}\nexport function createContractPrincipal(addressString, contractName) {\n    const addr = createAddress(addressString);\n    const name = createLPString(contractName);\n    return {\n        type: StacksMessageType.Principal,\n        prefix: PostConditionPrincipalID.Contract,\n        address: addr,\n        contractName: name,\n    };\n}\nexport function createStandardPrincipal(addressString) {\n    const addr = createAddress(addressString);\n    return {\n        type: StacksMessageType.Principal,\n        prefix: PostConditionPrincipalID.Standard,\n        address: addr,\n    };\n}\n//# sourceMappingURL=postcondition-types.js.map","import { concatArray, intToBigInt, intToBytes, writeUInt32BE } from '@stacks/common';\nimport { ClarityVersion, COINBASE_BYTES_LENGTH, PayloadType, StacksMessageType } from './constants';\nimport { deserializeCV, serializeCV } from './clarity/';\nimport { principalCV } from './clarity/types/principalCV';\nimport { createAddress, createLPString } from './postcondition-types';\nimport { codeBodyString, createMemoString, deserializeAddress, deserializeLPString, deserializeMemoString, serializeStacksMessage, } from './types';\nexport function isTokenTransferPayload(p) {\n    return p.payloadType === PayloadType.TokenTransfer;\n}\nexport function isContractCallPayload(p) {\n    return p.payloadType === PayloadType.ContractCall;\n}\nexport function isSmartContractPayload(p) {\n    return p.payloadType === PayloadType.SmartContract;\n}\nexport function isPoisonPayload(p) {\n    return p.payloadType === PayloadType.PoisonMicroblock;\n}\nexport function isCoinbasePayload(p) {\n    return p.payloadType === PayloadType.Coinbase;\n}\nexport function createTokenTransferPayload(recipient, amount, memo) {\n    if (typeof recipient === 'string') {\n        recipient = principalCV(recipient);\n    }\n    if (typeof memo === 'string') {\n        memo = createMemoString(memo);\n    }\n    return {\n        type: StacksMessageType.Payload,\n        payloadType: PayloadType.TokenTransfer,\n        recipient,\n        amount: intToBigInt(amount, false),\n        memo: memo ?? createMemoString(''),\n    };\n}\nexport function createContractCallPayload(contractAddress, contractName, functionName, functionArgs) {\n    if (typeof contractAddress === 'string') {\n        contractAddress = createAddress(contractAddress);\n    }\n    if (typeof contractName === 'string') {\n        contractName = createLPString(contractName);\n    }\n    if (typeof functionName === 'string') {\n        functionName = createLPString(functionName);\n    }\n    return {\n        type: StacksMessageType.Payload,\n        payloadType: PayloadType.ContractCall,\n        contractAddress,\n        contractName,\n        functionName,\n        functionArgs,\n    };\n}\nexport function createSmartContractPayload(contractName, codeBody, clarityVersion) {\n    if (typeof contractName === 'string') {\n        contractName = createLPString(contractName);\n    }\n    if (typeof codeBody === 'string') {\n        codeBody = codeBodyString(codeBody);\n    }\n    if (typeof clarityVersion === 'number') {\n        return {\n            type: StacksMessageType.Payload,\n            payloadType: PayloadType.VersionedSmartContract,\n            clarityVersion,\n            contractName,\n            codeBody,\n        };\n    }\n    return {\n        type: StacksMessageType.Payload,\n        payloadType: PayloadType.SmartContract,\n        contractName,\n        codeBody,\n    };\n}\nexport function createPoisonPayload() {\n    return { type: StacksMessageType.Payload, payloadType: PayloadType.PoisonMicroblock };\n}\nexport function createCoinbasePayload(coinbaseBytes, altRecipient) {\n    if (coinbaseBytes.byteLength != COINBASE_BYTES_LENGTH) {\n        throw Error(`Coinbase buffer size must be ${COINBASE_BYTES_LENGTH} bytes`);\n    }\n    if (altRecipient != undefined) {\n        return {\n            type: StacksMessageType.Payload,\n            payloadType: PayloadType.CoinbaseToAltRecipient,\n            coinbaseBytes,\n            recipient: altRecipient,\n        };\n    }\n    return {\n        type: StacksMessageType.Payload,\n        payloadType: PayloadType.Coinbase,\n        coinbaseBytes,\n    };\n}\nexport function serializePayload(payload) {\n    const bytesArray = [];\n    bytesArray.push(payload.payloadType);\n    switch (payload.payloadType) {\n        case PayloadType.TokenTransfer:\n            bytesArray.push(serializeCV(payload.recipient));\n            bytesArray.push(intToBytes(payload.amount, false, 8));\n            bytesArray.push(serializeStacksMessage(payload.memo));\n            break;\n        case PayloadType.ContractCall:\n            bytesArray.push(serializeStacksMessage(payload.contractAddress));\n            bytesArray.push(serializeStacksMessage(payload.contractName));\n            bytesArray.push(serializeStacksMessage(payload.functionName));\n            const numArgs = new Uint8Array(4);\n            writeUInt32BE(numArgs, payload.functionArgs.length, 0);\n            bytesArray.push(numArgs);\n            payload.functionArgs.forEach(arg => {\n                bytesArray.push(serializeCV(arg));\n            });\n            break;\n        case PayloadType.SmartContract:\n            bytesArray.push(serializeStacksMessage(payload.contractName));\n            bytesArray.push(serializeStacksMessage(payload.codeBody));\n            break;\n        case PayloadType.VersionedSmartContract:\n            bytesArray.push(payload.clarityVersion);\n            bytesArray.push(serializeStacksMessage(payload.contractName));\n            bytesArray.push(serializeStacksMessage(payload.codeBody));\n            break;\n        case PayloadType.PoisonMicroblock:\n            break;\n        case PayloadType.Coinbase:\n            bytesArray.push(payload.coinbaseBytes);\n            break;\n        case PayloadType.CoinbaseToAltRecipient:\n            bytesArray.push(payload.coinbaseBytes);\n            bytesArray.push(serializeCV(payload.recipient));\n            break;\n    }\n    return concatArray(bytesArray);\n}\nexport function deserializePayload(bytesReader) {\n    const payloadType = bytesReader.readUInt8Enum(PayloadType, n => {\n        throw new Error(`Cannot recognize PayloadType: ${n}`);\n    });\n    switch (payloadType) {\n        case PayloadType.TokenTransfer:\n            const recipient = deserializeCV(bytesReader);\n            const amount = intToBigInt(bytesReader.readBytes(8), false);\n            const memo = deserializeMemoString(bytesReader);\n            return createTokenTransferPayload(recipient, amount, memo);\n        case PayloadType.ContractCall:\n            const contractAddress = deserializeAddress(bytesReader);\n            const contractCallName = deserializeLPString(bytesReader);\n            const functionName = deserializeLPString(bytesReader);\n            const functionArgs = [];\n            const numberOfArgs = bytesReader.readUInt32BE();\n            for (let i = 0; i < numberOfArgs; i++) {\n                const clarityValue = deserializeCV(bytesReader);\n                functionArgs.push(clarityValue);\n            }\n            return createContractCallPayload(contractAddress, contractCallName, functionName, functionArgs);\n        case PayloadType.SmartContract:\n            const smartContractName = deserializeLPString(bytesReader);\n            const codeBody = deserializeLPString(bytesReader, 4, 100000);\n            return createSmartContractPayload(smartContractName, codeBody);\n        case PayloadType.VersionedSmartContract: {\n            const clarityVersion = bytesReader.readUInt8Enum(ClarityVersion, n => {\n                throw new Error(`Cannot recognize ClarityVersion: ${n}`);\n            });\n            const smartContractName = deserializeLPString(bytesReader);\n            const codeBody = deserializeLPString(bytesReader, 4, 100000);\n            return createSmartContractPayload(smartContractName, codeBody, clarityVersion);\n        }\n        case PayloadType.PoisonMicroblock:\n            return createPoisonPayload();\n        case PayloadType.Coinbase:\n            const coinbaseBytes = bytesReader.readBytes(COINBASE_BYTES_LENGTH);\n            return createCoinbasePayload(coinbaseBytes);\n        case PayloadType.CoinbaseToAltRecipient:\n            const coinbaseToAltRecipientBuffer = bytesReader.readBytes(COINBASE_BYTES_LENGTH);\n            const altRecipient = deserializeCV(bytesReader);\n            return createCoinbasePayload(coinbaseToAltRecipientBuffer, altRecipient);\n    }\n}\n//# sourceMappingURL=payload.js.map","import { DeserializationError } from './errors';\nimport { PubKeyEncoding, RECOVERABLE_ECDSA_SIG_LENGTH_BYTES, StacksMessageType } from './constants';\nimport { compressPublicKey, deserializePublicKey, serializePublicKey, } from './keys';\nimport { createMessageSignature } from './common';\nimport { bytesToHex, concatArray, hexToBytes } from '@stacks/common';\nexport var AuthFieldType;\n(function (AuthFieldType) {\n    AuthFieldType[AuthFieldType[\"PublicKeyCompressed\"] = 0] = \"PublicKeyCompressed\";\n    AuthFieldType[AuthFieldType[\"PublicKeyUncompressed\"] = 1] = \"PublicKeyUncompressed\";\n    AuthFieldType[AuthFieldType[\"SignatureCompressed\"] = 2] = \"SignatureCompressed\";\n    AuthFieldType[AuthFieldType[\"SignatureUncompressed\"] = 3] = \"SignatureUncompressed\";\n})(AuthFieldType || (AuthFieldType = {}));\nexport function deserializeMessageSignature(bytesReader) {\n    return createMessageSignature(bytesToHex(bytesReader.readBytes(RECOVERABLE_ECDSA_SIG_LENGTH_BYTES)));\n}\nexport function createTransactionAuthField(pubKeyEncoding, contents) {\n    return {\n        pubKeyEncoding,\n        type: StacksMessageType.TransactionAuthField,\n        contents,\n    };\n}\nexport function deserializeTransactionAuthField(bytesReader) {\n    const authFieldType = bytesReader.readUInt8Enum(AuthFieldType, n => {\n        throw new DeserializationError(`Could not read ${n} as AuthFieldType`);\n    });\n    switch (authFieldType) {\n        case AuthFieldType.PublicKeyCompressed:\n            return createTransactionAuthField(PubKeyEncoding.Compressed, deserializePublicKey(bytesReader));\n        case AuthFieldType.PublicKeyUncompressed:\n            return createTransactionAuthField(PubKeyEncoding.Uncompressed, deserializePublicKey(bytesReader));\n        case AuthFieldType.SignatureCompressed:\n            return createTransactionAuthField(PubKeyEncoding.Compressed, deserializeMessageSignature(bytesReader));\n        case AuthFieldType.SignatureUncompressed:\n            return createTransactionAuthField(PubKeyEncoding.Uncompressed, deserializeMessageSignature(bytesReader));\n        default:\n            throw new Error(`Unknown auth field type: ${JSON.stringify(authFieldType)}`);\n    }\n}\nexport function serializeMessageSignature(messageSignature) {\n    return hexToBytes(messageSignature.data);\n}\nexport function serializeTransactionAuthField(field) {\n    const bytesArray = [];\n    switch (field.contents.type) {\n        case StacksMessageType.PublicKey:\n            if (field.pubKeyEncoding == PubKeyEncoding.Compressed) {\n                bytesArray.push(AuthFieldType.PublicKeyCompressed);\n                bytesArray.push(serializePublicKey(field.contents));\n            }\n            else {\n                bytesArray.push(AuthFieldType.PublicKeyUncompressed);\n                bytesArray.push(serializePublicKey(compressPublicKey(field.contents.data)));\n            }\n            break;\n        case StacksMessageType.MessageSignature:\n            if (field.pubKeyEncoding == PubKeyEncoding.Compressed) {\n                bytesArray.push(AuthFieldType.SignatureCompressed);\n            }\n            else {\n                bytesArray.push(AuthFieldType.SignatureUncompressed);\n            }\n            bytesArray.push(serializeMessageSignature(field.contents));\n            break;\n    }\n    return concatArray(bytesArray);\n}\n//# sourceMappingURL=signature.js.map","export var ClarityType;\n(function (ClarityType) {\n    ClarityType[ClarityType[\"Int\"] = 0] = \"Int\";\n    ClarityType[ClarityType[\"UInt\"] = 1] = \"UInt\";\n    ClarityType[ClarityType[\"Buffer\"] = 2] = \"Buffer\";\n    ClarityType[ClarityType[\"BoolTrue\"] = 3] = \"BoolTrue\";\n    ClarityType[ClarityType[\"BoolFalse\"] = 4] = \"BoolFalse\";\n    ClarityType[ClarityType[\"PrincipalStandard\"] = 5] = \"PrincipalStandard\";\n    ClarityType[ClarityType[\"PrincipalContract\"] = 6] = \"PrincipalContract\";\n    ClarityType[ClarityType[\"ResponseOk\"] = 7] = \"ResponseOk\";\n    ClarityType[ClarityType[\"ResponseErr\"] = 8] = \"ResponseErr\";\n    ClarityType[ClarityType[\"OptionalNone\"] = 9] = \"OptionalNone\";\n    ClarityType[ClarityType[\"OptionalSome\"] = 10] = \"OptionalSome\";\n    ClarityType[ClarityType[\"List\"] = 11] = \"List\";\n    ClarityType[ClarityType[\"Tuple\"] = 12] = \"Tuple\";\n    ClarityType[ClarityType[\"StringASCII\"] = 13] = \"StringASCII\";\n    ClarityType[ClarityType[\"StringUTF8\"] = 14] = \"StringUTF8\";\n})(ClarityType || (ClarityType = {}));\n//# sourceMappingURL=constants.js.map","import { bytesToHex, bytesToUtf8, concatArray, hexToBytes, hexToInt, intToBytes, intToHex, utf8ToBytes, } from '@stacks/common';\nimport { MEMO_MAX_LENGTH_BYTES, AddressHashMode, AddressVersion, StacksMessageType, PostConditionPrincipalID, PostConditionType, FungibleConditionCode, NonFungibleConditionCode, } from './constants';\nimport { serializePublicKey, deserializePublicKey, isCompressed } from './keys';\nimport { exceedsMaxLengthBytes, hashP2PKH, rightPadHexToLength, hashP2SH, hashP2WSH, hashP2WPKH, } from './utils';\nimport { createLPString, } from './postcondition-types';\nimport { deserializePayload, serializePayload } from './payload';\nimport { DeserializationError } from './errors';\nimport { deserializeTransactionAuthField, deserializeMessageSignature, serializeMessageSignature, serializeTransactionAuthField, } from './signature';\nimport { addressHashModeToVersion, addressFromVersionHash, } from './common';\nimport { deserializeCV, serializeCV } from './clarity';\nexport function serializeStacksMessage(message) {\n    switch (message.type) {\n        case StacksMessageType.Address:\n            return serializeAddress(message);\n        case StacksMessageType.Principal:\n            return serializePrincipal(message);\n        case StacksMessageType.LengthPrefixedString:\n            return serializeLPString(message);\n        case StacksMessageType.MemoString:\n            return serializeMemoString(message);\n        case StacksMessageType.AssetInfo:\n            return serializeAssetInfo(message);\n        case StacksMessageType.PostCondition:\n            return serializePostCondition(message);\n        case StacksMessageType.PublicKey:\n            return serializePublicKey(message);\n        case StacksMessageType.LengthPrefixedList:\n            return serializeLPList(message);\n        case StacksMessageType.Payload:\n            return serializePayload(message);\n        case StacksMessageType.TransactionAuthField:\n            return serializeTransactionAuthField(message);\n        case StacksMessageType.MessageSignature:\n            return serializeMessageSignature(message);\n    }\n}\nexport function deserializeStacksMessage(bytesReader, type, listType) {\n    switch (type) {\n        case StacksMessageType.Address:\n            return deserializeAddress(bytesReader);\n        case StacksMessageType.Principal:\n            return deserializePrincipal(bytesReader);\n        case StacksMessageType.LengthPrefixedString:\n            return deserializeLPString(bytesReader);\n        case StacksMessageType.MemoString:\n            return deserializeMemoString(bytesReader);\n        case StacksMessageType.AssetInfo:\n            return deserializeAssetInfo(bytesReader);\n        case StacksMessageType.PostCondition:\n            return deserializePostCondition(bytesReader);\n        case StacksMessageType.PublicKey:\n            return deserializePublicKey(bytesReader);\n        case StacksMessageType.Payload:\n            return deserializePayload(bytesReader);\n        case StacksMessageType.LengthPrefixedList:\n            if (!listType) {\n                throw new DeserializationError('No List Type specified');\n            }\n            return deserializeLPList(bytesReader, listType);\n        case StacksMessageType.MessageSignature:\n            return deserializeMessageSignature(bytesReader);\n        default:\n            throw new Error('Could not recognize StacksMessageType');\n    }\n}\nexport function createEmptyAddress() {\n    return {\n        type: StacksMessageType.Address,\n        version: AddressVersion.MainnetSingleSig,\n        hash160: '0'.repeat(40),\n    };\n}\nexport function addressFromHashMode(hashMode, txVersion, data) {\n    const version = addressHashModeToVersion(hashMode, txVersion);\n    return addressFromVersionHash(version, data);\n}\nexport function addressFromPublicKeys(version, hashMode, numSigs, publicKeys) {\n    if (publicKeys.length === 0) {\n        throw Error('Invalid number of public keys');\n    }\n    if (hashMode === AddressHashMode.SerializeP2PKH || hashMode === AddressHashMode.SerializeP2WPKH) {\n        if (publicKeys.length !== 1 || numSigs !== 1) {\n            throw Error('Invalid number of public keys or signatures');\n        }\n    }\n    if (hashMode === AddressHashMode.SerializeP2WPKH || hashMode === AddressHashMode.SerializeP2WSH) {\n        for (let i = 0; i < publicKeys.length; i++) {\n            if (!isCompressed(publicKeys[i])) {\n                throw Error('Public keys must be compressed for segwit');\n            }\n        }\n    }\n    switch (hashMode) {\n        case AddressHashMode.SerializeP2PKH:\n            return addressFromVersionHash(version, hashP2PKH(publicKeys[0].data));\n        case AddressHashMode.SerializeP2WPKH:\n            return addressFromVersionHash(version, hashP2WPKH(publicKeys[0].data));\n        case AddressHashMode.SerializeP2SH:\n            return addressFromVersionHash(version, hashP2SH(numSigs, publicKeys.map(serializePublicKey)));\n        case AddressHashMode.SerializeP2WSH:\n            return addressFromVersionHash(version, hashP2WSH(numSigs, publicKeys.map(serializePublicKey)));\n    }\n}\nexport function serializeAddress(address) {\n    const bytesArray = [];\n    bytesArray.push(hexToBytes(intToHex(address.version, 1)));\n    bytesArray.push(hexToBytes(address.hash160));\n    return concatArray(bytesArray);\n}\nexport function deserializeAddress(bytesReader) {\n    const version = hexToInt(bytesToHex(bytesReader.readBytes(1)));\n    const data = bytesToHex(bytesReader.readBytes(20));\n    return { type: StacksMessageType.Address, version, hash160: data };\n}\nexport function serializePrincipal(principal) {\n    const bytesArray = [];\n    bytesArray.push(principal.prefix);\n    bytesArray.push(serializeAddress(principal.address));\n    if (principal.prefix === PostConditionPrincipalID.Contract) {\n        bytesArray.push(serializeLPString(principal.contractName));\n    }\n    return concatArray(bytesArray);\n}\nexport function deserializePrincipal(bytesReader) {\n    const prefix = bytesReader.readUInt8Enum(PostConditionPrincipalID, n => {\n        throw new DeserializationError(`Unexpected Principal payload type: ${n}`);\n    });\n    const address = deserializeAddress(bytesReader);\n    if (prefix === PostConditionPrincipalID.Standard) {\n        return { type: StacksMessageType.Principal, prefix, address };\n    }\n    const contractName = deserializeLPString(bytesReader);\n    return {\n        type: StacksMessageType.Principal,\n        prefix,\n        address,\n        contractName,\n    };\n}\nexport function serializeLPString(lps) {\n    const bytesArray = [];\n    const contentBytes = utf8ToBytes(lps.content);\n    const length = contentBytes.byteLength;\n    bytesArray.push(hexToBytes(intToHex(length, lps.lengthPrefixBytes)));\n    bytesArray.push(contentBytes);\n    return concatArray(bytesArray);\n}\nexport function deserializeLPString(bytesReader, prefixBytes, maxLength) {\n    prefixBytes = prefixBytes ? prefixBytes : 1;\n    const length = hexToInt(bytesToHex(bytesReader.readBytes(prefixBytes)));\n    const content = bytesToUtf8(bytesReader.readBytes(length));\n    return createLPString(content, prefixBytes, maxLength ?? 128);\n}\nexport function codeBodyString(content) {\n    return createLPString(content, 4, 100000);\n}\nexport function createMemoString(content) {\n    if (content && exceedsMaxLengthBytes(content, MEMO_MAX_LENGTH_BYTES)) {\n        throw new Error(`Memo exceeds maximum length of ${MEMO_MAX_LENGTH_BYTES} bytes`);\n    }\n    return { type: StacksMessageType.MemoString, content };\n}\nexport function serializeMemoString(memoString) {\n    const bytesArray = [];\n    const contentBytes = utf8ToBytes(memoString.content);\n    const paddedContent = rightPadHexToLength(bytesToHex(contentBytes), MEMO_MAX_LENGTH_BYTES * 2);\n    bytesArray.push(hexToBytes(paddedContent));\n    return concatArray(bytesArray);\n}\nexport function deserializeMemoString(bytesReader) {\n    const content = bytesToUtf8(bytesReader.readBytes(MEMO_MAX_LENGTH_BYTES));\n    return { type: StacksMessageType.MemoString, content };\n}\nexport function serializeAssetInfo(info) {\n    const bytesArray = [];\n    bytesArray.push(serializeAddress(info.address));\n    bytesArray.push(serializeLPString(info.contractName));\n    bytesArray.push(serializeLPString(info.assetName));\n    return concatArray(bytesArray);\n}\nexport function deserializeAssetInfo(bytesReader) {\n    return {\n        type: StacksMessageType.AssetInfo,\n        address: deserializeAddress(bytesReader),\n        contractName: deserializeLPString(bytesReader),\n        assetName: deserializeLPString(bytesReader),\n    };\n}\nexport function createLPList(values, lengthPrefixBytes) {\n    return {\n        type: StacksMessageType.LengthPrefixedList,\n        lengthPrefixBytes: lengthPrefixBytes || 4,\n        values,\n    };\n}\nexport function serializeLPList(lpList) {\n    const list = lpList.values;\n    const bytesArray = [];\n    bytesArray.push(hexToBytes(intToHex(list.length, lpList.lengthPrefixBytes)));\n    for (const l of list) {\n        bytesArray.push(serializeStacksMessage(l));\n    }\n    return concatArray(bytesArray);\n}\nexport function deserializeLPList(bytesReader, type, lengthPrefixBytes) {\n    const length = hexToInt(bytesToHex(bytesReader.readBytes(lengthPrefixBytes || 4)));\n    const l = [];\n    for (let index = 0; index < length; index++) {\n        switch (type) {\n            case StacksMessageType.Address:\n                l.push(deserializeAddress(bytesReader));\n                break;\n            case StacksMessageType.LengthPrefixedString:\n                l.push(deserializeLPString(bytesReader));\n                break;\n            case StacksMessageType.MemoString:\n                l.push(deserializeMemoString(bytesReader));\n                break;\n            case StacksMessageType.AssetInfo:\n                l.push(deserializeAssetInfo(bytesReader));\n                break;\n            case StacksMessageType.PostCondition:\n                l.push(deserializePostCondition(bytesReader));\n                break;\n            case StacksMessageType.PublicKey:\n                l.push(deserializePublicKey(bytesReader));\n                break;\n            case StacksMessageType.TransactionAuthField:\n                l.push(deserializeTransactionAuthField(bytesReader));\n                break;\n        }\n    }\n    return createLPList(l, lengthPrefixBytes);\n}\nexport function serializePostCondition(postCondition) {\n    const bytesArray = [];\n    bytesArray.push(postCondition.conditionType);\n    bytesArray.push(serializePrincipal(postCondition.principal));\n    if (postCondition.conditionType === PostConditionType.Fungible ||\n        postCondition.conditionType === PostConditionType.NonFungible) {\n        bytesArray.push(serializeAssetInfo(postCondition.assetInfo));\n    }\n    if (postCondition.conditionType === PostConditionType.NonFungible) {\n        bytesArray.push(serializeCV(postCondition.assetName));\n    }\n    bytesArray.push(postCondition.conditionCode);\n    if (postCondition.conditionType === PostConditionType.STX ||\n        postCondition.conditionType === PostConditionType.Fungible) {\n        bytesArray.push(intToBytes(postCondition.amount, false, 8));\n    }\n    return concatArray(bytesArray);\n}\nexport function deserializePostCondition(bytesReader) {\n    const postConditionType = bytesReader.readUInt8Enum(PostConditionType, n => {\n        throw new DeserializationError(`Could not read ${n} as PostConditionType`);\n    });\n    const principal = deserializePrincipal(bytesReader);\n    let conditionCode;\n    let assetInfo;\n    let amount;\n    switch (postConditionType) {\n        case PostConditionType.STX:\n            conditionCode = bytesReader.readUInt8Enum(FungibleConditionCode, n => {\n                throw new DeserializationError(`Could not read ${n} as FungibleConditionCode`);\n            });\n            amount = BigInt(`0x${bytesToHex(bytesReader.readBytes(8))}`);\n            return {\n                type: StacksMessageType.PostCondition,\n                conditionType: PostConditionType.STX,\n                principal,\n                conditionCode,\n                amount,\n            };\n        case PostConditionType.Fungible:\n            assetInfo = deserializeAssetInfo(bytesReader);\n            conditionCode = bytesReader.readUInt8Enum(FungibleConditionCode, n => {\n                throw new DeserializationError(`Could not read ${n} as FungibleConditionCode`);\n            });\n            amount = BigInt(`0x${bytesToHex(bytesReader.readBytes(8))}`);\n            return {\n                type: StacksMessageType.PostCondition,\n                conditionType: PostConditionType.Fungible,\n                principal,\n                conditionCode,\n                amount,\n                assetInfo,\n            };\n        case PostConditionType.NonFungible:\n            assetInfo = deserializeAssetInfo(bytesReader);\n            const assetName = deserializeCV(bytesReader);\n            conditionCode = bytesReader.readUInt8Enum(NonFungibleConditionCode, n => {\n                throw new DeserializationError(`Could not read ${n} as FungibleConditionCode`);\n            });\n            return {\n                type: StacksMessageType.PostCondition,\n                conditionType: PostConditionType.NonFungible,\n                principal,\n                conditionCode,\n                assetInfo,\n                assetName,\n            };\n    }\n}\n//# sourceMappingURL=types.js.map","class TransactionError extends Error {\n    constructor(message) {\n        super(message);\n        this.message = message;\n        this.name = this.constructor.name;\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class SerializationError extends TransactionError {\n    constructor(message) {\n        super(message);\n    }\n}\nexport class DeserializationError extends TransactionError {\n    constructor(message) {\n        super(message);\n    }\n}\nexport class NoEstimateAvailableError extends TransactionError {\n    constructor(message) {\n        super(message);\n    }\n}\nexport class NotImplementedError extends TransactionError {\n    constructor(message) {\n        super(message);\n    }\n}\nexport class SigningError extends TransactionError {\n    constructor(message) {\n        super(message);\n    }\n}\nexport class VerificationError extends TransactionError {\n    constructor(message) {\n        super(message);\n    }\n}\n//# sourceMappingURL=errors.js.map","import { concatArray, concatBytes, bigIntToBytes, toTwos, writeUInt32BE, utf8ToBytes, asciiToBytes, } from '@stacks/common';\nimport { serializeAddress, serializeLPString } from '../types';\nimport { createLPString } from '../postcondition-types';\nimport { ClarityType } from './constants';\nimport { SerializationError } from '../errors';\nimport { CLARITY_INT_BYTE_SIZE, CLARITY_INT_SIZE } from '../constants';\nfunction bytesWithTypeID(typeId, bytes) {\n    return concatArray([typeId, bytes]);\n}\nfunction serializeBoolCV(value) {\n    return new Uint8Array([value.type]);\n}\nfunction serializeOptionalCV(cv) {\n    if (cv.type === ClarityType.OptionalNone) {\n        return new Uint8Array([cv.type]);\n    }\n    else {\n        return bytesWithTypeID(cv.type, serializeCV(cv.value));\n    }\n}\nfunction serializeBufferCV(cv) {\n    const length = new Uint8Array(4);\n    writeUInt32BE(length, cv.buffer.length, 0);\n    return bytesWithTypeID(cv.type, concatBytes(length, cv.buffer));\n}\nfunction serializeIntCV(cv) {\n    const bytes = bigIntToBytes(toTwos(cv.value, BigInt(CLARITY_INT_SIZE)), CLARITY_INT_BYTE_SIZE);\n    return bytesWithTypeID(cv.type, bytes);\n}\nfunction serializeUIntCV(cv) {\n    const bytes = bigIntToBytes(cv.value, CLARITY_INT_BYTE_SIZE);\n    return bytesWithTypeID(cv.type, bytes);\n}\nfunction serializeStandardPrincipalCV(cv) {\n    return bytesWithTypeID(cv.type, serializeAddress(cv.address));\n}\nfunction serializeContractPrincipalCV(cv) {\n    return bytesWithTypeID(cv.type, concatBytes(serializeAddress(cv.address), serializeLPString(cv.contractName)));\n}\nfunction serializeResponseCV(cv) {\n    return bytesWithTypeID(cv.type, serializeCV(cv.value));\n}\nfunction serializeListCV(cv) {\n    const bytesArray = [];\n    const length = new Uint8Array(4);\n    writeUInt32BE(length, cv.list.length, 0);\n    bytesArray.push(length);\n    for (const value of cv.list) {\n        const serializedValue = serializeCV(value);\n        bytesArray.push(serializedValue);\n    }\n    return bytesWithTypeID(cv.type, concatArray(bytesArray));\n}\nfunction serializeTupleCV(cv) {\n    const bytesArray = [];\n    const length = new Uint8Array(4);\n    writeUInt32BE(length, Object.keys(cv.data).length, 0);\n    bytesArray.push(length);\n    const lexicographicOrder = Object.keys(cv.data).sort((a, b) => a.localeCompare(b));\n    for (const key of lexicographicOrder) {\n        const nameWithLength = createLPString(key);\n        bytesArray.push(serializeLPString(nameWithLength));\n        const serializedValue = serializeCV(cv.data[key]);\n        bytesArray.push(serializedValue);\n    }\n    return bytesWithTypeID(cv.type, concatArray(bytesArray));\n}\nfunction serializeStringCV(cv, encoding) {\n    const bytesArray = [];\n    const str = encoding == 'ascii' ? asciiToBytes(cv.data) : utf8ToBytes(cv.data);\n    const len = new Uint8Array(4);\n    writeUInt32BE(len, str.length, 0);\n    bytesArray.push(len);\n    bytesArray.push(str);\n    return bytesWithTypeID(cv.type, concatArray(bytesArray));\n}\nfunction serializeStringAsciiCV(cv) {\n    return serializeStringCV(cv, 'ascii');\n}\nfunction serializeStringUtf8CV(cv) {\n    return serializeStringCV(cv, 'utf8');\n}\nexport function serializeCV(value) {\n    switch (value.type) {\n        case ClarityType.BoolTrue:\n        case ClarityType.BoolFalse:\n            return serializeBoolCV(value);\n        case ClarityType.OptionalNone:\n        case ClarityType.OptionalSome:\n            return serializeOptionalCV(value);\n        case ClarityType.Buffer:\n            return serializeBufferCV(value);\n        case ClarityType.UInt:\n            return serializeUIntCV(value);\n        case ClarityType.Int:\n            return serializeIntCV(value);\n        case ClarityType.PrincipalStandard:\n            return serializeStandardPrincipalCV(value);\n        case ClarityType.PrincipalContract:\n            return serializeContractPrincipalCV(value);\n        case ClarityType.ResponseOk:\n        case ClarityType.ResponseErr:\n            return serializeResponseCV(value);\n        case ClarityType.List:\n            return serializeListCV(value);\n        case ClarityType.Tuple:\n            return serializeTupleCV(value);\n        case ClarityType.StringASCII:\n            return serializeStringAsciiCV(value);\n        case ClarityType.StringUTF8:\n            return serializeStringUtf8CV(value);\n        default:\n            throw new SerializationError('Unable to serialize. Invalid Clarity Value.');\n    }\n}\n//# sourceMappingURL=serialize.js.map","import { intToBigInt } from '@stacks/common';\nimport { ClarityType } from '../constants';\nconst MAX_U128 = BigInt('0xffffffffffffffffffffffffffffffff');\nconst MIN_U128 = BigInt(0);\nconst MAX_I128 = BigInt('0x7fffffffffffffffffffffffffffffff');\nconst MIN_I128 = BigInt('-170141183460469231731687303715884105728');\nconst intCV = (value) => {\n    const bigInt = intToBigInt(value, true);\n    if (bigInt > MAX_I128) {\n        throw new RangeError(`Cannot construct clarity integer from value greater than ${MAX_I128}`);\n    }\n    else if (bigInt < MIN_I128) {\n        throw new RangeError(`Cannot construct clarity integer form value less than ${MIN_I128}`);\n    }\n    return { type: ClarityType.Int, value: bigInt };\n};\nconst uintCV = (value) => {\n    const bigInt = intToBigInt(value, false);\n    if (bigInt < MIN_U128) {\n        throw new RangeError('Cannot construct unsigned clarity integer from negative value');\n    }\n    else if (bigInt > MAX_U128) {\n        throw new RangeError(`Cannot construct unsigned clarity integer greater than ${MAX_U128}`);\n    }\n    return { type: ClarityType.UInt, value: bigInt };\n};\nexport { intCV, uintCV };\n//# sourceMappingURL=intCV.js.map","import { utf8ToBytes } from '@stacks/common';\nimport { ClarityType } from '../constants';\nconst bufferCV = (buffer) => {\n    if (buffer.length > 1000000) {\n        throw new Error('Cannot construct clarity buffer that is greater than 1MB');\n    }\n    return { type: ClarityType.Buffer, buffer };\n};\nconst bufferCVFromString = (str) => bufferCV(utf8ToBytes(str));\nexport { bufferCV, bufferCVFromString };\n//# sourceMappingURL=bufferCV.js.map","import { utf8ToBytes } from '@stacks/common';\nimport { addressToString } from '../../common';\nimport { createAddress, createLPString } from '../../postcondition-types';\nimport { ClarityType } from '../constants';\nfunction principalToString(principal) {\n    if (principal.type === ClarityType.PrincipalStandard) {\n        return addressToString(principal.address);\n    }\n    else if (principal.type === ClarityType.PrincipalContract) {\n        const address = addressToString(principal.address);\n        return `${address}.${principal.contractName.content}`;\n    }\n    else {\n        throw new Error(`Unexpected principal data: ${JSON.stringify(principal)}`);\n    }\n}\nfunction principalCV(principal) {\n    if (principal.includes('.')) {\n        const [address, contractName] = principal.split('.');\n        return contractPrincipalCV(address, contractName);\n    }\n    else {\n        return standardPrincipalCV(principal);\n    }\n}\nfunction standardPrincipalCV(addressString) {\n    const addr = createAddress(addressString);\n    return { type: ClarityType.PrincipalStandard, address: addr };\n}\nfunction standardPrincipalCVFromAddress(address) {\n    return { type: ClarityType.PrincipalStandard, address };\n}\nfunction contractPrincipalCV(addressString, contractName) {\n    const addr = createAddress(addressString);\n    const lengthPrefixedContractName = createLPString(contractName);\n    return contractPrincipalCVFromAddress(addr, lengthPrefixedContractName);\n}\nfunction contractPrincipalCVFromAddress(address, contractName) {\n    if (utf8ToBytes(contractName.content).byteLength >= 128) {\n        throw new Error('Contract name must be less than 128 bytes');\n    }\n    return { type: ClarityType.PrincipalContract, address, contractName };\n}\nfunction contractPrincipalCVFromStandard(sp, contractName) {\n    const lengthPrefixedContractName = createLPString(contractName);\n    return {\n        type: ClarityType.PrincipalContract,\n        address: sp.address,\n        contractName: lengthPrefixedContractName,\n    };\n}\nexport { principalCV, principalToString, standardPrincipalCV, standardPrincipalCVFromAddress, contractPrincipalCV, contractPrincipalCVFromAddress, contractPrincipalCVFromStandard, };\n//# sourceMappingURL=principalCV.js.map","import { ClarityType } from '../constants';\nfunction noneCV() {\n    return { type: ClarityType.OptionalNone };\n}\nfunction someCV(value) {\n    return { type: ClarityType.OptionalSome, value };\n}\nfunction optionalCVOf(value) {\n    if (value) {\n        return someCV(value);\n    }\n    else {\n        return noneCV();\n    }\n}\nexport { noneCV, someCV, optionalCVOf };\n//# sourceMappingURL=optionalCV.js.map","import { ClarityType } from '../constants';\nimport { isClarityName } from '../../utils';\nfunction tupleCV(data) {\n    for (const key in data) {\n        if (!isClarityName(key)) {\n            throw new Error(`\"${key}\" is not a valid Clarity name`);\n        }\n    }\n    return { type: ClarityType.Tuple, data };\n}\nexport { tupleCV };\n//# sourceMappingURL=tupleCV.js.map","import { ripemd160 } from '@noble/hashes/ripemd160';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512_256 } from '@noble/hashes/sha512';\nimport { utils } from '@noble/secp256k1';\nimport { bytesToHex, concatArray, concatBytes, utf8ToBytes, with0x } from '@stacks/common';\nimport { c32addressDecode } from 'c32check';\nimport lodashCloneDeep from 'lodash.clonedeep';\nimport { deserializeCV, serializeCV } from './clarity';\nexport { verify as verifySignature } from '@noble/secp256k1';\nexport const randomBytes = (bytesLength) => utils.randomBytes(bytesLength);\nexport const leftPadHex = (hexString) => hexString.length % 2 == 0 ? hexString : `0${hexString}`;\nexport const leftPadHexToLength = (hexString, length) => hexString.padStart(length, '0');\nexport const rightPadHexToLength = (hexString, length) => hexString.padEnd(length, '0');\nexport const exceedsMaxLengthBytes = (string, maxLengthBytes) => string ? utf8ToBytes(string).length > maxLengthBytes : false;\nexport function cloneDeep(obj) {\n    return lodashCloneDeep(obj);\n}\nexport function omit(obj, prop) {\n    const clone = cloneDeep(obj);\n    delete clone[prop];\n    return clone;\n}\nexport const txidFromData = (data) => {\n    return bytesToHex(sha512_256(data));\n};\nexport const hash160 = (input) => {\n    return ripemd160(sha256(input));\n};\nexport const hashP2PKH = (input) => {\n    return bytesToHex(hash160(input));\n};\nexport const hashP2WPKH = (input) => {\n    const keyHash = hash160(input);\n    const redeemScript = concatBytes(new Uint8Array([0]), new Uint8Array([keyHash.length]), keyHash);\n    const redeemScriptHash = hash160(redeemScript);\n    return bytesToHex(redeemScriptHash);\n};\nexport const hashP2SH = (numSigs, pubKeys) => {\n    if (numSigs > 15 || pubKeys.length > 15) {\n        throw Error('P2SH multisig address can only contain up to 15 public keys');\n    }\n    const bytesArray = [];\n    bytesArray.push(80 + numSigs);\n    pubKeys.forEach(pubKey => {\n        bytesArray.push(pubKey.length);\n        bytesArray.push(pubKey);\n    });\n    bytesArray.push(80 + pubKeys.length);\n    bytesArray.push(174);\n    const redeemScript = concatArray(bytesArray);\n    const redeemScriptHash = hash160(redeemScript);\n    return bytesToHex(redeemScriptHash);\n};\nexport const hashP2WSH = (numSigs, pubKeys) => {\n    if (numSigs > 15 || pubKeys.length > 15) {\n        throw Error('P2WSH multisig address can only contain up to 15 public keys');\n    }\n    const scriptArray = [];\n    scriptArray.push(80 + numSigs);\n    pubKeys.forEach(pubKey => {\n        scriptArray.push(pubKey.length);\n        scriptArray.push(pubKey);\n    });\n    scriptArray.push(80 + pubKeys.length);\n    scriptArray.push(174);\n    const script = concatArray(scriptArray);\n    const digest = sha256(script);\n    const bytesArray = [];\n    bytesArray.push(0);\n    bytesArray.push(digest.length);\n    bytesArray.push(digest);\n    const redeemScript = concatArray(bytesArray);\n    const redeemScriptHash = hash160(redeemScript);\n    return bytesToHex(redeemScriptHash);\n};\nexport function isClarityName(name) {\n    const regex = /^[a-zA-Z]([a-zA-Z0-9]|[-_!?+<>=/*])*$|^[-+=/*]$|^[<>]=?$/;\n    return regex.test(name) && name.length < 128;\n}\nexport function cvToHex(cv) {\n    const serialized = serializeCV(cv);\n    return `0x${bytesToHex(serialized)}`;\n}\nexport function hexToCV(hex) {\n    return deserializeCV(hex);\n}\nexport const parseReadOnlyResponse = (response) => {\n    if (response.okay)\n        return hexToCV(response.result);\n    throw new Error(response.cause);\n};\nexport const validateStacksAddress = (stacksAddress) => {\n    try {\n        c32addressDecode(stacksAddress);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n};\nexport const validateTxId = (txid) => {\n    if (txid === 'success')\n        return true;\n    const value = with0x(txid).toLowerCase();\n    if (value.length !== 66)\n        return false;\n    return with0x(BigInt(value).toString(16).padStart(64, '0')) === value;\n};\n//# sourceMappingURL=utils.js.map","import { bytesToHex, readUInt16BE, readUInt32BE, readUInt8 } from '@stacks/common';\nfunction createEnumChecker(enumVariable) {\n    const enumValues = Object.values(enumVariable).filter(v => typeof v === 'number');\n    const enumValueSet = new Set(enumValues);\n    return (value) => enumValueSet.has(value);\n}\nconst enumCheckFunctions = new Map();\nexport function isEnum(enumVariable, value) {\n    const checker = enumCheckFunctions.get(enumVariable);\n    if (checker !== undefined) {\n        return checker(value);\n    }\n    const newChecker = createEnumChecker(enumVariable);\n    enumCheckFunctions.set(enumVariable, newChecker);\n    return isEnum(enumVariable, value);\n}\nexport class BytesReader {\n    constructor(arr) {\n        this.consumed = 0;\n        this.source = arr;\n    }\n    readBytes(length) {\n        const view = this.source.subarray(this.consumed, this.consumed + length);\n        this.consumed += length;\n        return view;\n    }\n    readUInt32BE() {\n        return readUInt32BE(this.readBytes(4), 0);\n    }\n    readUInt8() {\n        return readUInt8(this.readBytes(1), 0);\n    }\n    readUInt16BE() {\n        return readUInt16BE(this.readBytes(2), 0);\n    }\n    readBigUIntLE(length) {\n        const bytes = this.readBytes(length).slice().reverse();\n        const hex = bytesToHex(bytes);\n        return BigInt(`0x${hex}`);\n    }\n    readBigUIntBE(length) {\n        const bytes = this.readBytes(length);\n        const hex = bytesToHex(bytes);\n        return BigInt(`0x${hex}`);\n    }\n    get readOffset() {\n        return this.consumed;\n    }\n    set readOffset(val) {\n        this.consumed = val;\n    }\n    get internalBytes() {\n        return this.source;\n    }\n    readUInt8Enum(enumVariable, invalidEnumErrorFormatter) {\n        const num = this.readUInt8();\n        if (isEnum(enumVariable, num)) {\n            return num;\n        }\n        throw invalidEnumErrorFormatter(num);\n    }\n}\n//# sourceMappingURL=bytesReader.js.map","import { ClarityType, intCV, uintCV, bufferCV, trueCV, falseCV, standardPrincipalCVFromAddress, contractPrincipalCVFromAddress, responseOkCV, responseErrorCV, noneCV, someCV, listCV, tupleCV, } from '.';\nimport { BytesReader as BytesReader } from '../bytesReader';\nimport { deserializeAddress, deserializeLPString } from '../types';\nimport { DeserializationError } from '../errors';\nimport { stringAsciiCV, stringUtf8CV } from './types/stringCV';\nimport { bytesToAscii, bytesToUtf8, hexToBytes } from '@stacks/common';\nexport default function deserializeCV(serializedClarityValue) {\n    let bytesReader;\n    if (typeof serializedClarityValue === 'string') {\n        const hasHexPrefix = serializedClarityValue.slice(0, 2).toLowerCase() === '0x';\n        bytesReader = new BytesReader(hexToBytes(hasHexPrefix ? serializedClarityValue.slice(2) : serializedClarityValue));\n    }\n    else if (serializedClarityValue instanceof Uint8Array) {\n        bytesReader = new BytesReader(serializedClarityValue);\n    }\n    else {\n        bytesReader = serializedClarityValue;\n    }\n    const type = bytesReader.readUInt8Enum(ClarityType, n => {\n        throw new DeserializationError(`Cannot recognize Clarity Type: ${n}`);\n    });\n    switch (type) {\n        case ClarityType.Int:\n            return intCV(bytesReader.readBytes(16));\n        case ClarityType.UInt:\n            return uintCV(bytesReader.readBytes(16));\n        case ClarityType.Buffer:\n            const bufferLength = bytesReader.readUInt32BE();\n            return bufferCV(bytesReader.readBytes(bufferLength));\n        case ClarityType.BoolTrue:\n            return trueCV();\n        case ClarityType.BoolFalse:\n            return falseCV();\n        case ClarityType.PrincipalStandard:\n            const sAddress = deserializeAddress(bytesReader);\n            return standardPrincipalCVFromAddress(sAddress);\n        case ClarityType.PrincipalContract:\n            const cAddress = deserializeAddress(bytesReader);\n            const contractName = deserializeLPString(bytesReader);\n            return contractPrincipalCVFromAddress(cAddress, contractName);\n        case ClarityType.ResponseOk:\n            return responseOkCV(deserializeCV(bytesReader));\n        case ClarityType.ResponseErr:\n            return responseErrorCV(deserializeCV(bytesReader));\n        case ClarityType.OptionalNone:\n            return noneCV();\n        case ClarityType.OptionalSome:\n            return someCV(deserializeCV(bytesReader));\n        case ClarityType.List:\n            const listLength = bytesReader.readUInt32BE();\n            const listContents = [];\n            for (let i = 0; i < listLength; i++) {\n                listContents.push(deserializeCV(bytesReader));\n            }\n            return listCV(listContents);\n        case ClarityType.Tuple:\n            const tupleLength = bytesReader.readUInt32BE();\n            const tupleContents = {};\n            for (let i = 0; i < tupleLength; i++) {\n                const clarityName = deserializeLPString(bytesReader).content;\n                if (clarityName === undefined) {\n                    throw new DeserializationError('\"content\" is undefined');\n                }\n                tupleContents[clarityName] = deserializeCV(bytesReader);\n            }\n            return tupleCV(tupleContents);\n        case ClarityType.StringASCII:\n            const asciiStrLen = bytesReader.readUInt32BE();\n            const asciiStr = bytesToAscii(bytesReader.readBytes(asciiStrLen));\n            return stringAsciiCV(asciiStr);\n        case ClarityType.StringUTF8:\n            const utf8StrLen = bytesReader.readUInt32BE();\n            const utf8Str = bytesToUtf8(bytesReader.readBytes(utf8StrLen));\n            return stringUtf8CV(utf8Str);\n        default:\n            throw new DeserializationError('Unable to deserialize Clarity Value from Uint8Array. Could not find valid Clarity Type.');\n    }\n}\n//# sourceMappingURL=deserialize.js.map","import { ClarityType } from '../constants';\nconst trueCV = () => ({ type: ClarityType.BoolTrue });\nconst falseCV = () => ({ type: ClarityType.BoolFalse });\nconst boolCV = (bool) => (bool ? trueCV() : falseCV());\nexport { boolCV, trueCV, falseCV };\n//# sourceMappingURL=booleanCV.js.map","import { ClarityType } from '../constants';\nfunction responseErrorCV(value) {\n    return { type: ClarityType.ResponseErr, value };\n}\nfunction responseOkCV(value) {\n    return { type: ClarityType.ResponseOk, value };\n}\nexport { responseErrorCV, responseOkCV };\n//# sourceMappingURL=responseCV.js.map","import { ClarityType } from '../constants';\nfunction listCV(values) {\n    return { type: ClarityType.List, list: values };\n}\nexport { listCV };\n//# sourceMappingURL=listCV.js.map","import { ClarityType } from '../constants';\nconst stringAsciiCV = (data) => {\n    return { type: ClarityType.StringASCII, data };\n};\nconst stringUtf8CV = (data) => {\n    return { type: ClarityType.StringUTF8, data };\n};\nconst stringCV = (data, encoding) => {\n    switch (encoding) {\n        case 'ascii':\n            return stringAsciiCV(data);\n        case 'utf8':\n            return stringUtf8CV(data);\n    }\n};\nexport { stringAsciiCV, stringUtf8CV, stringCV };\n//# sourceMappingURL=stringCV.js.map","import { bytesToHex, concatArray, hexToBytes, intToBigInt, intToBytes, writeUInt16BE, } from '@stacks/common';\nimport { AddressHashMode, AuthType, PubKeyEncoding, RECOVERABLE_ECDSA_SIG_LENGTH_BYTES, StacksMessageType, } from './constants';\nimport { cloneDeep, leftPadHex, txidFromData } from './utils';\nimport { serializeMessageSignature, deserializeMessageSignature, } from './signature';\nimport { addressFromPublicKeys, createEmptyAddress, createLPList, deserializeLPList, serializeLPList, } from './types';\nimport { createStacksPublicKey, getPublicKey, isCompressed, publicKeyFromSignatureVrs, signWithKey, } from './keys';\nimport { DeserializationError, SigningError, VerificationError } from './errors';\nexport function emptyMessageSignature() {\n    return {\n        type: StacksMessageType.MessageSignature,\n        data: bytesToHex(new Uint8Array(RECOVERABLE_ECDSA_SIG_LENGTH_BYTES)),\n    };\n}\nexport function createSingleSigSpendingCondition(hashMode, pubKey, nonce, fee) {\n    const signer = addressFromPublicKeys(0, hashMode, 1, [createStacksPublicKey(pubKey)]).hash160;\n    const keyEncoding = isCompressed(createStacksPublicKey(pubKey))\n        ? PubKeyEncoding.Compressed\n        : PubKeyEncoding.Uncompressed;\n    return {\n        hashMode,\n        signer,\n        nonce: intToBigInt(nonce, false),\n        fee: intToBigInt(fee, false),\n        keyEncoding,\n        signature: emptyMessageSignature(),\n    };\n}\nexport function createMultiSigSpendingCondition(hashMode, numSigs, pubKeys, nonce, fee) {\n    const stacksPublicKeys = pubKeys.map(createStacksPublicKey);\n    const signer = addressFromPublicKeys(0, hashMode, numSigs, stacksPublicKeys).hash160;\n    return {\n        hashMode,\n        signer,\n        nonce: intToBigInt(nonce, false),\n        fee: intToBigInt(fee, false),\n        fields: [],\n        signaturesRequired: numSigs,\n    };\n}\nexport function isSingleSig(condition) {\n    return 'signature' in condition;\n}\nfunction clearCondition(condition) {\n    const cloned = cloneDeep(condition);\n    cloned.nonce = 0;\n    cloned.fee = 0;\n    if (isSingleSig(cloned)) {\n        cloned.signature = emptyMessageSignature();\n    }\n    else {\n        cloned.fields = [];\n    }\n    return {\n        ...cloned,\n        nonce: BigInt(0),\n        fee: BigInt(0),\n    };\n}\nexport function serializeSingleSigSpendingCondition(condition) {\n    const bytesArray = [\n        condition.hashMode,\n        hexToBytes(condition.signer),\n        intToBytes(condition.nonce, false, 8),\n        intToBytes(condition.fee, false, 8),\n        condition.keyEncoding,\n        serializeMessageSignature(condition.signature),\n    ];\n    return concatArray(bytesArray);\n}\nexport function serializeMultiSigSpendingCondition(condition) {\n    const bytesArray = [\n        condition.hashMode,\n        hexToBytes(condition.signer),\n        intToBytes(condition.nonce, false, 8),\n        intToBytes(condition.fee, false, 8),\n    ];\n    const fields = createLPList(condition.fields);\n    bytesArray.push(serializeLPList(fields));\n    const numSigs = new Uint8Array(2);\n    writeUInt16BE(numSigs, condition.signaturesRequired, 0);\n    bytesArray.push(numSigs);\n    return concatArray(bytesArray);\n}\nexport function deserializeSingleSigSpendingCondition(hashMode, bytesReader) {\n    const signer = bytesToHex(bytesReader.readBytes(20));\n    const nonce = BigInt(`0x${bytesToHex(bytesReader.readBytes(8))}`);\n    const fee = BigInt(`0x${bytesToHex(bytesReader.readBytes(8))}`);\n    const keyEncoding = bytesReader.readUInt8Enum(PubKeyEncoding, n => {\n        throw new DeserializationError(`Could not parse ${n} as PubKeyEncoding`);\n    });\n    if (hashMode === AddressHashMode.SerializeP2WPKH && keyEncoding != PubKeyEncoding.Compressed) {\n        throw new DeserializationError('Failed to parse singlesig spending condition: incomaptible hash mode and key encoding');\n    }\n    const signature = deserializeMessageSignature(bytesReader);\n    return {\n        hashMode,\n        signer,\n        nonce,\n        fee,\n        keyEncoding,\n        signature,\n    };\n}\nexport function deserializeMultiSigSpendingCondition(hashMode, bytesReader) {\n    const signer = bytesToHex(bytesReader.readBytes(20));\n    const nonce = BigInt('0x' + bytesToHex(bytesReader.readBytes(8)));\n    const fee = BigInt('0x' + bytesToHex(bytesReader.readBytes(8)));\n    const fields = deserializeLPList(bytesReader, StacksMessageType.TransactionAuthField)\n        .values;\n    let haveUncompressed = false;\n    let numSigs = 0;\n    for (const field of fields) {\n        switch (field.contents.type) {\n            case StacksMessageType.PublicKey:\n                if (!isCompressed(field.contents))\n                    haveUncompressed = true;\n                break;\n            case StacksMessageType.MessageSignature:\n                if (field.pubKeyEncoding === PubKeyEncoding.Uncompressed)\n                    haveUncompressed = true;\n                numSigs += 1;\n                if (numSigs === 65536)\n                    throw new VerificationError('Failed to parse multisig spending condition: too many signatures');\n                break;\n        }\n    }\n    const signaturesRequired = bytesReader.readUInt16BE();\n    if (haveUncompressed && hashMode === AddressHashMode.SerializeP2SH)\n        throw new VerificationError('Uncompressed keys are not allowed in this hash mode');\n    return {\n        hashMode,\n        signer,\n        nonce,\n        fee,\n        fields,\n        signaturesRequired,\n    };\n}\nexport function serializeSpendingCondition(condition) {\n    if (isSingleSig(condition)) {\n        return serializeSingleSigSpendingCondition(condition);\n    }\n    return serializeMultiSigSpendingCondition(condition);\n}\nexport function deserializeSpendingCondition(bytesReader) {\n    const hashMode = bytesReader.readUInt8Enum(AddressHashMode, n => {\n        throw new DeserializationError(`Could not parse ${n} as AddressHashMode`);\n    });\n    if (hashMode === AddressHashMode.SerializeP2PKH || hashMode === AddressHashMode.SerializeP2WPKH) {\n        return deserializeSingleSigSpendingCondition(hashMode, bytesReader);\n    }\n    else {\n        return deserializeMultiSigSpendingCondition(hashMode, bytesReader);\n    }\n}\nexport function makeSigHashPreSign(curSigHash, authType, fee, nonce) {\n    const hashLength = 32 + 1 + 8 + 8;\n    const sigHash = curSigHash +\n        bytesToHex(new Uint8Array([authType])) +\n        bytesToHex(intToBytes(fee, false, 8)) +\n        bytesToHex(intToBytes(nonce, false, 8));\n    if (hexToBytes(sigHash).byteLength !== hashLength) {\n        throw Error('Invalid signature hash length');\n    }\n    return txidFromData(hexToBytes(sigHash));\n}\nfunction makeSigHashPostSign(curSigHash, pubKey, signature) {\n    const hashLength = 32 + 1 + RECOVERABLE_ECDSA_SIG_LENGTH_BYTES;\n    const pubKeyEncoding = isCompressed(pubKey)\n        ? PubKeyEncoding.Compressed\n        : PubKeyEncoding.Uncompressed;\n    const sigHash = curSigHash + leftPadHex(pubKeyEncoding.toString(16)) + signature.data;\n    const sigHashBytes = hexToBytes(sigHash);\n    if (sigHashBytes.byteLength > hashLength) {\n        throw Error('Invalid signature hash length');\n    }\n    return txidFromData(sigHashBytes);\n}\nexport function nextSignature(curSigHash, authType, fee, nonce, privateKey) {\n    const sigHashPreSign = makeSigHashPreSign(curSigHash, authType, fee, nonce);\n    const signature = signWithKey(privateKey, sigHashPreSign);\n    const publicKey = getPublicKey(privateKey);\n    const nextSigHash = makeSigHashPostSign(sigHashPreSign, publicKey, signature);\n    return {\n        nextSig: signature,\n        nextSigHash,\n    };\n}\nexport function nextVerification(initialSigHash, authType, fee, nonce, pubKeyEncoding, signature) {\n    const sigHashPreSign = makeSigHashPreSign(initialSigHash, authType, fee, nonce);\n    const publicKey = createStacksPublicKey(publicKeyFromSignatureVrs(sigHashPreSign, signature, pubKeyEncoding));\n    const nextSigHash = makeSigHashPostSign(sigHashPreSign, publicKey, signature);\n    return {\n        pubKey: publicKey,\n        nextSigHash,\n    };\n}\nfunction newInitialSigHash() {\n    const spendingCondition = createSingleSigSpendingCondition(AddressHashMode.SerializeP2PKH, '', 0, 0);\n    spendingCondition.signer = createEmptyAddress().hash160;\n    spendingCondition.keyEncoding = PubKeyEncoding.Compressed;\n    spendingCondition.signature = emptyMessageSignature();\n    return spendingCondition;\n}\nfunction verify(condition, initialSigHash, authType) {\n    if (isSingleSig(condition)) {\n        return verifySingleSig(condition, initialSigHash, authType);\n    }\n    else {\n        return verifyMultiSig(condition, initialSigHash, authType);\n    }\n}\nfunction verifySingleSig(condition, initialSigHash, authType) {\n    const { pubKey, nextSigHash } = nextVerification(initialSigHash, authType, condition.fee, condition.nonce, condition.keyEncoding, condition.signature);\n    const addrBytes = addressFromPublicKeys(0, condition.hashMode, 1, [pubKey]).hash160;\n    if (addrBytes !== condition.signer)\n        throw new VerificationError(`Signer hash does not equal hash of public key(s): ${addrBytes} != ${condition.signer}`);\n    return nextSigHash;\n}\nfunction verifyMultiSig(condition, initialSigHash, authType) {\n    const publicKeys = [];\n    let curSigHash = initialSigHash;\n    let haveUncompressed = false;\n    let numSigs = 0;\n    for (const field of condition.fields) {\n        let foundPubKey;\n        switch (field.contents.type) {\n            case StacksMessageType.PublicKey:\n                if (!isCompressed(field.contents))\n                    haveUncompressed = true;\n                foundPubKey = field.contents;\n                break;\n            case StacksMessageType.MessageSignature:\n                if (field.pubKeyEncoding === PubKeyEncoding.Uncompressed)\n                    haveUncompressed = true;\n                const { pubKey, nextSigHash } = nextVerification(curSigHash, authType, condition.fee, condition.nonce, field.pubKeyEncoding, field.contents);\n                curSigHash = nextSigHash;\n                foundPubKey = pubKey;\n                numSigs += 1;\n                if (numSigs === 65536)\n                    throw new VerificationError('Too many signatures');\n                break;\n        }\n        publicKeys.push(foundPubKey);\n    }\n    if (numSigs !== condition.signaturesRequired)\n        throw new VerificationError('Incorrect number of signatures');\n    if (haveUncompressed && condition.hashMode === AddressHashMode.SerializeP2SH)\n        throw new VerificationError('Uncompressed keys are not allowed in this hash mode');\n    const addrBytes = addressFromPublicKeys(0, condition.hashMode, condition.signaturesRequired, publicKeys).hash160;\n    if (addrBytes !== condition.signer)\n        throw new VerificationError(`Signer hash does not equal hash of public key(s): ${addrBytes} != ${condition.signer}`);\n    return curSigHash;\n}\nexport function createStandardAuth(spendingCondition) {\n    return {\n        authType: AuthType.Standard,\n        spendingCondition,\n    };\n}\nexport function createSponsoredAuth(spendingCondition, sponsorSpendingCondition) {\n    return {\n        authType: AuthType.Sponsored,\n        spendingCondition,\n        sponsorSpendingCondition: sponsorSpendingCondition\n            ? sponsorSpendingCondition\n            : createSingleSigSpendingCondition(AddressHashMode.SerializeP2PKH, '0'.repeat(66), 0, 0),\n    };\n}\nexport function intoInitialSighashAuth(auth) {\n    if (auth.spendingCondition) {\n        switch (auth.authType) {\n            case AuthType.Standard:\n                return createStandardAuth(clearCondition(auth.spendingCondition));\n            case AuthType.Sponsored:\n                return createSponsoredAuth(clearCondition(auth.spendingCondition), newInitialSigHash());\n            default:\n                throw new SigningError('Unexpected authorization type for signing');\n        }\n    }\n    throw new Error('Authorization missing SpendingCondition');\n}\nexport function verifyOrigin(auth, initialSigHash) {\n    switch (auth.authType) {\n        case AuthType.Standard:\n            return verify(auth.spendingCondition, initialSigHash, AuthType.Standard);\n        case AuthType.Sponsored:\n            return verify(auth.spendingCondition, initialSigHash, AuthType.Standard);\n        default:\n            throw new SigningError('Invalid origin auth type');\n    }\n}\nexport function setFee(auth, amount) {\n    switch (auth.authType) {\n        case AuthType.Standard:\n            const spendingCondition = {\n                ...auth.spendingCondition,\n                fee: intToBigInt(amount, false),\n            };\n            return { ...auth, spendingCondition };\n        case AuthType.Sponsored:\n            const sponsorSpendingCondition = {\n                ...auth.sponsorSpendingCondition,\n                fee: intToBigInt(amount, false),\n            };\n            return { ...auth, sponsorSpendingCondition };\n    }\n}\nexport function getFee(auth) {\n    switch (auth.authType) {\n        case AuthType.Standard:\n            return auth.spendingCondition.fee;\n        case AuthType.Sponsored:\n            return auth.sponsorSpendingCondition.fee;\n    }\n}\nexport function setNonce(auth, nonce) {\n    const spendingCondition = {\n        ...auth.spendingCondition,\n        nonce: intToBigInt(nonce, false),\n    };\n    return {\n        ...auth,\n        spendingCondition,\n    };\n}\nexport function setSponsorNonce(auth, nonce) {\n    const sponsorSpendingCondition = {\n        ...auth.sponsorSpendingCondition,\n        nonce: intToBigInt(nonce, false),\n    };\n    return {\n        ...auth,\n        sponsorSpendingCondition,\n    };\n}\nexport function setSponsor(auth, sponsorSpendingCondition) {\n    const sc = {\n        ...sponsorSpendingCondition,\n        nonce: intToBigInt(sponsorSpendingCondition.nonce, false),\n        fee: intToBigInt(sponsorSpendingCondition.fee, false),\n    };\n    return {\n        ...auth,\n        sponsorSpendingCondition: sc,\n    };\n}\nexport function serializeAuthorization(auth) {\n    const bytesArray = [];\n    bytesArray.push(auth.authType);\n    switch (auth.authType) {\n        case AuthType.Standard:\n            bytesArray.push(serializeSpendingCondition(auth.spendingCondition));\n            break;\n        case AuthType.Sponsored:\n            bytesArray.push(serializeSpendingCondition(auth.spendingCondition));\n            bytesArray.push(serializeSpendingCondition(auth.sponsorSpendingCondition));\n            break;\n    }\n    return concatArray(bytesArray);\n}\nexport function deserializeAuthorization(bytesReader) {\n    const authType = bytesReader.readUInt8Enum(AuthType, n => {\n        throw new DeserializationError(`Could not parse ${n} as AuthType`);\n    });\n    let spendingCondition;\n    switch (authType) {\n        case AuthType.Standard:\n            spendingCondition = deserializeSpendingCondition(bytesReader);\n            return createStandardAuth(spendingCondition);\n        case AuthType.Sponsored:\n            spendingCondition = deserializeSpendingCondition(bytesReader);\n            const sponsorSpendingCondition = deserializeSpendingCondition(bytesReader);\n            return createSponsoredAuth(spendingCondition, sponsorSpendingCondition);\n    }\n}\n//# sourceMappingURL=authorization.js.map","import { principalToString } from './types/principalCV';\nimport { ClarityType } from './constants';\nimport { asciiToBytes, bytesToAscii, bytesToHex, utf8ToBytes } from '@stacks/common';\nexport function cvToString(val, encoding = 'hex') {\n    switch (val.type) {\n        case ClarityType.BoolTrue:\n            return 'true';\n        case ClarityType.BoolFalse:\n            return 'false';\n        case ClarityType.Int:\n            return val.value.toString();\n        case ClarityType.UInt:\n            return `u${val.value.toString()}`;\n        case ClarityType.Buffer:\n            if (encoding === 'tryAscii') {\n                const str = bytesToAscii(val.buffer);\n                if (/[ -~]/.test(str)) {\n                    return JSON.stringify(str);\n                }\n            }\n            return `0x${bytesToHex(val.buffer)}`;\n        case ClarityType.OptionalNone:\n            return 'none';\n        case ClarityType.OptionalSome:\n            return `(some ${cvToString(val.value, encoding)})`;\n        case ClarityType.ResponseErr:\n            return `(err ${cvToString(val.value, encoding)})`;\n        case ClarityType.ResponseOk:\n            return `(ok ${cvToString(val.value, encoding)})`;\n        case ClarityType.PrincipalStandard:\n        case ClarityType.PrincipalContract:\n            return principalToString(val);\n        case ClarityType.List:\n            return `(list ${val.list.map(v => cvToString(v, encoding)).join(' ')})`;\n        case ClarityType.Tuple:\n            return `(tuple ${Object.keys(val.data)\n                .map(key => `(${key} ${cvToString(val.data[key], encoding)})`)\n                .join(' ')})`;\n        case ClarityType.StringASCII:\n            return `\"${val.data}\"`;\n        case ClarityType.StringUTF8:\n            return `u\"${val.data}\"`;\n    }\n}\nexport function cvToValue(val, strictJsonCompat = false) {\n    switch (val.type) {\n        case ClarityType.BoolTrue:\n            return true;\n        case ClarityType.BoolFalse:\n            return false;\n        case ClarityType.Int:\n        case ClarityType.UInt:\n            if (strictJsonCompat) {\n                return val.value.toString();\n            }\n            return val.value;\n        case ClarityType.Buffer:\n            return `0x${bytesToHex(val.buffer)}`;\n        case ClarityType.OptionalNone:\n            return null;\n        case ClarityType.OptionalSome:\n            return cvToJSON(val.value);\n        case ClarityType.ResponseErr:\n            return cvToJSON(val.value);\n        case ClarityType.ResponseOk:\n            return cvToJSON(val.value);\n        case ClarityType.PrincipalStandard:\n        case ClarityType.PrincipalContract:\n            return principalToString(val);\n        case ClarityType.List:\n            return val.list.map(v => cvToJSON(v));\n        case ClarityType.Tuple:\n            const result = {};\n            Object.keys(val.data).forEach(key => {\n                result[key] = cvToJSON(val.data[key]);\n            });\n            return result;\n        case ClarityType.StringASCII:\n            return val.data;\n        case ClarityType.StringUTF8:\n            return val.data;\n    }\n}\nexport function cvToJSON(val) {\n    switch (val.type) {\n        case ClarityType.ResponseErr:\n            return { type: getCVTypeString(val), value: cvToValue(val, true), success: false };\n        case ClarityType.ResponseOk:\n            return { type: getCVTypeString(val), value: cvToValue(val, true), success: true };\n        default:\n            return { type: getCVTypeString(val), value: cvToValue(val, true) };\n    }\n}\nexport function getCVTypeString(val) {\n    switch (val.type) {\n        case ClarityType.BoolTrue:\n        case ClarityType.BoolFalse:\n            return 'bool';\n        case ClarityType.Int:\n            return 'int';\n        case ClarityType.UInt:\n            return 'uint';\n        case ClarityType.Buffer:\n            return `(buff ${val.buffer.length})`;\n        case ClarityType.OptionalNone:\n            return '(optional none)';\n        case ClarityType.OptionalSome:\n            return `(optional ${getCVTypeString(val.value)})`;\n        case ClarityType.ResponseErr:\n            return `(response UnknownType ${getCVTypeString(val.value)})`;\n        case ClarityType.ResponseOk:\n            return `(response ${getCVTypeString(val.value)} UnknownType)`;\n        case ClarityType.PrincipalStandard:\n        case ClarityType.PrincipalContract:\n            return 'principal';\n        case ClarityType.List:\n            return `(list ${val.list.length} ${val.list.length ? getCVTypeString(val.list[0]) : 'UnknownType'})`;\n        case ClarityType.Tuple:\n            return `(tuple ${Object.keys(val.data)\n                .map(key => `(${key} ${getCVTypeString(val.data[key])})`)\n                .join(' ')})`;\n        case ClarityType.StringASCII:\n            return `(string-ascii ${asciiToBytes(val.data).length})`;\n        case ClarityType.StringUTF8:\n            return `(string-utf8 ${utf8ToBytes(val.data).length})`;\n    }\n}\n//# sourceMappingURL=clarityValue.js.map","import { cloneDeep } from './utils';\nimport { uintCV, intCV, contractPrincipalCV, standardPrincipalCV, noneCV, bufferCV, falseCV, trueCV, ClarityType, getCVTypeString, bufferCVFromString, } from './clarity';\nimport { NotImplementedError } from './errors';\nimport { stringAsciiCV, stringUtf8CV } from './clarity/types/stringCV';\nimport { utf8ToBytes } from '@stacks/common';\nexport var ClarityAbiTypeId;\n(function (ClarityAbiTypeId) {\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypeUInt128\"] = 1] = \"ClarityAbiTypeUInt128\";\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypeInt128\"] = 2] = \"ClarityAbiTypeInt128\";\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypeBool\"] = 3] = \"ClarityAbiTypeBool\";\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypePrincipal\"] = 4] = \"ClarityAbiTypePrincipal\";\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypeNone\"] = 5] = \"ClarityAbiTypeNone\";\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypeBuffer\"] = 6] = \"ClarityAbiTypeBuffer\";\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypeResponse\"] = 7] = \"ClarityAbiTypeResponse\";\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypeOptional\"] = 8] = \"ClarityAbiTypeOptional\";\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypeTuple\"] = 9] = \"ClarityAbiTypeTuple\";\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypeList\"] = 10] = \"ClarityAbiTypeList\";\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypeStringAscii\"] = 11] = \"ClarityAbiTypeStringAscii\";\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypeStringUtf8\"] = 12] = \"ClarityAbiTypeStringUtf8\";\n    ClarityAbiTypeId[ClarityAbiTypeId[\"ClarityAbiTypeTraitReference\"] = 13] = \"ClarityAbiTypeTraitReference\";\n})(ClarityAbiTypeId || (ClarityAbiTypeId = {}));\nexport const isClarityAbiPrimitive = (val) => typeof val === 'string';\nexport const isClarityAbiBuffer = (val) => val.buffer !== undefined;\nexport const isClarityAbiStringAscii = (val) => val['string-ascii'] !== undefined;\nexport const isClarityAbiStringUtf8 = (val) => val['string-utf8'] !== undefined;\nexport const isClarityAbiResponse = (val) => val.response !== undefined;\nexport const isClarityAbiOptional = (val) => val.optional !== undefined;\nexport const isClarityAbiTuple = (val) => val.tuple !== undefined;\nexport const isClarityAbiList = (val) => val.list !== undefined;\nexport function getTypeUnion(val) {\n    if (isClarityAbiPrimitive(val)) {\n        if (val === 'uint128') {\n            return { id: ClarityAbiTypeId.ClarityAbiTypeUInt128, type: val };\n        }\n        else if (val === 'int128') {\n            return { id: ClarityAbiTypeId.ClarityAbiTypeInt128, type: val };\n        }\n        else if (val === 'bool') {\n            return { id: ClarityAbiTypeId.ClarityAbiTypeBool, type: val };\n        }\n        else if (val === 'principal') {\n            return { id: ClarityAbiTypeId.ClarityAbiTypePrincipal, type: val };\n        }\n        else if (val === 'trait_reference') {\n            return { id: ClarityAbiTypeId.ClarityAbiTypeTraitReference, type: val };\n        }\n        else if (val === 'none') {\n            return { id: ClarityAbiTypeId.ClarityAbiTypeNone, type: val };\n        }\n        else {\n            throw new Error(`Unexpected Clarity ABI type primitive: ${JSON.stringify(val)}`);\n        }\n    }\n    else if (isClarityAbiBuffer(val)) {\n        return { id: ClarityAbiTypeId.ClarityAbiTypeBuffer, type: val };\n    }\n    else if (isClarityAbiResponse(val)) {\n        return { id: ClarityAbiTypeId.ClarityAbiTypeResponse, type: val };\n    }\n    else if (isClarityAbiOptional(val)) {\n        return { id: ClarityAbiTypeId.ClarityAbiTypeOptional, type: val };\n    }\n    else if (isClarityAbiTuple(val)) {\n        return { id: ClarityAbiTypeId.ClarityAbiTypeTuple, type: val };\n    }\n    else if (isClarityAbiList(val)) {\n        return { id: ClarityAbiTypeId.ClarityAbiTypeList, type: val };\n    }\n    else if (isClarityAbiStringAscii(val)) {\n        return { id: ClarityAbiTypeId.ClarityAbiTypeStringAscii, type: val };\n    }\n    else if (isClarityAbiStringUtf8(val)) {\n        return { id: ClarityAbiTypeId.ClarityAbiTypeStringUtf8, type: val };\n    }\n    else {\n        throw new Error(`Unexpected Clarity ABI type: ${JSON.stringify(val)}`);\n    }\n}\nfunction encodeClarityValue(input, val) {\n    let union;\n    if (input.id !== undefined) {\n        union = input;\n    }\n    else {\n        union = getTypeUnion(input);\n    }\n    switch (union.id) {\n        case ClarityAbiTypeId.ClarityAbiTypeUInt128:\n            return uintCV(val);\n        case ClarityAbiTypeId.ClarityAbiTypeInt128:\n            return intCV(val);\n        case ClarityAbiTypeId.ClarityAbiTypeBool:\n            if (val === 'false' || val === '0')\n                return falseCV();\n            else if (val === 'true' || val === '1')\n                return trueCV();\n            else\n                throw new Error(`Unexpected Clarity bool value: ${JSON.stringify(val)}`);\n        case ClarityAbiTypeId.ClarityAbiTypePrincipal:\n            if (val.includes('.')) {\n                const [addr, name] = val.split('.');\n                return contractPrincipalCV(addr, name);\n            }\n            else {\n                return standardPrincipalCV(val);\n            }\n        case ClarityAbiTypeId.ClarityAbiTypeTraitReference:\n            const [addr, name] = val.split('.');\n            return contractPrincipalCV(addr, name);\n        case ClarityAbiTypeId.ClarityAbiTypeNone:\n            return noneCV();\n        case ClarityAbiTypeId.ClarityAbiTypeBuffer:\n            return bufferCV(utf8ToBytes(val));\n        case ClarityAbiTypeId.ClarityAbiTypeStringAscii:\n            return stringAsciiCV(val);\n        case ClarityAbiTypeId.ClarityAbiTypeStringUtf8:\n            return stringUtf8CV(val);\n        case ClarityAbiTypeId.ClarityAbiTypeResponse:\n            throw new NotImplementedError(`Unsupported encoding for Clarity type: ${union.id}`);\n        case ClarityAbiTypeId.ClarityAbiTypeOptional:\n            throw new NotImplementedError(`Unsupported encoding for Clarity type: ${union.id}`);\n        case ClarityAbiTypeId.ClarityAbiTypeTuple:\n            throw new NotImplementedError(`Unsupported encoding for Clarity type: ${union.id}`);\n        case ClarityAbiTypeId.ClarityAbiTypeList:\n            throw new NotImplementedError(`Unsupported encoding for Clarity type: ${union.id}`);\n        default:\n            throw new Error(`Unexpected Clarity type ID: ${JSON.stringify(union)}`);\n    }\n}\nexport { encodeClarityValue };\nexport function getTypeString(val) {\n    if (isClarityAbiPrimitive(val)) {\n        if (val === 'int128') {\n            return 'int';\n        }\n        else if (val === 'uint128') {\n            return 'uint';\n        }\n        return val;\n    }\n    else if (isClarityAbiBuffer(val)) {\n        return `(buff ${val.buffer.length})`;\n    }\n    else if (isClarityAbiStringAscii(val)) {\n        return `(string-ascii ${val['string-ascii'].length})`;\n    }\n    else if (isClarityAbiStringUtf8(val)) {\n        return `(string-utf8 ${val['string-utf8'].length})`;\n    }\n    else if (isClarityAbiResponse(val)) {\n        return `(response ${getTypeString(val.response.ok)} ${getTypeString(val.response.error)})`;\n    }\n    else if (isClarityAbiOptional(val)) {\n        return `(optional ${getTypeString(val.optional)})`;\n    }\n    else if (isClarityAbiTuple(val)) {\n        return `(tuple ${val.tuple.map(t => `(${t.name} ${getTypeString(t.type)})`).join(' ')})`;\n    }\n    else if (isClarityAbiList(val)) {\n        return `(list ${val.list.length} ${getTypeString(val.list.type)})`;\n    }\n    else {\n        throw new Error(`Type string unsupported for Clarity type: ${JSON.stringify(val)}`);\n    }\n}\nexport function abiFunctionToString(func) {\n    const access = func.access === 'read_only' ? 'read-only' : func.access;\n    return `(define-${access} (${func.name} ${func.args\n        .map(arg => `(${arg.name} ${getTypeString(arg.type)})`)\n        .join(' ')}))`;\n}\nfunction matchType(cv, abiType) {\n    const union = getTypeUnion(abiType);\n    switch (cv.type) {\n        case ClarityType.BoolTrue:\n        case ClarityType.BoolFalse:\n            return union.id === ClarityAbiTypeId.ClarityAbiTypeBool;\n        case ClarityType.Int:\n            return union.id === ClarityAbiTypeId.ClarityAbiTypeInt128;\n        case ClarityType.UInt:\n            return union.id === ClarityAbiTypeId.ClarityAbiTypeUInt128;\n        case ClarityType.Buffer:\n            return (union.id === ClarityAbiTypeId.ClarityAbiTypeBuffer &&\n                union.type.buffer.length >= cv.buffer.length);\n        case ClarityType.StringASCII:\n            return (union.id === ClarityAbiTypeId.ClarityAbiTypeStringAscii &&\n                union.type['string-ascii'].length >= cv.data.length);\n        case ClarityType.StringUTF8:\n            return (union.id === ClarityAbiTypeId.ClarityAbiTypeStringUtf8 &&\n                union.type['string-utf8'].length >= cv.data.length);\n        case ClarityType.OptionalNone:\n            return (union.id === ClarityAbiTypeId.ClarityAbiTypeNone ||\n                union.id === ClarityAbiTypeId.ClarityAbiTypeOptional);\n        case ClarityType.OptionalSome:\n            return (union.id === ClarityAbiTypeId.ClarityAbiTypeOptional &&\n                matchType(cv.value, union.type.optional));\n        case ClarityType.ResponseErr:\n            return (union.id === ClarityAbiTypeId.ClarityAbiTypeResponse &&\n                matchType(cv.value, union.type.response.error));\n        case ClarityType.ResponseOk:\n            return (union.id === ClarityAbiTypeId.ClarityAbiTypeResponse &&\n                matchType(cv.value, union.type.response.ok));\n        case ClarityType.PrincipalContract:\n            return (union.id === ClarityAbiTypeId.ClarityAbiTypePrincipal ||\n                union.id === ClarityAbiTypeId.ClarityAbiTypeTraitReference);\n        case ClarityType.PrincipalStandard:\n            return union.id === ClarityAbiTypeId.ClarityAbiTypePrincipal;\n        case ClarityType.List:\n            return (union.id == ClarityAbiTypeId.ClarityAbiTypeList &&\n                union.type.list.length >= cv.list.length &&\n                cv.list.every(val => matchType(val, union.type.list.type)));\n        case ClarityType.Tuple:\n            if (union.id == ClarityAbiTypeId.ClarityAbiTypeTuple) {\n                const tuple = cloneDeep(cv.data);\n                for (let i = 0; i < union.type.tuple.length; i++) {\n                    const abiTupleEntry = union.type.tuple[i];\n                    const key = abiTupleEntry.name;\n                    const val = tuple[key];\n                    if (val) {\n                        if (!matchType(val, abiTupleEntry.type)) {\n                            return false;\n                        }\n                        delete tuple[key];\n                    }\n                    else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            else {\n                return false;\n            }\n        default:\n            return false;\n    }\n}\nexport function validateContractCall(payload, abi) {\n    const filtered = abi.functions.filter(fn => fn.name === payload.functionName.content);\n    if (filtered.length === 1) {\n        const abiFunc = filtered[0];\n        const abiArgs = abiFunc.args;\n        if (payload.functionArgs.length !== abiArgs.length) {\n            throw new Error(`Clarity function expects ${abiArgs.length} argument(s) but received ${payload.functionArgs.length}`);\n        }\n        for (let i = 0; i < payload.functionArgs.length; i++) {\n            const payloadArg = payload.functionArgs[i];\n            const abiArg = abiArgs[i];\n            if (!matchType(payloadArg, abiArg.type)) {\n                const argNum = i + 1;\n                throw new Error(`Clarity function \\`${payload.functionName.content}\\` expects argument ${argNum} to be of type ${getTypeString(abiArg.type)}, not ${getCVTypeString(payloadArg)}`);\n            }\n        }\n        return true;\n    }\n    else if (filtered.length === 0) {\n        throw new Error(`ABI doesn't contain a function with the name ${payload.functionName.content}`);\n    }\n    else {\n        throw new Error(`Malformed ABI. Contains multiple functions with the name ${payload.functionName.content}`);\n    }\n}\nexport function parseToCV(input, type) {\n    const typeString = getTypeString(type);\n    if (isClarityAbiPrimitive(type)) {\n        if (type === 'uint128') {\n            return uintCV(input);\n        }\n        else if (type === 'int128') {\n            return intCV(input);\n        }\n        else if (type === 'bool') {\n            if (input.toLowerCase() === 'true') {\n                return trueCV();\n            }\n            else if (input.toLowerCase() === 'false') {\n                return falseCV();\n            }\n            else {\n                throw new Error(`Invalid bool value: ${input}`);\n            }\n        }\n        else if (type === 'principal') {\n            if (input.includes('.')) {\n                const [address, contractName] = input.split('.');\n                return contractPrincipalCV(address, contractName);\n            }\n            else {\n                return standardPrincipalCV(input);\n            }\n        }\n        else {\n            throw new Error(`Contract function contains unsupported Clarity ABI type: ${typeString}`);\n        }\n    }\n    else if (isClarityAbiBuffer(type)) {\n        const inputLength = utf8ToBytes(input).byteLength;\n        if (inputLength > type.buffer.length) {\n            throw new Error(`Input exceeds specified buffer length limit of ${type.buffer.length}`);\n        }\n        return bufferCVFromString(input);\n    }\n    else if (isClarityAbiResponse(type)) {\n        throw new Error(`Contract function contains unsupported Clarity ABI type: ${typeString}`);\n    }\n    else if (isClarityAbiOptional(type)) {\n        throw new Error(`Contract function contains unsupported Clarity ABI type: ${typeString}`);\n    }\n    else if (isClarityAbiTuple(type)) {\n        throw new Error(`Contract function contains unsupported Clarity ABI type: ${typeString}`);\n    }\n    else if (isClarityAbiList(type)) {\n        throw new Error(`Contract function contains unsupported Clarity ABI type: ${typeString}`);\n    }\n    else {\n        throw new Error(`Contract function contains unsupported Clarity ABI type: ${typeString}`);\n    }\n}\n//# sourceMappingURL=contract-abi.js.map","import { isSingleSig, nextVerification } from './authorization';\nimport { cloneDeep } from './utils';\nimport { AuthType, PubKeyEncoding, StacksMessageType } from './constants';\nimport { SigningError } from './errors';\nexport class TransactionSigner {\n    constructor(transaction) {\n        this.transaction = transaction;\n        this.sigHash = transaction.signBegin();\n        this.originDone = false;\n        this.checkOversign = true;\n        this.checkOverlap = true;\n        const spendingCondition = transaction.auth.spendingCondition;\n        if (spendingCondition && !isSingleSig(spendingCondition)) {\n            if (spendingCondition.fields.filter(field => field.contents.type === StacksMessageType.MessageSignature).length >= spendingCondition.signaturesRequired) {\n                throw new Error('SpendingCondition has more signatures than are expected');\n            }\n            spendingCondition.fields.forEach(field => {\n                if (field.contents.type === StacksMessageType.MessageSignature) {\n                    const signature = field.contents;\n                    const nextVerify = nextVerification(this.sigHash, transaction.auth.authType, spendingCondition.fee, spendingCondition.nonce, PubKeyEncoding.Compressed, signature);\n                    this.sigHash = nextVerify.nextSigHash;\n                }\n            });\n        }\n    }\n    static createSponsorSigner(transaction, spendingCondition) {\n        if (transaction.auth.authType != AuthType.Sponsored) {\n            throw new SigningError('Cannot add sponsor to non-sponsored transaction');\n        }\n        const tx = cloneDeep(transaction);\n        tx.setSponsor(spendingCondition);\n        const originSigHash = tx.verifyOrigin();\n        const signer = new this(tx);\n        signer.originDone = true;\n        signer.sigHash = originSigHash;\n        signer.checkOversign = true;\n        signer.checkOverlap = true;\n        return signer;\n    }\n    signOrigin(privateKey) {\n        if (this.checkOverlap && this.originDone) {\n            throw new SigningError('Cannot sign origin after sponsor key');\n        }\n        if (this.transaction.auth === undefined) {\n            throw new SigningError('\"transaction.auth\" is undefined');\n        }\n        if (this.transaction.auth.spendingCondition === undefined) {\n            throw new SigningError('\"transaction.auth.spendingCondition\" is undefined');\n        }\n        if (!isSingleSig(this.transaction.auth.spendingCondition)) {\n            const spendingCondition = this.transaction.auth.spendingCondition;\n            if (this.checkOversign &&\n                spendingCondition.fields.filter(field => field.contents.type === StacksMessageType.MessageSignature).length >= spendingCondition.signaturesRequired) {\n                throw new Error('Origin would have too many signatures');\n            }\n        }\n        const nextSighash = this.transaction.signNextOrigin(this.sigHash, privateKey);\n        this.sigHash = nextSighash;\n    }\n    appendOrigin(publicKey) {\n        if (this.checkOverlap && this.originDone) {\n            throw Error('Cannot append public key to origin after sponsor key');\n        }\n        if (this.transaction.auth === undefined) {\n            throw new Error('\"transaction.auth\" is undefined');\n        }\n        if (this.transaction.auth.spendingCondition === undefined) {\n            throw new Error('\"transaction.auth.spendingCondition\" is undefined');\n        }\n        this.transaction.appendPubkey(publicKey);\n    }\n    signSponsor(privateKey) {\n        if (this.transaction.auth === undefined) {\n            throw new SigningError('\"transaction.auth\" is undefined');\n        }\n        if (this.transaction.auth.authType !== AuthType.Sponsored) {\n            throw new SigningError('\"transaction.auth.authType\" is not AuthType.Sponsored');\n        }\n        const nextSighash = this.transaction.signNextSponsor(this.sigHash, privateKey);\n        this.sigHash = nextSighash;\n        this.originDone = true;\n    }\n    getTxInComplete() {\n        return cloneDeep(this.transaction);\n    }\n    resume(transaction) {\n        this.transaction = cloneDeep(transaction);\n        this.sigHash = transaction.signBegin();\n    }\n}\n//# sourceMappingURL=signer.js.map","import { bytesToHex, concatArray, hexToBytes, intToBigInt, writeUInt32BE, } from '@stacks/common';\nimport { AnchorMode, anchorModeFromNameOrValue, AuthType, DEFAULT_CHAIN_ID, PayloadType, PostConditionMode, PubKeyEncoding, StacksMessageType, TransactionVersion, } from './constants';\nimport { deserializeAuthorization, intoInitialSighashAuth, isSingleSig, nextSignature, serializeAuthorization, setFee, setNonce, setSponsor, setSponsorNonce, verifyOrigin, } from './authorization';\nimport { createTransactionAuthField } from './signature';\nimport { cloneDeep, txidFromData } from './utils';\nimport { deserializePayload, serializePayload } from './payload';\nimport { createLPList, deserializeLPList, serializeLPList } from './types';\nimport { isCompressed } from './keys';\nimport { BytesReader } from './bytesReader';\nimport { SerializationError, SigningError } from './errors';\nexport class StacksTransaction {\n    constructor(version, auth, payload, postConditions, postConditionMode, anchorMode, chainId) {\n        this.version = version;\n        this.auth = auth;\n        if ('amount' in payload) {\n            this.payload = {\n                ...payload,\n                amount: intToBigInt(payload.amount, false),\n            };\n        }\n        else {\n            this.payload = payload;\n        }\n        this.chainId = chainId ?? DEFAULT_CHAIN_ID;\n        this.postConditionMode = postConditionMode ?? PostConditionMode.Deny;\n        this.postConditions = postConditions ?? createLPList([]);\n        if (anchorMode) {\n            this.anchorMode = anchorModeFromNameOrValue(anchorMode);\n        }\n        else {\n            switch (payload.payloadType) {\n                case PayloadType.Coinbase:\n                case PayloadType.CoinbaseToAltRecipient:\n                case PayloadType.PoisonMicroblock: {\n                    this.anchorMode = AnchorMode.OnChainOnly;\n                    break;\n                }\n                case PayloadType.ContractCall:\n                case PayloadType.SmartContract:\n                case PayloadType.VersionedSmartContract:\n                case PayloadType.TokenTransfer: {\n                    this.anchorMode = AnchorMode.Any;\n                    break;\n                }\n            }\n        }\n    }\n    signBegin() {\n        const tx = cloneDeep(this);\n        tx.auth = intoInitialSighashAuth(tx.auth);\n        return tx.txid();\n    }\n    verifyBegin() {\n        const tx = cloneDeep(this);\n        tx.auth = intoInitialSighashAuth(tx.auth);\n        return tx.txid();\n    }\n    verifyOrigin() {\n        return verifyOrigin(this.auth, this.verifyBegin());\n    }\n    signNextOrigin(sigHash, privateKey) {\n        if (this.auth.spendingCondition === undefined) {\n            throw new Error('\"auth.spendingCondition\" is undefined');\n        }\n        if (this.auth.authType === undefined) {\n            throw new Error('\"auth.authType\" is undefined');\n        }\n        return this.signAndAppend(this.auth.spendingCondition, sigHash, AuthType.Standard, privateKey);\n    }\n    signNextSponsor(sigHash, privateKey) {\n        if (this.auth.authType === AuthType.Sponsored) {\n            return this.signAndAppend(this.auth.sponsorSpendingCondition, sigHash, AuthType.Sponsored, privateKey);\n        }\n        else {\n            throw new Error('\"auth.sponsorSpendingCondition\" is undefined');\n        }\n    }\n    appendPubkey(publicKey) {\n        const cond = this.auth.spendingCondition;\n        if (cond && !isSingleSig(cond)) {\n            const compressed = isCompressed(publicKey);\n            cond.fields.push(createTransactionAuthField(compressed ? PubKeyEncoding.Compressed : PubKeyEncoding.Uncompressed, publicKey));\n        }\n        else {\n            throw new Error(`Can't append public key to a singlesig condition`);\n        }\n    }\n    signAndAppend(condition, curSigHash, authType, privateKey) {\n        const { nextSig, nextSigHash } = nextSignature(curSigHash, authType, condition.fee, condition.nonce, privateKey);\n        if (isSingleSig(condition)) {\n            condition.signature = nextSig;\n        }\n        else {\n            const compressed = bytesToHex(privateKey.data).endsWith('01');\n            condition.fields.push(createTransactionAuthField(compressed ? PubKeyEncoding.Compressed : PubKeyEncoding.Uncompressed, nextSig));\n        }\n        return nextSigHash;\n    }\n    txid() {\n        const serialized = this.serialize();\n        return txidFromData(serialized);\n    }\n    setSponsor(sponsorSpendingCondition) {\n        if (this.auth.authType != AuthType.Sponsored) {\n            throw new SigningError('Cannot sponsor sign a non-sponsored transaction');\n        }\n        this.auth = setSponsor(this.auth, sponsorSpendingCondition);\n    }\n    setFee(amount) {\n        this.auth = setFee(this.auth, amount);\n    }\n    setNonce(nonce) {\n        this.auth = setNonce(this.auth, nonce);\n    }\n    setSponsorNonce(nonce) {\n        if (this.auth.authType != AuthType.Sponsored) {\n            throw new SigningError('Cannot sponsor sign a non-sponsored transaction');\n        }\n        this.auth = setSponsorNonce(this.auth, nonce);\n    }\n    serialize() {\n        if (this.version === undefined) {\n            throw new SerializationError('\"version\" is undefined');\n        }\n        if (this.chainId === undefined) {\n            throw new SerializationError('\"chainId\" is undefined');\n        }\n        if (this.auth === undefined) {\n            throw new SerializationError('\"auth\" is undefined');\n        }\n        if (this.anchorMode === undefined) {\n            throw new SerializationError('\"anchorMode\" is undefined');\n        }\n        if (this.payload === undefined) {\n            throw new SerializationError('\"payload\" is undefined');\n        }\n        const bytesArray = [];\n        bytesArray.push(this.version);\n        const chainIdBytes = new Uint8Array(4);\n        writeUInt32BE(chainIdBytes, this.chainId, 0);\n        bytesArray.push(chainIdBytes);\n        bytesArray.push(serializeAuthorization(this.auth));\n        bytesArray.push(this.anchorMode);\n        bytesArray.push(this.postConditionMode);\n        bytesArray.push(serializeLPList(this.postConditions));\n        bytesArray.push(serializePayload(this.payload));\n        return concatArray(bytesArray);\n    }\n}\nexport function deserializeTransaction(data) {\n    let bytesReader;\n    if (typeof data === 'string') {\n        if (data.slice(0, 2).toLowerCase() === '0x') {\n            bytesReader = new BytesReader(hexToBytes(data.slice(2)));\n        }\n        else {\n            bytesReader = new BytesReader(hexToBytes(data));\n        }\n    }\n    else if (data instanceof Uint8Array) {\n        bytesReader = new BytesReader(data);\n    }\n    else {\n        bytesReader = data;\n    }\n    const version = bytesReader.readUInt8Enum(TransactionVersion, n => {\n        throw new Error(`Could not parse ${n} as TransactionVersion`);\n    });\n    const chainId = bytesReader.readUInt32BE();\n    const auth = deserializeAuthorization(bytesReader);\n    const anchorMode = bytesReader.readUInt8Enum(AnchorMode, n => {\n        throw new Error(`Could not parse ${n} as AnchorMode`);\n    });\n    const postConditionMode = bytesReader.readUInt8Enum(PostConditionMode, n => {\n        throw new Error(`Could not parse ${n} as PostConditionMode`);\n    });\n    const postConditions = deserializeLPList(bytesReader, StacksMessageType.PostCondition);\n    const payload = deserializePayload(bytesReader);\n    return new StacksTransaction(version, auth, payload, postConditions, postConditionMode, anchorMode, chainId);\n}\n//# sourceMappingURL=transaction.js.map","import { bytesToHex, hexToBytes, intToBigInt } from '@stacks/common';\nimport { StacksNetwork, StacksMainnet, StacksTestnet, createFetchFn, } from '@stacks/network';\nimport { c32address } from 'c32check';\nimport { createMultiSigSpendingCondition, createSingleSigSpendingCondition, createSponsoredAuth, createStandardAuth, } from './authorization';\nimport { deserializeCV, serializeCV } from './clarity';\nimport { AddressHashMode, AddressVersion, PayloadType, PostConditionMode, TransactionVersion, RECOVERABLE_ECDSA_SIG_LENGTH_BYTES, StacksMessageType, ClarityVersion, } from './constants';\nimport { validateContractCall } from './contract-abi';\nimport { NoEstimateAvailableError } from './errors';\nimport { createStacksPrivateKey, getPublicKey, pubKeyfromPrivKey, publicKeyFromBytes, publicKeyToAddress, publicKeyToString, } from './keys';\nimport { createContractCallPayload, createSmartContractPayload, createTokenTransferPayload, serializePayload, } from './payload';\nimport { createFungiblePostCondition, createNonFungiblePostCondition, createSTXPostCondition, } from './postcondition';\nimport { createContractPrincipal, createStandardPrincipal, } from './postcondition-types';\nimport { TransactionSigner } from './signer';\nimport { StacksTransaction } from './transaction';\nimport { createLPList } from './types';\nimport { cvToHex, omit, parseReadOnlyResponse, validateTxId } from './utils';\nexport async function getNonce(address, network) {\n    const derivedNetwork = StacksNetwork.fromNameOrNetwork(network ?? new StacksMainnet());\n    const url = derivedNetwork.getAccountApiUrl(address);\n    const response = await derivedNetwork.fetchFn(url);\n    if (!response.ok) {\n        let msg = '';\n        try {\n            msg = await response.text();\n        }\n        catch (error) { }\n        throw new Error(`Error fetching nonce. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`);\n    }\n    const responseText = await response.text();\n    const result = JSON.parse(responseText);\n    return BigInt(result.nonce);\n}\nexport async function estimateTransfer(transaction, network) {\n    if (transaction.payload.payloadType !== PayloadType.TokenTransfer) {\n        throw new Error(`Transaction fee estimation only possible with ${PayloadType[PayloadType.TokenTransfer]} transactions. Invoked with: ${PayloadType[transaction.payload.payloadType]}`);\n    }\n    return estimateTransferUnsafe(transaction, network);\n}\nexport async function estimateTransferUnsafe(transaction, network) {\n    const requestHeaders = {\n        Accept: 'application/text',\n    };\n    const fetchOptions = {\n        method: 'GET',\n        headers: requestHeaders,\n    };\n    const derivedNetwork = StacksNetwork.fromNameOrNetwork(network ?? deriveNetwork(transaction));\n    const url = derivedNetwork.getTransferFeeEstimateApiUrl();\n    const response = await derivedNetwork.fetchFn(url, fetchOptions);\n    if (!response.ok) {\n        let msg = '';\n        try {\n            msg = await response.text();\n        }\n        catch (error) { }\n        throw new Error(`Error estimating transaction fee. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`);\n    }\n    const feeRateResult = await response.text();\n    const txBytes = BigInt(transaction.serialize().byteLength);\n    const feeRate = BigInt(feeRateResult);\n    return feeRate * txBytes;\n}\nexport async function estimateTransaction(transactionPayload, estimatedLen, network) {\n    const options = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            transaction_payload: bytesToHex(serializePayload(transactionPayload)),\n            ...(estimatedLen ? { estimated_len: estimatedLen } : {}),\n        }),\n    };\n    const derivedNetwork = StacksNetwork.fromNameOrNetwork(network ?? new StacksMainnet());\n    const url = derivedNetwork.getTransactionFeeEstimateApiUrl();\n    const response = await derivedNetwork.fetchFn(url, options);\n    if (!response.ok) {\n        const body = await response.json().catch(() => ({}));\n        if (body?.reason === 'NoEstimateAvailable') {\n            throw new NoEstimateAvailableError(body?.reason_data?.message ?? '');\n        }\n        throw new Error(`Error estimating transaction fee. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${body}\"`);\n    }\n    const data = await response.json();\n    return data.estimations;\n}\nexport async function broadcastTransaction(transaction, network, attachment) {\n    const rawTx = transaction.serialize();\n    const derivedNetwork = StacksNetwork.fromNameOrNetwork(network ?? deriveNetwork(transaction));\n    const url = derivedNetwork.getBroadcastApiUrl();\n    return broadcastRawTransaction(rawTx, url, attachment, derivedNetwork.fetchFn);\n}\nexport async function broadcastRawTransaction(rawTx, url, attachment, fetchFn = createFetchFn()) {\n    const options = {\n        method: 'POST',\n        headers: { 'Content-Type': attachment ? 'application/json' : 'application/octet-stream' },\n        body: attachment\n            ? JSON.stringify({\n                tx: bytesToHex(rawTx),\n                attachment: bytesToHex(attachment),\n            })\n            : rawTx,\n    };\n    const response = await fetchFn(url, options);\n    if (!response.ok) {\n        try {\n            return (await response.json());\n        }\n        catch (e) {\n            throw Error(`Failed to broadcast transaction: ${e.message}`);\n        }\n    }\n    const text = await response.text();\n    const txid = text.replace(/[\"]+/g, '');\n    if (!validateTxId(txid))\n        throw new Error(text);\n    return { txid };\n}\nexport async function getAbi(address, contractName, network) {\n    const options = {\n        method: 'GET',\n    };\n    const derivedNetwork = StacksNetwork.fromNameOrNetwork(network);\n    const url = derivedNetwork.getAbiApiUrl(address, contractName);\n    const response = await derivedNetwork.fetchFn(url, options);\n    if (!response.ok) {\n        const msg = await response.text().catch(() => '');\n        throw new Error(`Error fetching contract ABI for contract \"${contractName}\" at address ${address}. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`);\n    }\n    return JSON.parse(await response.text());\n}\nfunction deriveNetwork(transaction) {\n    switch (transaction.version) {\n        case TransactionVersion.Mainnet:\n            return new StacksMainnet();\n        case TransactionVersion.Testnet:\n            return new StacksTestnet();\n    }\n}\nexport async function makeUnsignedSTXTokenTransfer(txOptions) {\n    const defaultOptions = {\n        fee: BigInt(0),\n        nonce: BigInt(0),\n        network: new StacksMainnet(),\n        memo: '',\n        sponsored: false,\n    };\n    const options = Object.assign(defaultOptions, txOptions);\n    const payload = createTokenTransferPayload(options.recipient, options.amount, options.memo);\n    let authorization = null;\n    let spendingCondition = null;\n    if ('publicKey' in options) {\n        spendingCondition = createSingleSigSpendingCondition(AddressHashMode.SerializeP2PKH, options.publicKey, options.nonce, options.fee);\n    }\n    else {\n        spendingCondition = createMultiSigSpendingCondition(AddressHashMode.SerializeP2SH, options.numSignatures, options.publicKeys, options.nonce, options.fee);\n    }\n    if (options.sponsored) {\n        authorization = createSponsoredAuth(spendingCondition);\n    }\n    else {\n        authorization = createStandardAuth(spendingCondition);\n    }\n    const network = StacksNetwork.fromNameOrNetwork(options.network);\n    const transaction = new StacksTransaction(network.version, authorization, payload, undefined, undefined, options.anchorMode, network.chainId);\n    if (txOptions.fee === undefined || txOptions.fee === null) {\n        const fee = await estimateTransactionFeeWithFallback(transaction, network);\n        transaction.setFee(fee);\n    }\n    if (txOptions.nonce === undefined || txOptions.nonce === null) {\n        const addressVersion = options.network.version === TransactionVersion.Mainnet\n            ? AddressVersion.MainnetSingleSig\n            : AddressVersion.TestnetSingleSig;\n        const senderAddress = c32address(addressVersion, transaction.auth.spendingCondition.signer);\n        const txNonce = await getNonce(senderAddress, options.network);\n        transaction.setNonce(txNonce);\n    }\n    return transaction;\n}\nexport async function makeSTXTokenTransfer(txOptions) {\n    if ('senderKey' in txOptions) {\n        const publicKey = publicKeyToString(getPublicKey(createStacksPrivateKey(txOptions.senderKey)));\n        const options = omit(txOptions, 'senderKey');\n        const transaction = await makeUnsignedSTXTokenTransfer({ publicKey, ...options });\n        const privKey = createStacksPrivateKey(txOptions.senderKey);\n        const signer = new TransactionSigner(transaction);\n        signer.signOrigin(privKey);\n        return transaction;\n    }\n    else {\n        const options = omit(txOptions, 'signerKeys');\n        const transaction = await makeUnsignedSTXTokenTransfer(options);\n        const signer = new TransactionSigner(transaction);\n        let pubKeys = txOptions.publicKeys;\n        for (const key of txOptions.signerKeys) {\n            const pubKey = pubKeyfromPrivKey(key);\n            pubKeys = pubKeys.filter(pk => pk !== bytesToHex(pubKey.data));\n            signer.signOrigin(createStacksPrivateKey(key));\n        }\n        for (const key of pubKeys) {\n            signer.appendOrigin(publicKeyFromBytes(hexToBytes(key)));\n        }\n        return transaction;\n    }\n}\nexport async function estimateContractDeploy(transaction, network) {\n    if (transaction.payload.payloadType !== PayloadType.SmartContract &&\n        transaction.payload.payloadType !== PayloadType.VersionedSmartContract) {\n        throw new Error(`Contract deploy fee estimation only possible with ${PayloadType[PayloadType.SmartContract]} transactions. Invoked with: ${PayloadType[transaction.payload.payloadType]}`);\n    }\n    const requestHeaders = {\n        Accept: 'application/text',\n    };\n    const fetchOptions = {\n        method: 'GET',\n        headers: requestHeaders,\n    };\n    const derivedNetwork = StacksNetwork.fromNameOrNetwork(network ?? deriveNetwork(transaction));\n    const url = derivedNetwork.getTransferFeeEstimateApiUrl();\n    const response = await derivedNetwork.fetchFn(url, fetchOptions);\n    if (!response.ok) {\n        const msg = await response.text().catch(() => '');\n        throw new Error(`Error estimating contract deploy fee. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`);\n    }\n    const feeRateResult = await response.text();\n    const txBytes = intToBigInt(transaction.serialize().byteLength, false);\n    const feeRate = intToBigInt(feeRateResult, false);\n    return feeRate * txBytes;\n}\nexport async function makeContractDeploy(txOptions) {\n    if ('senderKey' in txOptions) {\n        const publicKey = publicKeyToString(getPublicKey(createStacksPrivateKey(txOptions.senderKey)));\n        const options = omit(txOptions, 'senderKey');\n        const transaction = await makeUnsignedContractDeploy({ publicKey, ...options });\n        const privKey = createStacksPrivateKey(txOptions.senderKey);\n        const signer = new TransactionSigner(transaction);\n        signer.signOrigin(privKey);\n        return transaction;\n    }\n    else {\n        const options = omit(txOptions, 'signerKeys');\n        const transaction = await makeUnsignedContractDeploy(options);\n        const signer = new TransactionSigner(transaction);\n        let pubKeys = txOptions.publicKeys;\n        for (const key of txOptions.signerKeys) {\n            const pubKey = pubKeyfromPrivKey(key);\n            pubKeys = pubKeys.filter(pk => pk !== bytesToHex(pubKey.data));\n            signer.signOrigin(createStacksPrivateKey(key));\n        }\n        for (const key of pubKeys) {\n            signer.appendOrigin(publicKeyFromBytes(hexToBytes(key)));\n        }\n        return transaction;\n    }\n}\nexport async function makeUnsignedContractDeploy(txOptions) {\n    const defaultOptions = {\n        fee: BigInt(0),\n        nonce: BigInt(0),\n        network: new StacksMainnet(),\n        postConditionMode: PostConditionMode.Deny,\n        sponsored: false,\n        clarityVersion: ClarityVersion.Clarity2,\n    };\n    const options = Object.assign(defaultOptions, txOptions);\n    const payload = createSmartContractPayload(options.contractName, options.codeBody, options.clarityVersion);\n    let authorization = null;\n    let spendingCondition = null;\n    if ('publicKey' in options) {\n        spendingCondition = createSingleSigSpendingCondition(AddressHashMode.SerializeP2PKH, options.publicKey, options.nonce, options.fee);\n    }\n    else {\n        spendingCondition = createMultiSigSpendingCondition(AddressHashMode.SerializeP2SH, options.numSignatures, options.publicKeys, options.nonce, options.fee);\n    }\n    if (options.sponsored) {\n        authorization = createSponsoredAuth(spendingCondition);\n    }\n    else {\n        authorization = createStandardAuth(spendingCondition);\n    }\n    const network = StacksNetwork.fromNameOrNetwork(options.network);\n    const postConditions = [];\n    if (options.postConditions && options.postConditions.length > 0) {\n        options.postConditions.forEach(postCondition => {\n            postConditions.push(postCondition);\n        });\n    }\n    const lpPostConditions = createLPList(postConditions);\n    const transaction = new StacksTransaction(network.version, authorization, payload, lpPostConditions, options.postConditionMode, options.anchorMode, network.chainId);\n    if (txOptions.fee === undefined || txOptions.fee === null) {\n        const fee = await estimateTransactionFeeWithFallback(transaction, network);\n        transaction.setFee(fee);\n    }\n    if (txOptions.nonce === undefined || txOptions.nonce === null) {\n        const addressVersion = options.network.version === TransactionVersion.Mainnet\n            ? AddressVersion.MainnetSingleSig\n            : AddressVersion.TestnetSingleSig;\n        const senderAddress = c32address(addressVersion, transaction.auth.spendingCondition.signer);\n        const txNonce = await getNonce(senderAddress, options.network);\n        transaction.setNonce(txNonce);\n    }\n    return transaction;\n}\nexport async function estimateContractFunctionCall(transaction, network) {\n    if (transaction.payload.payloadType !== PayloadType.ContractCall) {\n        throw new Error(`Contract call fee estimation only possible with ${PayloadType[PayloadType.ContractCall]} transactions. Invoked with: ${PayloadType[transaction.payload.payloadType]}`);\n    }\n    const requestHeaders = {\n        Accept: 'application/text',\n    };\n    const fetchOptions = {\n        method: 'GET',\n        headers: requestHeaders,\n    };\n    const derivedNetwork = StacksNetwork.fromNameOrNetwork(network ?? deriveNetwork(transaction));\n    const url = derivedNetwork.getTransferFeeEstimateApiUrl();\n    const response = await derivedNetwork.fetchFn(url, fetchOptions);\n    if (!response.ok) {\n        const msg = await response.text().catch(() => '');\n        throw new Error(`Error estimating contract call fee. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`);\n    }\n    const feeRateResult = await response.text();\n    const txBytes = intToBigInt(transaction.serialize().byteLength, false);\n    const feeRate = intToBigInt(feeRateResult, false);\n    return feeRate * txBytes;\n}\nexport async function makeUnsignedContractCall(txOptions) {\n    const defaultOptions = {\n        fee: BigInt(0),\n        nonce: BigInt(0),\n        network: new StacksMainnet(),\n        postConditionMode: PostConditionMode.Deny,\n        sponsored: false,\n    };\n    const options = Object.assign(defaultOptions, txOptions);\n    const payload = createContractCallPayload(options.contractAddress, options.contractName, options.functionName, options.functionArgs);\n    if (options?.validateWithAbi) {\n        let abi;\n        if (typeof options.validateWithAbi === 'boolean') {\n            if (options?.network) {\n                abi = await getAbi(options.contractAddress, options.contractName, options.network);\n            }\n            else {\n                throw new Error('Network option must be provided in order to validate with ABI');\n            }\n        }\n        else {\n            abi = options.validateWithAbi;\n        }\n        validateContractCall(payload, abi);\n    }\n    let spendingCondition = null;\n    let authorization = null;\n    if ('publicKey' in options) {\n        spendingCondition = createSingleSigSpendingCondition(AddressHashMode.SerializeP2PKH, options.publicKey, options.nonce, options.fee);\n    }\n    else {\n        spendingCondition = createMultiSigSpendingCondition(AddressHashMode.SerializeP2SH, options.numSignatures, options.publicKeys, options.nonce, options.fee);\n    }\n    if (options.sponsored) {\n        authorization = createSponsoredAuth(spendingCondition);\n    }\n    else {\n        authorization = createStandardAuth(spendingCondition);\n    }\n    const network = StacksNetwork.fromNameOrNetwork(options.network);\n    const postConditions = [];\n    if (options.postConditions && options.postConditions.length > 0) {\n        options.postConditions.forEach(postCondition => {\n            postConditions.push(postCondition);\n        });\n    }\n    const lpPostConditions = createLPList(postConditions);\n    const transaction = new StacksTransaction(network.version, authorization, payload, lpPostConditions, options.postConditionMode, options.anchorMode, network.chainId);\n    if (txOptions.fee === undefined || txOptions.fee === null) {\n        const fee = await estimateTransactionFeeWithFallback(transaction, network);\n        transaction.setFee(fee);\n    }\n    if (txOptions.nonce === undefined || txOptions.nonce === null) {\n        const addressVersion = network.version === TransactionVersion.Mainnet\n            ? AddressVersion.MainnetSingleSig\n            : AddressVersion.TestnetSingleSig;\n        const senderAddress = c32address(addressVersion, transaction.auth.spendingCondition.signer);\n        const txNonce = await getNonce(senderAddress, network);\n        transaction.setNonce(txNonce);\n    }\n    return transaction;\n}\nexport async function makeContractCall(txOptions) {\n    if ('senderKey' in txOptions) {\n        const publicKey = publicKeyToString(getPublicKey(createStacksPrivateKey(txOptions.senderKey)));\n        const options = omit(txOptions, 'senderKey');\n        const transaction = await makeUnsignedContractCall({ publicKey, ...options });\n        const privKey = createStacksPrivateKey(txOptions.senderKey);\n        const signer = new TransactionSigner(transaction);\n        signer.signOrigin(privKey);\n        return transaction;\n    }\n    else {\n        const options = omit(txOptions, 'signerKeys');\n        const transaction = await makeUnsignedContractCall(options);\n        const signer = new TransactionSigner(transaction);\n        let pubKeys = txOptions.publicKeys;\n        for (const key of txOptions.signerKeys) {\n            const pubKey = pubKeyfromPrivKey(key);\n            pubKeys = pubKeys.filter(pk => pk !== bytesToHex(pubKey.data));\n            signer.signOrigin(createStacksPrivateKey(key));\n        }\n        for (const key of pubKeys) {\n            signer.appendOrigin(publicKeyFromBytes(hexToBytes(key)));\n        }\n        return transaction;\n    }\n}\nexport function makeStandardSTXPostCondition(address, conditionCode, amount) {\n    return createSTXPostCondition(createStandardPrincipal(address), conditionCode, amount);\n}\nexport function makeContractSTXPostCondition(address, contractName, conditionCode, amount) {\n    return createSTXPostCondition(createContractPrincipal(address, contractName), conditionCode, amount);\n}\nexport function makeStandardFungiblePostCondition(address, conditionCode, amount, assetInfo) {\n    return createFungiblePostCondition(createStandardPrincipal(address), conditionCode, amount, assetInfo);\n}\nexport function makeContractFungiblePostCondition(address, contractName, conditionCode, amount, assetInfo) {\n    return createFungiblePostCondition(createContractPrincipal(address, contractName), conditionCode, amount, assetInfo);\n}\nexport function makeStandardNonFungiblePostCondition(address, conditionCode, assetInfo, assetId) {\n    return createNonFungiblePostCondition(createStandardPrincipal(address), conditionCode, assetInfo, assetId);\n}\nexport function makeContractNonFungiblePostCondition(address, contractName, conditionCode, assetInfo, assetId) {\n    return createNonFungiblePostCondition(createContractPrincipal(address, contractName), conditionCode, assetInfo, assetId);\n}\nexport async function callReadOnlyFunction(readOnlyFunctionOptions) {\n    const defaultOptions = {\n        network: new StacksMainnet(),\n    };\n    const options = Object.assign(defaultOptions, readOnlyFunctionOptions);\n    const { contractName, contractAddress, functionName, functionArgs, senderAddress } = options;\n    const network = StacksNetwork.fromNameOrNetwork(options.network);\n    const url = network.getReadOnlyFunctionCallApiUrl(contractAddress, contractName, functionName);\n    const args = functionArgs.map(arg => cvToHex(arg));\n    const body = JSON.stringify({\n        sender: senderAddress,\n        arguments: args,\n    });\n    const response = await network.fetchFn(url, {\n        method: 'POST',\n        body,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    });\n    if (!response.ok) {\n        const msg = await response.text().catch(() => '');\n        throw new Error(`Error calling read-only function. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`);\n    }\n    return response.json().then(responseJson => parseReadOnlyResponse(responseJson));\n}\nexport async function getContractMapEntry(getContractMapEntryOptions) {\n    const defaultOptions = {\n        network: new StacksMainnet(),\n    };\n    const { contractAddress, contractName, mapName, mapKey, network } = Object.assign(defaultOptions, getContractMapEntryOptions);\n    const derivedNetwork = StacksNetwork.fromNameOrNetwork(network);\n    const url = derivedNetwork.getMapEntryUrl(contractAddress, contractName, mapName);\n    const serializedKeyBytes = serializeCV(mapKey);\n    const serializedKeyHex = '0x' + bytesToHex(serializedKeyBytes);\n    const fetchOptions = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(serializedKeyHex),\n    };\n    const response = await derivedNetwork.fetchFn(url, fetchOptions);\n    if (!response.ok) {\n        const msg = await response.text().catch(() => '');\n        throw new Error(`Error fetching map entry for map \"${mapName}\" in contract \"${contractName}\" at address ${contractAddress}, using map key \"${serializedKeyHex}\". Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`);\n    }\n    const responseBody = await response.text();\n    const responseJson = JSON.parse(responseBody);\n    if (!responseJson.data) {\n        throw new Error(`Error fetching map entry for map \"${mapName}\" in contract \"${contractName}\" at address ${contractAddress}, using map key \"${serializedKeyHex}\". Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the response: \"${responseBody}\"`);\n    }\n    let deserializedCv;\n    try {\n        deserializedCv = deserializeCV(responseJson.data);\n    }\n    catch (error) {\n        throw new Error(`Error deserializing Clarity value \"${responseJson.data}\": ${error}`);\n    }\n    return deserializedCv;\n}\nexport async function sponsorTransaction(sponsorOptions) {\n    const defaultOptions = {\n        fee: 0,\n        sponsorNonce: 0,\n        sponsorAddressHashmode: AddressHashMode.SerializeP2PKH,\n        network: sponsorOptions.transaction.version === TransactionVersion.Mainnet\n            ? new StacksMainnet()\n            : new StacksTestnet(),\n    };\n    const options = Object.assign(defaultOptions, sponsorOptions);\n    const network = StacksNetwork.fromNameOrNetwork(options.network);\n    const sponsorPubKey = pubKeyfromPrivKey(options.sponsorPrivateKey);\n    if (sponsorOptions.fee === undefined || sponsorOptions.fee === null) {\n        let txFee = 0;\n        switch (options.transaction.payload.payloadType) {\n            case PayloadType.TokenTransfer:\n            case PayloadType.SmartContract:\n            case PayloadType.VersionedSmartContract:\n            case PayloadType.ContractCall:\n                const estimatedLen = estimateTransactionByteLength(options.transaction);\n                try {\n                    txFee = (await estimateTransaction(options.transaction.payload, estimatedLen, network))[1]\n                        .fee;\n                }\n                catch (e) {\n                    throw e;\n                }\n                break;\n            default:\n                throw new Error(`Sponsored transactions not supported for transaction type ${PayloadType[options.transaction.payload.payloadType]}`);\n        }\n        options.transaction.setFee(txFee);\n        options.fee = txFee;\n    }\n    if (sponsorOptions.sponsorNonce === undefined || sponsorOptions.sponsorNonce === null) {\n        const addressVersion = network.version === TransactionVersion.Mainnet\n            ? AddressVersion.MainnetSingleSig\n            : AddressVersion.TestnetSingleSig;\n        const senderAddress = publicKeyToAddress(addressVersion, sponsorPubKey);\n        const sponsorNonce = await getNonce(senderAddress, network);\n        options.sponsorNonce = sponsorNonce;\n    }\n    const sponsorSpendingCondition = createSingleSigSpendingCondition(options.sponsorAddressHashmode, publicKeyToString(sponsorPubKey), options.sponsorNonce, options.fee);\n    options.transaction.setSponsor(sponsorSpendingCondition);\n    const privKey = createStacksPrivateKey(options.sponsorPrivateKey);\n    const signer = TransactionSigner.createSponsorSigner(options.transaction, sponsorSpendingCondition);\n    signer.signSponsor(privKey);\n    return signer.transaction;\n}\nexport function estimateTransactionByteLength(transaction) {\n    const hashMode = transaction.auth.spendingCondition.hashMode;\n    const multiSigHashModes = [AddressHashMode.SerializeP2SH, AddressHashMode.SerializeP2WSH];\n    if (multiSigHashModes.includes(hashMode)) {\n        const multiSigSpendingCondition = transaction.auth\n            .spendingCondition;\n        const existingSignatures = multiSigSpendingCondition.fields.filter(field => field.contents.type === StacksMessageType.MessageSignature).length;\n        const totalSignatureLength = (multiSigSpendingCondition.signaturesRequired - existingSignatures) *\n            (RECOVERABLE_ECDSA_SIG_LENGTH_BYTES + 1);\n        return transaction.serialize().byteLength + totalSignatureLength;\n    }\n    else {\n        return transaction.serialize().byteLength;\n    }\n}\nexport async function estimateTransactionFeeWithFallback(transaction, network) {\n    try {\n        const estimatedLen = estimateTransactionByteLength(transaction);\n        return (await estimateTransaction(transaction.payload, estimatedLen, network))[1].fee;\n    }\n    catch (error) {\n        if (error instanceof NoEstimateAvailableError) {\n            return await estimateTransferUnsafe(transaction, network);\n        }\n        throw error;\n    }\n}\n//# sourceMappingURL=builders.js.map","/** Address versions corresponding to pox.clar, pox-2.clar */\nexport enum PoXAddressVersion {\n  /** (b58/legacy) p2pkh address, and `hashbytes` is the 20-byte hash160 of a single public key */\n  P2PKH = 0x00,\n  /** (b58/legacy) p2sh address, and `hashbytes` is the 20-byte hash160 of a redeemScript script */\n  P2SH = 0x01,\n  /** (b58/legacy) p2wpkh-p2sh address, and `hashbytes` is the 20-byte hash160 of a p2wpkh witness script */\n  P2SHP2WPKH = 0x02, // likely unused, as indistinguishable from P2SH\n  /** (b58/legacy) p2wsh-p2sh address, and `hashbytes` is the 20-byte hash160 of a p2wsh witness script */\n  P2SHP2WSH = 0x03, // likely unused, as indistinguishable from P2SH\n  /** (bech32/segwit) p2wpkh address, and `hashbytes` is the 20-byte hash160 of the witness script */\n  P2WPKH = 0x04,\n  /** (bech32/segwit) p2wsh address, and `hashbytes` is the 32-byte sha256 of the witness script */\n  P2WSH = 0x05,\n  /** (bech32/segwit) p2tr address, and `hashbytes` is the 32-byte sha256 of the witness script */\n  P2TR = 0x06,\n}\n\n/** @ignore */\nexport const BitcoinNetworkVersion = {\n  mainnet: {\n    P2PKH: 0x00, // 0\n    P2SH: 0x05, // 5\n  },\n  testnet: {\n    P2PKH: 0x6f, // 111\n    P2SH: 0xc4, // 196\n  },\n  devnet: {\n    // equivalent to testnet for our purposes\n    P2PKH: 0x6f, // 111\n    P2SH: 0xc4, // 196\n  },\n  mocknet: {\n    // equivalent to testnet for our purposes\n    P2PKH: 0x6f, // 111\n    P2SH: 0xc4, // 196\n  },\n} as const;\n\n/**\n * Valid prefix chars for mainnet and testnet P2PKH and P2SH addresses\n *  mainnet P2PKH: 1\n *  testnet P2PKH: m or n\n *  mainnet P2SH: 3\n *  testnet P2SH: 2\n * @ignore\n */\nexport const B58_ADDR_PREFIXES = /^(1|3|m|n|2)/;\n\n/**\n * Valid prefixes for supported segwit address, structure is:\n * HRP PREFIX + SEPARATOR (always '1') + C32_ENCODED SEGWIT_VERSION_BYTE ('q' for 0, 'p' for 1) + HASHDATA\n * @ignore\n */\nexport const SEGWIT_V0_ADDR_PREFIX = /^(bc1q|tb1q|bcrt1q)/i;\nexport const SEGWIT_V1_ADDR_PREFIX = /^(bc1p|tb1p|bcrt1p)/i;\n\n/**\n * Segwit Human-Readable Parts\n * Valid prefixs for mainnet and testnet bech32/segwit addresses\n * @ignore\n */\nexport const SegwitPrefix = {\n  mainnet: 'bc',\n  testnet: 'tb',\n  devnet: 'bcrt',\n  mocknet: 'bcrt',\n} as const;\n/** @ignore */\nexport const SEGWIT_ADDR_PREFIXES = /^(bc|tb)/i;\n\n/** @ignore */\nexport const SEGWIT_V0 = 0;\n/** @ignore */\nexport const SEGWIT_V1 = 1;\n\n// Segwit/taproot address examples:\n//   mainnet P2WPKH: bc1qw508d6qejxtdg4y5r3zarvary0c5xw7kv8f3t4\n//   testnet P2WPKH: tb1qw508d6qejxtdg4y5r3zarvary0c5xw7kxpjzsx\n//   mainnet P2WSH: bc1qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3qccfmv3\n//   testnet P2WSH: tb1qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3q0sl5k7\n//   mainnet P2TR: bc1p5d7rjq7g6rdk2yhzks9smlaqtedr4dekq08ge8ztwac72sfr9rusxg3297\n//   testnet P2TR: tb1p6h5fuzmnvpdthf5shf0qqjzwy7wsqc5rhmgq2ks9xrak4ry6mtrscsqvzp\n\n/**\n * Transitional periods from the 2.1 launch\n * @see SIP-015\n */\nexport enum PoxOperationPeriod {\n  /** Period 1: This is before the 2.1 fork. */\n  Period1 = 'Period1',\n  /** Period 2a: This is after the 2.1 fork, but before v1_unlock_height. */\n  Period2a = 'Period2a', //\n  /** Period 2b: This is after the 2.1 fork, after v1_unlock_height, but before the first PoX-2 reward cycle. */\n  Period2b = 'Period2b',\n  /** Period 3: This is after the first PoX-2 reward cycle has begun. The original PoX contract state will no longer have any impact on reward sets. */\n  Period3 = 'Period3',\n}\n\nexport enum StackingErrors {\n  // taken from https://github.com/stacks-network/stacks-blockchain/blob/088ff00761b27a12bfaf19dab5743e77e8ca4d0c/src/chainstate/stacks/boot/pox-3.clar\n  ERR_STACKING_UNREACHABLE = 255,\n  ERR_STACKING_CORRUPTED_STATE = 254,\n  ERR_STACKING_INSUFFICIENT_FUNDS = 1,\n  ERR_STACKING_INVALID_LOCK_PERIOD = 2,\n  ERR_STACKING_ALREADY_STACKED = 3,\n  ERR_STACKING_NO_SUCH_PRINCIPAL = 4,\n  ERR_STACKING_EXPIRED = 5,\n  ERR_STACKING_STX_LOCKED = 6,\n  ERR_STACKING_PERMISSION_DENIED = 9,\n  ERR_STACKING_THRESHOLD_NOT_MET = 11,\n  ERR_STACKING_POX_ADDRESS_IN_USE = 12,\n  ERR_STACKING_INVALID_POX_ADDRESS = 13,\n  ERR_STACKING_ALREADY_REJECTED = 17,\n  ERR_STACKING_INVALID_AMOUNT = 18,\n  ERR_NOT_ALLOWED = 19,\n  ERR_STACKING_ALREADY_DELEGATED = 20,\n  ERR_DELEGATION_EXPIRES_DURING_LOCK = 21,\n  ERR_DELEGATION_TOO_MUCH_LOCKED = 22,\n  ERR_DELEGATION_POX_ADDR_REQUIRED = 23,\n  ERR_INVALID_START_BURN_HEIGHT = 24,\n  ERR_NOT_CURRENT_STACKER = 25,\n  ERR_STACK_EXTEND_NOT_LOCKED = 26,\n  ERR_STACK_INCREASE_NOT_LOCKED = 27,\n  ERR_DELEGATION_NO_REWARD_SLOT = 28,\n  ERR_DELEGATION_WRONG_REWARD_SLOT = 29,\n  ERR_STACKING_IS_DELEGATED = 30,\n  ERR_STACKING_NOT_DELEGATED = 31,\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { getPublicKey as nobleGetPublicKey, signSync, utils } from '@noble/secp256k1';\nimport { bytesToHex, concatBytes, hexToBytes, privateKeyToBytes, PRIVATE_KEY_COMPRESSED_LENGTH, readUInt8, } from '@stacks/common';\nimport base58 from 'bs58';\nimport { hashRipemd160 } from './hashRipemd160';\nimport { hashSha256Sync } from './sha2Hash';\nconst BITCOIN_PUBKEYHASH = 0x00;\nutils.hmacSha256Sync = (key, ...msgs) => {\n    const h = hmac.create(sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nexport function makeECPrivateKey() {\n    return bytesToHex(utils.randomPrivateKey());\n}\nexport function base58CheckDecode(btcAddress) {\n    const bytes = base58.decode(btcAddress);\n    const payload = bytes.slice(0, -4);\n    const checksum = bytes.slice(-4);\n    const newChecksum = sha256(sha256(payload));\n    if ((checksum[0] ^ newChecksum[0]) |\n        (checksum[1] ^ newChecksum[1]) |\n        (checksum[2] ^ newChecksum[2]) |\n        (checksum[3] ^ newChecksum[3])) {\n        throw new Error('Invalid checksum');\n    }\n    if (payload.length !== 21)\n        throw new TypeError('Invalid address length');\n    const version = readUInt8(payload, 0);\n    const hash = payload.slice(1);\n    return { version, hash };\n}\nexport function base58Encode(hash) {\n    const checksum = sha256(sha256(hash));\n    return base58.encode(concatBytes(hash, checksum).slice(0, hash.length + 4));\n}\nexport function base58CheckEncode(version, hash) {\n    return base58Encode(concatBytes(new Uint8Array([version]), hash.slice(0, 20)));\n}\nexport function publicKeyToBtcAddress(publicKey, version = BITCOIN_PUBKEYHASH) {\n    const publicKeyBytes = typeof publicKey === 'string' ? hexToBytes(publicKey) : publicKey;\n    const publicKeyHash160 = hashRipemd160(hashSha256Sync(publicKeyBytes));\n    return base58CheckEncode(version, publicKeyHash160);\n}\nexport function getPublicKeyFromPrivate(privateKey) {\n    const privateKeyBytes = privateKeyToBytes(privateKey);\n    return bytesToHex(nobleGetPublicKey(privateKeyBytes.slice(0, 32), true));\n}\nexport function ecSign(messageHash, hexPrivateKey) {\n    return signSync(messageHash, privateKeyToBytes(hexPrivateKey).slice(0, 32), {\n        der: false,\n    });\n}\nexport function isValidPrivateKey(privateKey) {\n    return utils.isValidPrivateKey(privateKeyToBytes(privateKey));\n}\nexport function compressPrivateKey(privateKey) {\n    const privateKeyBytes = privateKeyToBytes(privateKey);\n    return privateKeyBytes.length == PRIVATE_KEY_COMPRESSED_LENGTH\n        ? privateKeyBytes\n        : concatBytes(privateKeyBytes, new Uint8Array([1]));\n}\n//# sourceMappingURL=keys.js.map","import { bech32, bech32m } from '@scure/base';\nimport { bigIntToBytes } from '@stacks/common';\nimport { base58CheckDecode, base58CheckEncode } from '@stacks/encryption';\nimport {\n  bufferCV,\n  BufferCV,\n  ClarityType,\n  ClarityValue,\n  OptionalCV,\n  tupleCV,\n  TupleCV,\n} from '@stacks/transactions';\nimport { PoxOperationInfo } from '.';\nimport {\n  B58_ADDR_PREFIXES,\n  BitcoinNetworkVersion,\n  PoXAddressVersion,\n  PoxOperationPeriod,\n  SegwitPrefix,\n  SEGWIT_ADDR_PREFIXES,\n  SEGWIT_V0,\n  SEGWIT_V0_ADDR_PREFIX,\n  SEGWIT_V1,\n  SEGWIT_V1_ADDR_PREFIX,\n  StackingErrors,\n} from './constants';\nimport { StacksNetworkName, StacksNetworks } from '@stacks/network';\n\nexport class InvalidAddressError extends Error {\n  innerError?: Error;\n  constructor(address: string, innerError?: Error) {\n    const msg = `'${address}' is not a valid P2PKH/P2SH/P2WPKH/P2WSH/P2TR address`;\n    super(msg);\n    this.message = msg;\n    this.name = this.constructor.name;\n    this.innerError = innerError;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\n\n/** @ignore */\nexport function btcAddressVersionToLegacyHashMode(btcAddressVersion: number): PoXAddressVersion {\n  switch (btcAddressVersion) {\n    case BitcoinNetworkVersion.mainnet.P2PKH:\n      return PoXAddressVersion.P2PKH;\n    case BitcoinNetworkVersion.testnet.P2PKH:\n      return PoXAddressVersion.P2PKH;\n    case BitcoinNetworkVersion.mainnet.P2SH:\n      return PoXAddressVersion.P2SH;\n    case BitcoinNetworkVersion.testnet.P2SH:\n      return PoXAddressVersion.P2SH;\n    default:\n      throw new Error('Invalid pox address version');\n  }\n}\n\n/** @ignore */\nfunction nativeAddressToSegwitVersion(\n  witnessVersion: number,\n  dataLength: number\n): PoXAddressVersion {\n  if (witnessVersion === SEGWIT_V0 && dataLength === 20) return PoXAddressVersion.P2WPKH;\n  if (witnessVersion === SEGWIT_V0 && dataLength === 32) return PoXAddressVersion.P2WSH;\n  if (witnessVersion === SEGWIT_V1 && dataLength === 32) return PoXAddressVersion.P2TR;\n\n  throw new Error(\n    'Invalid native segwit witness version and byte length. Currently, only P2WPKH, P2WSH, and P2TR are supported.'\n  );\n}\n\nfunction bech32Decode(btcAddress: string) {\n  const { words: bech32Words } = bech32.decode(btcAddress);\n  const witnessVersion = bech32Words[0];\n\n  if (witnessVersion > 0)\n    throw new Error('Addresses with a witness version >= 1 should be encoded in bech32m');\n\n  return {\n    witnessVersion,\n    data: bech32.fromWords(bech32Words.slice(1)),\n  };\n}\n\nfunction bech32MDecode(btcAddress: string) {\n  const { words: bech32MWords } = bech32m.decode(btcAddress);\n  const witnessVersion = bech32MWords[0];\n\n  if (witnessVersion == 0)\n    throw new Error('Addresses with witness version 1 should be encoded in bech32');\n\n  return {\n    witnessVersion,\n    data: bech32m.fromWords(bech32MWords.slice(1)),\n  };\n}\n\nfunction decodeNativeSegwitBtcAddress(btcAddress: string): {\n  witnessVersion: number;\n  data: Uint8Array;\n} {\n  if (SEGWIT_V0_ADDR_PREFIX.test(btcAddress)) return bech32Decode(btcAddress);\n  if (SEGWIT_V1_ADDR_PREFIX.test(btcAddress)) return bech32MDecode(btcAddress);\n  throw new Error(\n    `Native segwit address ${btcAddress} does not match valid prefix ${SEGWIT_V0_ADDR_PREFIX} or ${SEGWIT_V1_ADDR_PREFIX}`\n  );\n}\n\nexport function decodeBtcAddress(btcAddress: string): {\n  version: PoXAddressVersion;\n  data: Uint8Array;\n} {\n  try {\n    if (B58_ADDR_PREFIXES.test(btcAddress)) {\n      const b58 = base58CheckDecode(btcAddress);\n      const addressVersion = btcAddressVersionToLegacyHashMode(b58.version);\n      return {\n        version: addressVersion,\n        data: b58.hash,\n      };\n    } else if (SEGWIT_ADDR_PREFIXES.test(btcAddress)) {\n      const b32 = decodeNativeSegwitBtcAddress(btcAddress);\n      const addressVersion = nativeAddressToSegwitVersion(b32.witnessVersion, b32.data.length);\n      return {\n        version: addressVersion,\n        data: b32.data,\n      };\n    }\n    throw new Error('Unknown BTC address prefix.');\n  } catch (error) {\n    throw new InvalidAddressError(btcAddress, error as Error);\n  }\n}\n\nexport function extractPoxAddressFromClarityValue(poxAddrClarityValue: ClarityValue) {\n  const clarityValue = poxAddrClarityValue as TupleCV;\n  if (clarityValue.type !== ClarityType.Tuple || !clarityValue.data) {\n    throw new Error('Invalid argument, expected ClarityValue to be a TupleCV');\n  }\n  if (!('version' in clarityValue.data) || !('hashbytes' in clarityValue.data)) {\n    throw new Error(\n      'Invalid argument, expected Clarity tuple value to contain `version` and `hashbytes` keys'\n    );\n  }\n  const versionCV = clarityValue.data['version'] as BufferCV;\n  const hashBytesCV = clarityValue.data['hashbytes'] as BufferCV;\n  if (versionCV.type !== ClarityType.Buffer || hashBytesCV.type !== ClarityType.Buffer) {\n    throw new Error(\n      'Invalid argument, expected Clarity tuple value to contain `version` and `hashbytes` buffers'\n    );\n  }\n  return {\n    version: versionCV.buffer[0],\n    hashBytes: hashBytesCV.buffer,\n  };\n}\n\nexport function getErrorString(error: StackingErrors): string {\n  switch (error) {\n    case StackingErrors.ERR_STACKING_UNREACHABLE:\n      return 'Stacking unreachable';\n    case StackingErrors.ERR_STACKING_CORRUPTED_STATE:\n      return 'Stacking state is corrupted';\n    case StackingErrors.ERR_STACKING_INSUFFICIENT_FUNDS:\n      return 'Insufficient funds';\n    case StackingErrors.ERR_STACKING_INVALID_LOCK_PERIOD:\n      return 'Invalid lock period';\n    case StackingErrors.ERR_STACKING_ALREADY_STACKED:\n      return 'Account already stacked. Concurrent stacking not allowed.';\n    case StackingErrors.ERR_STACKING_NO_SUCH_PRINCIPAL:\n      return 'Principal does not exist';\n    case StackingErrors.ERR_STACKING_EXPIRED:\n      return 'Stacking expired';\n    case StackingErrors.ERR_STACKING_STX_LOCKED:\n      return 'STX balance is locked';\n    case StackingErrors.ERR_STACKING_PERMISSION_DENIED:\n      return 'Permission denied';\n    case StackingErrors.ERR_STACKING_THRESHOLD_NOT_MET:\n      return 'Stacking threshold not met';\n    case StackingErrors.ERR_STACKING_POX_ADDRESS_IN_USE:\n      return 'PoX address already in use';\n    case StackingErrors.ERR_STACKING_INVALID_POX_ADDRESS:\n      return 'Invalid PoX address';\n    case StackingErrors.ERR_STACKING_ALREADY_REJECTED:\n      return 'Stacking already rejected';\n    case StackingErrors.ERR_STACKING_INVALID_AMOUNT:\n      return 'Invalid amount';\n    case StackingErrors.ERR_NOT_ALLOWED:\n      return 'Stacking not allowed';\n    case StackingErrors.ERR_STACKING_ALREADY_DELEGATED:\n      return 'Already delegated';\n    case StackingErrors.ERR_DELEGATION_EXPIRES_DURING_LOCK:\n      return 'Delegation expires during lock period';\n    case StackingErrors.ERR_DELEGATION_TOO_MUCH_LOCKED:\n      return 'Delegation too much locked';\n    case StackingErrors.ERR_DELEGATION_POX_ADDR_REQUIRED:\n      return 'PoX address required for delegation';\n    case StackingErrors.ERR_INVALID_START_BURN_HEIGHT:\n      return 'Invalid start burn height';\n    case StackingErrors.ERR_NOT_CURRENT_STACKER: // not used in pox contract\n      return 'ERR_NOT_CURRENT_STACKER';\n    case StackingErrors.ERR_STACK_EXTEND_NOT_LOCKED:\n      return 'Stacker must be currently locked';\n    case StackingErrors.ERR_STACK_INCREASE_NOT_LOCKED:\n      return 'Stacker must be currently locked';\n    case StackingErrors.ERR_DELEGATION_NO_REWARD_SLOT:\n      return 'Invalid reward-cycle and reward-cycle-index';\n    case StackingErrors.ERR_DELEGATION_WRONG_REWARD_SLOT:\n      return 'PoX address must match the one on record';\n    case StackingErrors.ERR_STACKING_IS_DELEGATED:\n      return 'Stacker must be directly stacking and not delegating';\n    case StackingErrors.ERR_STACKING_NOT_DELEGATED:\n      return 'Stacker must be delegating and not be directly stacking';\n  }\n}\n\nexport function poxAddressToTuple(poxAddress: string) {\n  const { version, data } = decodeBtcAddress(poxAddress);\n  const versionBuff = bufferCV(bigIntToBytes(BigInt(version), 1));\n  const hashBuff = bufferCV(data);\n  return tupleCV({\n    version: versionBuff,\n    hashbytes: hashBuff,\n  });\n}\n\nfunction legacyHashModeToBtcAddressVersion(\n  hashMode: PoXAddressVersion,\n  network: StacksNetworkName\n): number {\n  switch (hashMode) {\n    case PoXAddressVersion.P2PKH:\n      return BitcoinNetworkVersion[network].P2PKH;\n    case PoXAddressVersion.P2SH:\n    case PoXAddressVersion.P2SHP2WPKH:\n    case PoXAddressVersion.P2SHP2WSH:\n      // P2SHP2WPKH and P2SHP2WSH are treated as P2SH for the sender\n      return BitcoinNetworkVersion[network].P2SH;\n    default:\n      throw new Error('Invalid pox address version');\n  }\n}\n\nfunction _poxAddressToBtcAddress_Values(\n  version: number,\n  hashBytes: Uint8Array,\n  network: StacksNetworkName\n): string {\n  if (!StacksNetworks.includes(network)) throw new Error('Invalid network.');\n\n  switch (version) {\n    case PoXAddressVersion.P2PKH:\n    case PoXAddressVersion.P2SH:\n    case PoXAddressVersion.P2SHP2WPKH:\n    case PoXAddressVersion.P2SHP2WSH: {\n      const btcAddrVersion = legacyHashModeToBtcAddressVersion(version, network);\n      return base58CheckEncode(btcAddrVersion, hashBytes);\n    }\n    case PoXAddressVersion.P2WPKH:\n    case PoXAddressVersion.P2WSH: {\n      const words = bech32.toWords(hashBytes);\n      return bech32.encode(SegwitPrefix[network], [SEGWIT_V0, ...words]);\n    }\n    case PoXAddressVersion.P2TR: {\n      const words = bech32m.toWords(hashBytes);\n      return bech32m.encode(SegwitPrefix[network], [SEGWIT_V1, ...words]);\n    }\n  }\n  throw new Error(`Unexpected address version: ${version}`);\n}\n\nfunction _poxAddressToBtcAddress_ClarityValue(\n  poxAddrClarityValue: ClarityValue,\n  network: StacksNetworkName\n): string {\n  const poxAddr = extractPoxAddressFromClarityValue(poxAddrClarityValue);\n  return _poxAddressToBtcAddress_Values(poxAddr.version, poxAddr.hashBytes, network);\n}\n\nexport function poxAddressToBtcAddress(\n  version: number,\n  hashBytes: Uint8Array,\n  network: StacksNetworkName\n): string;\nexport function poxAddressToBtcAddress(\n  poxAddrClarityValue: ClarityValue,\n  network: StacksNetworkName\n): string;\nexport function poxAddressToBtcAddress(...args: any[]): string {\n  if (typeof args[0] === 'number') return _poxAddressToBtcAddress_Values(args[0], args[1], args[2]);\n  return _poxAddressToBtcAddress_ClarityValue(args[0], args[1]);\n}\n\nexport function unwrap<T extends ClarityValue>(optional: OptionalCV<T>) {\n  if (optional.type === ClarityType.OptionalSome) return optional.value;\n  if (optional.type === ClarityType.OptionalNone) return undefined;\n  throw new Error(\"Object is not an 'Optional'\");\n}\n\nexport function unwrapMap<T extends ClarityValue, U>(optional: OptionalCV<T>, map: (t: T) => U) {\n  if (optional.type === ClarityType.OptionalSome) return map(optional.value);\n  if (optional.type === ClarityType.OptionalNone) return undefined;\n  throw new Error(\"Object is not an 'Optional'\");\n}\n\n/** @internal */\nexport function ensurePox2Activated(operationInfo: PoxOperationInfo) {\n  if (operationInfo.period === PoxOperationPeriod.Period1)\n    throw new Error(\n      `PoX-2 has not activated yet (currently in period ${operationInfo.period} of PoX-2 operation)`\n    );\n}\n\nexport function ensureLegacyBtcAddressForPox1({\n  contract,\n  poxAddress,\n}: {\n  contract: string;\n  poxAddress?: string;\n}) {\n  if (!poxAddress) return;\n  if (contract.endsWith('.pox') && !B58_ADDR_PREFIXES.test(poxAddress)) {\n    throw new Error('PoX-1 requires P2PKH/P2SH/P2SH-P2WPKH/P2SH-P2WSH bitcoin addresses');\n  }\n}\n","// @ts-ignore\nimport { IntegerType, intToBigInt } from '@stacks/common';\nimport { StacksNetwork } from '@stacks/network';\nimport {\n  BurnchainRewardListResponse,\n  BurnchainRewardSlotHolderListResponse,\n  BurnchainRewardsTotal,\n} from '@stacks/stacks-blockchain-api-types';\nimport {\n  AnchorMode,\n  BufferCV,\n  ClarityType,\n  ClarityValue,\n  ContractCallOptions,\n  ContractCallPayload,\n  OptionalCV,\n  PrincipalCV,\n  ResponseErrorCV,\n  StacksTransaction,\n  TupleCV,\n  TxBroadcastResult,\n  UIntCV,\n  broadcastTransaction,\n  callReadOnlyFunction,\n  cvToString,\n  getFee,\n  makeContractCall,\n  noneCV,\n  principalCV,\n  principalToString,\n  someCV,\n  uintCV,\n  validateStacksAddress,\n} from '@stacks/transactions';\nimport { PoxOperationPeriod, StackingErrors } from './constants';\nimport {\n  ensureLegacyBtcAddressForPox1,\n  ensurePox2Activated,\n  poxAddressToTuple,\n  unwrap,\n  unwrapMap,\n} from './utils';\n\nexport * from './utils';\n\n/** @internal */\ninterface BaseTxOptions {\n  /** the fee for the transaction */\n  fee?: IntegerType;\n  /** the nonce for the transaction */\n  nonce?: IntegerType;\n  /** the private key (aka `senderkey`) for the transaction */\n  privateKey: string;\n}\n\nexport interface CycleInfo {\n  id: number;\n  min_threshold_ustx: number;\n  stacked_ustx: number;\n  is_pox_active: boolean;\n}\n\nexport interface ContractVersion {\n  contract_id: string;\n  activation_burnchain_block_height: number;\n  first_reward_cycle_id: number;\n}\n\nexport interface PoxInfo {\n  contract_id: string;\n  contract_versions?: ContractVersion[];\n  current_burnchain_block_height?: number;\n  first_burnchain_block_height: number;\n  min_amount_ustx: string;\n  next_reward_cycle_in: number;\n  prepare_cycle_length: number;\n  prepare_phase_block_length: number;\n  rejection_fraction: number;\n  rejection_votes_left_required: number;\n  reward_cycle_id: number;\n  reward_cycle_length: number;\n  reward_phase_block_length: number;\n  reward_slots: number;\n  current_cycle: CycleInfo;\n  next_cycle: CycleInfo & {\n    min_increment_ustx: number;\n    prepare_phase_start_block_height: number;\n    blocks_until_prepare_phase: number;\n    reward_phase_start_block_height: number;\n    blocks_until_reward_phase: number;\n    ustx_until_pox_rejection: number;\n  };\n}\n\nexport type PoxOperationInfo =\n  | {\n      period: PoxOperationPeriod.Period1;\n      pox1: { contract_id: string };\n    }\n  | {\n      period: PoxOperationPeriod;\n      pox1: { contract_id: string };\n      pox2: ContractVersion;\n      current: ContractVersion;\n    }\n  | {\n      period: PoxOperationPeriod.Period3;\n      pox1: { contract_id: string };\n      pox2: ContractVersion;\n      pox3: ContractVersion;\n      current: ContractVersion;\n    };\n\nexport interface AccountExtendedBalances {\n  stx: {\n    balance: IntegerType;\n    total_sent: IntegerType;\n    total_received: IntegerType;\n    locked: IntegerType;\n    lock_tx_id: string;\n    lock_height: number;\n    burnchain_lock_height: number;\n    burnchain_unlock_height: number;\n  };\n  fungible_tokens: any;\n  non_fungible_tokens: any;\n}\n\nexport type StackerInfo =\n  | {\n      stacked: false;\n    }\n  | {\n      stacked: true;\n      details: {\n        first_reward_cycle: number;\n        lock_period: number;\n        unlock_height: number;\n        pox_address: {\n          version: Uint8Array;\n          hashbytes: Uint8Array;\n        };\n      };\n    };\n\nexport type DelegationInfo =\n  | {\n      delegated: false;\n    }\n  | {\n      delegated: true;\n      details: {\n        amount_micro_stx: bigint;\n        delegated_to: string;\n        pox_address:\n          | {\n              version: Uint8Array;\n              hashbytes: Uint8Array;\n            }\n          | undefined;\n        until_burn_ht: number | undefined;\n      };\n    };\n\nexport interface BlockTimeInfo {\n  mainnet: {\n    target_block_time: number;\n  };\n  testnet: {\n    target_block_time: number;\n  };\n}\n\nexport interface CoreInfo {\n  burn_block_height: number;\n  stable_pox_consensus: string;\n}\n\nexport interface BalanceInfo {\n  balance: string;\n  nonce: number;\n}\n\nexport interface PaginationOptions {\n  limit: number;\n  offset: number;\n}\n\nexport interface RewardsError {\n  error: string;\n}\n\nexport interface RewardSetOptions {\n  contractId: string;\n  rewardCyleId: number;\n  rewardSetIndex: number;\n}\n\nexport interface RewardSetInfo {\n  pox_address: {\n    version: Uint8Array;\n    hashbytes: Uint8Array;\n  };\n  total_ustx: bigint;\n}\n\nexport interface StackingEligibility {\n  eligible: boolean;\n  reason?: string;\n}\n\n/**\n * Lock stx check options\n */\nexport interface CanLockStxOptions {\n  /** the reward Bitcoin address */\n  poxAddress: string;\n  /** number of cycles to lock */\n  cycles: number;\n}\n\n/**\n * Lock stx options\n */\nexport interface LockStxOptions {\n  /** private key to sign transaction */\n  privateKey: string;\n  /** number of cycles to lock */\n  cycles: number;\n  /** the reward Bitcoin address */\n  poxAddress: string;\n  /** number of microstacks to lock */\n  amountMicroStx: IntegerType;\n  /** the burnchain block height to begin lock */\n  burnBlockHeight: number;\n}\n\n/**\n * Stack extend stx options\n */\nexport interface StackExtendOptions {\n  /** private key to sign transaction */\n  privateKey: string;\n  /** number of cycles to extend by */\n  extendCycles: number;\n  /** the reward Bitcoin address */\n  poxAddress: string;\n}\n\n/**\n * Stack increase stx options\n */\nexport interface StackIncreaseOptions {\n  /** private key to sign transaction */\n  privateKey: string;\n  /** number of ustx to increase by */\n  increaseBy: IntegerType;\n}\n\n/**\n * Delegate stx options\n */\nexport interface DelegateStxOptions {\n  /** number of microstacks to delegate */\n  amountMicroStx: IntegerType;\n  /** the STX address of the delegatee */\n  delegateTo: string;\n  /** the burnchain block height after which delegation is revoked */\n  untilBurnBlockHeight?: number;\n  /** the reward Bitcoin address of the delegator */\n  poxAddress?: string;\n  /** private key to sign transaction */\n  privateKey: string;\n}\n\n/**\n * Delegate stack stx options\n */\nexport interface DelegateStackStxOptions {\n  /** the STX address of the delegator */\n  stacker: string;\n  /** number of microstacks to lock */\n  amountMicroStx: IntegerType;\n  /** the reward Bitcoin address of the delegator */\n  poxAddress: string;\n  /** the burnchain block height to begin lock */\n  burnBlockHeight: number;\n  /** number of cycles to lock */\n  cycles: number;\n  /** private key to sign transaction */\n  privateKey: string;\n}\n\n/**\n * Delegate stack extend options\n */\nexport interface DelegateStackExtendOptions {\n  /** the STX address of the delegator */\n  stacker: string;\n  /** the reward Bitcoin address of the delegator */\n  poxAddress: string;\n  /** number of cycles to extend by */\n  extendCount: number;\n  /** private key to sign transaction */\n  privateKey: string;\n}\n\n/**\n * Delegate stack increase options\n */\nexport interface DelegateStackIncreaseOptions {\n  /** the STX address of the delegator */\n  stacker: string;\n  /** the reward Bitcoin address of the delegator */\n  poxAddress: string;\n  /** number of ustx to increase by */\n  increaseBy: IntegerType;\n  /** private key to sign transaction */\n  privateKey: string;\n  /** nonce for the transaction */\n  nonce?: IntegerType;\n}\n\nexport interface StackAggregationCommitOptions {\n  poxAddress: string;\n  rewardCycle: number;\n  privateKey: string;\n}\n\nexport interface StackAggregationIncreaseOptions {\n  poxAddress: string;\n  rewardCycle: number;\n  rewardIndex: number;\n  privateKey: string;\n}\n\nexport class StackingClient {\n  constructor(\n    public address: string,\n    public network: StacksNetwork\n  ) {}\n\n  /**\n   * Get stacks node info\n   *\n   * @returns {Promise<CoreInfo>} that resolves to a CoreInfo response if the operation succeeds\n   */\n  async getCoreInfo(): Promise<CoreInfo> {\n    const url = this.network.getInfoUrl();\n    return this.network.fetchFn(url).then(res => res.json());\n  }\n\n  /**\n   * Get stacks node pox info\n   *\n   * @returns {Promise<PoxInfo>} that resolves to a PoxInfo response if the operation succeeds\n   */\n  async getPoxInfo(): Promise<PoxInfo> {\n    const url = this.network.getPoxInfoUrl();\n    return this.network.fetchFn(url).then(res => res.json());\n  }\n\n  /**\n   * Get stacks node target block time\n   *\n   * @returns {Promise<number>} resolves to a number if the operation succeeds\n   */\n  async getTargetBlockTime(): Promise<number> {\n    const url = this.network.getBlockTimeInfoUrl();\n    const res = await this.network.fetchFn(url).then(res => res.json());\n\n    if (this.network.isMainnet()) {\n      return res.mainnet.target_block_time;\n    } else {\n      return res.testnet.target_block_time;\n    }\n  }\n\n  async getAccountStatus(): Promise<any> {\n    const url = this.network.getAccountApiUrl(this.address);\n    return this.network.fetchFn(url).then(res => res.json());\n  }\n\n  /**\n   * Get account balance\n   * @returns {Promise<bigint>} resolves to a bigint if the operation succeeds\n   */\n  async getAccountBalance(): Promise<bigint> {\n    return this.getAccountStatus().then(res => {\n      return BigInt(res.balance);\n    });\n  }\n\n  /**\n   * Get extended account balances\n   * @returns {Promise<AccountExtendedBalances>} resolves to an AccountExtendedBalances response if the operation succeeds\n   */\n  async getAccountExtendedBalances(): Promise<AccountExtendedBalances> {\n    const url = this.network.getAccountExtendedBalancesApiUrl(this.address);\n    return this.network.fetchFn(url).then(res => res.json());\n  }\n\n  /**\n   * Get account balance of locked tokens\n   * @returns {Promise<bigint>} resolves to a bigint if the operation succeeds\n   */\n  async getAccountBalanceLocked(): Promise<bigint> {\n    return this.getAccountStatus().then(res => BigInt(res.locked));\n  }\n\n  /**\n   * Get reward cycle duration in seconds\n   * @returns {Promise<number>} resolves to a number if the operation succeeds\n   */\n  async getCycleDuration(): Promise<number> {\n    const poxInfoPromise = this.getPoxInfo();\n    const targetBlockTimePromise = await this.getTargetBlockTime();\n\n    return Promise.all([poxInfoPromise, targetBlockTimePromise]).then(\n      ([poxInfo, targetBlockTime]) => {\n        return poxInfo.reward_cycle_length * targetBlockTime;\n      }\n    );\n  }\n\n  /**\n   * Get the total burnchain rewards total for the set address\n   * @returns {Promise<TotalRewardsResponse | RewardsError>} that resolves to TotalRewardsResponse or RewardsError\n   */\n  async getRewardsTotalForBtcAddress(): Promise<BurnchainRewardsTotal | RewardsError> {\n    const url = this.network.getRewardsTotalUrl(this.address);\n    return this.network.fetchFn(url).then(res => res.json());\n  }\n\n  /**\n   * Get burnchain rewards for the set address\n   * @returns {Promise<RewardsResponse | RewardsError>} that resolves to RewardsResponse or RewardsError\n   */\n  async getRewardsForBtcAddress(\n    options?: PaginationOptions\n  ): Promise<BurnchainRewardListResponse | RewardsError> {\n    const url = `${this.network.getRewardsUrl(this.address, options)}`;\n    return this.network.fetchFn(url).then(res => res.json());\n  }\n\n  /**\n   * Get burnchain rewards holders for the set address\n   * @returns {Promise<RewardHoldersResponse | RewardsError>} that resolves to RewardHoldersResponse or RewardsError\n   */\n  async getRewardHoldersForBtcAddress(\n    options?: PaginationOptions\n  ): Promise<BurnchainRewardSlotHolderListResponse | RewardsError> {\n    const url = `${this.network.getRewardHoldersUrl(this.address, options)}`;\n    return this.network.fetchFn(url).then(res => res.json());\n  }\n\n  /**\n   * Get PoX address from reward set by index\n   * @returns {Promise<RewardSetInfo | undefined>} that resolves to RewardSetInfo if the entry exists\n   */\n  async getRewardSet(options: RewardSetOptions): Promise<RewardSetInfo | undefined> {\n    const [contractAddress, contractName] = this.parseContractId(options?.contractId);\n    const result = await callReadOnlyFunction({\n      network: this.network,\n      senderAddress: this.address,\n      contractAddress,\n      contractName,\n      functionArgs: [uintCV(options.rewardCyleId), uintCV(options.rewardSetIndex)],\n      functionName: 'get-reward-set-pox-address',\n    });\n\n    return unwrapMap(result as OptionalCV<TupleCV>, tuple => ({\n      pox_address: {\n        version: ((tuple.data['pox-addr'] as TupleCV).data['version'] as BufferCV).buffer,\n        hashbytes: ((tuple.data['pox-addr'] as TupleCV).data['hashbytes'] as BufferCV).buffer,\n      },\n      total_ustx: (tuple.data['total-ustx'] as UIntCV).value,\n    }));\n  }\n\n  /**\n   * Get number of seconds until next reward cycle\n   * @returns {Promise<number>} resolves to a number if the operation succeeds\n   *\n   * See also:\n   * - {@link getSecondsUntilStackingDeadline}\n   */\n  async getSecondsUntilNextCycle(): Promise<number> {\n    const poxInfoPromise = this.getPoxInfo();\n    const targetBlockTimePromise = this.getTargetBlockTime();\n    const coreInfoPromise = this.getCoreInfo();\n\n    return Promise.all([poxInfoPromise, targetBlockTimePromise, coreInfoPromise]).then(\n      ([poxInfo, targetBlockTime, coreInfo]) => {\n        const blocksToNextCycle =\n          poxInfo.reward_cycle_length -\n          ((coreInfo.burn_block_height - poxInfo.first_burnchain_block_height) %\n            poxInfo.reward_cycle_length);\n        return blocksToNextCycle * targetBlockTime;\n      }\n    );\n  }\n\n  /**\n   * Get number of seconds until the end of the stacking deadline.\n   * This is the estimated time stackers have to submit their stacking\n   * transactions to be included in the upcoming reward cycle.\n   * @returns {Promise<number>} resolves to a number of seconds if the operation succeeds.\n   * **⚠️ Attention**: The returned number of seconds can be negative if the deadline has passed and the prepare phase has started.\n   *\n   * See also:\n   * - {@link getSecondsUntilNextCycle}\n   */\n  async getSecondsUntilStackingDeadline(): Promise<number> {\n    const poxInfoPromise = this.getPoxInfo();\n    const targetBlockTimePromise = this.getTargetBlockTime();\n\n    return Promise.all([poxInfoPromise, targetBlockTimePromise]).then(\n      ([poxInfo, targetBlockTime]) =>\n        poxInfo.next_cycle.blocks_until_prepare_phase * targetBlockTime\n    );\n  }\n\n  /**\n   * Get information on current PoX operation\n   *\n   * Periods:\n   * - Period 1: This is before the 2.1 fork.\n   * - Period 2: This is after the 2.1 fork, but before cycle (N+1).\n   * - Period 3: This is after cycle (N+1) has begun. Original PoX contract state will no longer have any impact on reward sets, account lock status, etc.\n   *\n   * @returns {Promise<PoxOperationInfo>} that resolves to PoX operation info\n   */\n  async getPoxOperationInfo(poxInfo?: PoxInfo): Promise<PoxOperationInfo> {\n    poxInfo = poxInfo ?? (await this.getPoxInfo());\n\n    // ++ Before 2.1 Fork ++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    // => Period 1\n    if (\n      !poxInfo.current_burnchain_block_height ||\n      !poxInfo.contract_versions ||\n      poxInfo.contract_versions.length <= 1\n    ) {\n      // Node does not know about other pox versions yet\n      return { period: PoxOperationPeriod.Period1, pox1: { contract_id: poxInfo.contract_id } };\n    }\n\n    const poxContractVersions = [...poxInfo.contract_versions].sort(\n      (a, b) => a.activation_burnchain_block_height - b.activation_burnchain_block_height\n    ); //  by activation height ASC (earliest first)\n    const [pox1, pox2, pox3] = poxContractVersions;\n    const activatedPoxs = poxContractVersions.filter(\n      (c: ContractVersion) =>\n        (poxInfo?.current_burnchain_block_height as number) >= c.activation_burnchain_block_height\n    );\n    // Named pox contracts but also a more future-proof current pointer to latest activated PoX contract\n    const current = activatedPoxs[activatedPoxs.length - 1];\n\n    if (poxInfo.contract_versions.length == 2) {\n      const [address, name] = pox2.contract_id.split('.');\n      const pox2ConfiguredUrl = this.network.getDataVarUrl(address, name, 'configured');\n      const isPox2NotYetConfigured =\n        (await this.network.fetchFn(pox2ConfiguredUrl).then(r => r.text())) !== '{\"data\":\"0x03\"}'; // PoX-2 is configured on fork if data is 0x03\n\n      // => Period 1\n      if (isPox2NotYetConfigured) {\n        // Node hasn't forked yet (unclear if this case can happen on a non-mocknet/regtest node)\n        return { period: PoxOperationPeriod.Period1, pox1, pox2 };\n      }\n    }\n\n    // ++ >= 2.1 Fork ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    // => Period 2a\n    if (poxInfo.contract_id === pox1.contract_id) {\n      // In 2.1 fork, but PoX-2 hasn't been activated yet\n      return { period: PoxOperationPeriod.Period2a, pox1, pox2, current };\n    }\n\n    // ++ PoX-2 was activated ++++++++++++++++++++++++++++++++++++++++++++++++++\n    if (poxInfo.contract_id === pox2.contract_id) {\n      // => Period 2b\n      if (poxInfo.current_cycle.id < pox2.first_reward_cycle_id) {\n        // In 2.1 fork and PoX-2 is live\n        return { period: PoxOperationPeriod.Period2b, pox1, pox2, current };\n      }\n\n      // => Period 3\n      return { period: PoxOperationPeriod.Period3, pox1, pox2, current };\n    }\n\n    // ++ Post PoX-2 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    if (activatedPoxs.length > 2) {\n      // More than two PoX contracts have been activated\n      // => (Still) Period 3\n      return { period: PoxOperationPeriod.Period3, pox1, pox2, pox3, current };\n    }\n\n    throw new Error('Could not determine PoX Operation Period');\n  }\n\n  /**\n   * Check if stacking is enabled for next reward cycle\n   *\n   * @returns {Promise<boolean>} that resolves to a bool if the operation succeeds\n   */\n  async isStackingEnabledNextCycle(): Promise<boolean> {\n    return (await this.getPoxInfo()).rejection_votes_left_required > 0;\n  }\n\n  /**\n   * Check if account has minimum require amount of Stacks for stacking\n   * @returns {Promise<boolean>} that resolves to a bool if the operation succeeds\n   */\n  async hasMinimumStx(): Promise<boolean> {\n    const balance = await this.getAccountBalance();\n    const min = BigInt((await this.getPoxInfo()).min_amount_ustx);\n    return balance >= min;\n  }\n\n  /**\n   * Check if account can lock stx\n   * @param {CanLockStxOptions} options - a required lock STX options object\n   * @returns {Promise<StackingEligibility>} that resolves to a StackingEligibility object if the operation succeeds\n   */\n  async canStack({ poxAddress, cycles }: CanLockStxOptions): Promise<StackingEligibility> {\n    const balancePromise: Promise<bigint> = this.getAccountBalance();\n    const poxInfoPromise = this.getPoxInfo();\n\n    return Promise.all([balancePromise, poxInfoPromise])\n      .then(([balance, poxInfo]) => {\n        const address = poxAddressToTuple(poxAddress);\n        const [contractAddress, contractName] = this.parseContractId(poxInfo.contract_id);\n\n        return callReadOnlyFunction({\n          network: this.network,\n          contractName,\n          contractAddress,\n          functionName: 'can-stack-stx',\n          senderAddress: this.address,\n          functionArgs: [\n            address,\n            uintCV(balance.toString()),\n            uintCV(poxInfo.reward_cycle_id),\n            uintCV(cycles.toString()),\n          ],\n        });\n      })\n      .then((responseCV: ClarityValue) => {\n        if (responseCV.type === ClarityType.ResponseOk) {\n          return {\n            eligible: true,\n          };\n        } else {\n          const errorCV = responseCV as ResponseErrorCV;\n          return {\n            eligible: false,\n            reason: StackingErrors[+cvToString(errorCV.value)],\n          };\n        }\n      });\n  }\n\n  /**\n   * Generate and broadcast a stacking transaction to lock STX\n   * @param {LockStxOptions} options - a required lock STX options object\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async stack({\n    amountMicroStx,\n    poxAddress,\n    cycles,\n    burnBlockHeight,\n    ...txOptions\n  }: LockStxOptions & BaseTxOptions): Promise<TxBroadcastResult> {\n    const poxInfo = await this.getPoxInfo();\n    const poxOperationInfo = await this.getPoxOperationInfo(poxInfo);\n\n    const contract = await this.getStackingContract(poxOperationInfo);\n    ensureLegacyBtcAddressForPox1({ contract, poxAddress });\n\n    const callOptions = this.getStackOptions({\n      amountMicroStx,\n      cycles,\n      poxAddress,\n      contract,\n      burnBlockHeight,\n    });\n    const tx = await makeContractCall({\n      ...callOptions,\n      ...renamePrivateKey(txOptions),\n    });\n\n    return broadcastTransaction(tx, callOptions.network as StacksNetwork);\n  }\n\n  /**\n   * Generate and broadcast a stacking transaction to extend locked STX (`pox-2.stack-extend`)\n   * @category PoX-2\n   * @param {StackExtendOptions} - a required extend STX options object\n   * @returns a broadcasted txid if the operation succeeds\n   */\n  async stackExtend({\n    extendCycles,\n    poxAddress,\n    ...txOptions\n  }: StackExtendOptions & BaseTxOptions): Promise<TxBroadcastResult> {\n    const poxInfo = await this.getPoxInfo();\n    const poxOperationInfo = await this.getPoxOperationInfo(poxInfo);\n    ensurePox2Activated(poxOperationInfo);\n\n    const callOptions = this.getStackExtendOptions({\n      contract: poxInfo.contract_id,\n      extendCycles,\n      poxAddress,\n    });\n    const tx = await makeContractCall({\n      ...callOptions,\n      ...renamePrivateKey(txOptions),\n    });\n\n    return broadcastTransaction(tx, callOptions.network as StacksNetwork);\n  }\n\n  /**\n   * Generate and broadcast a stacking transaction to increase locked STX (`pox-2.stack-increase`)\n   * @category PoX-2\n   * @param {StackIncreaseOptions} - a required increase STX options object\n   * @returns a broadcasted txid if the operation succeeds\n   */\n  async stackIncrease({\n    increaseBy,\n    ...txOptions\n  }: StackIncreaseOptions & BaseTxOptions): Promise<TxBroadcastResult> {\n    const poxInfo = await this.getPoxInfo();\n    const poxOperationInfo = await this.getPoxOperationInfo(poxInfo);\n    ensurePox2Activated(poxOperationInfo);\n\n    const callOptions = this.getStackIncreaseOptions({\n      contract: poxInfo.contract_id,\n      increaseBy,\n    });\n    const tx = await makeContractCall({\n      ...callOptions,\n      ...renamePrivateKey(txOptions),\n    });\n\n    return broadcastTransaction(tx, callOptions.network as StacksNetwork);\n  }\n\n  /**\n   * As a delegatee, generate and broadcast a transaction to create a delegation relationship\n   * @param {DelegateStxOptions} options - a required delegate STX options object\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async delegateStx({\n    amountMicroStx,\n    delegateTo,\n    untilBurnBlockHeight,\n    poxAddress,\n    ...txOptions\n  }: // todo: should we provide manual contract definitions? (for users to choose which contract to use)\n  DelegateStxOptions & BaseTxOptions): Promise<TxBroadcastResult> {\n    const poxInfo = await this.getPoxInfo();\n    const poxOperationInfo = await this.getPoxOperationInfo(poxInfo);\n\n    const contract = await this.getStackingContract(poxOperationInfo);\n    ensureLegacyBtcAddressForPox1({ contract, poxAddress });\n\n    const callOptions = this.getDelegateOptions({\n      contract,\n      amountMicroStx,\n      delegateTo,\n      untilBurnBlockHeight,\n      poxAddress,\n    });\n\n    const tx = await makeContractCall({\n      ...callOptions,\n      ...renamePrivateKey(txOptions),\n    });\n\n    return broadcastTransaction(tx, callOptions.network as StacksNetwork);\n  }\n\n  /**\n   * As a delegator, generate and broadcast transactions to stack for multiple delegatees. This will lock up tokens owned by the delegatees.\n   * @param {DelegateStackStxOptions} options - a required delegate stack STX options object\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async delegateStackStx({\n    stacker,\n    amountMicroStx,\n    poxAddress,\n    burnBlockHeight,\n    cycles,\n    ...txOptions\n  }: DelegateStackStxOptions & BaseTxOptions): Promise<TxBroadcastResult> {\n    const poxInfo = await this.getPoxInfo();\n    const poxOperationInfo = await this.getPoxOperationInfo(poxInfo);\n\n    const contract = await this.getStackingContract(poxOperationInfo);\n    ensureLegacyBtcAddressForPox1({ contract, poxAddress });\n\n    const callOptions = this.getDelegateStackOptions({\n      contract,\n      stacker,\n      amountMicroStx,\n      poxAddress,\n      burnBlockHeight,\n      cycles,\n    });\n    const tx = await makeContractCall({\n      ...callOptions,\n      ...renamePrivateKey(txOptions),\n    });\n\n    return broadcastTransaction(tx, callOptions.network as StacksNetwork);\n  }\n\n  /**\n   * As a delegator, generate and broadcast transactions to extend stack for multiple delegatees.\n   * @category PoX-2\n   * @param {DelegateStackExtendOptions} options - a required delegate stack extend STX options object\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async delegateStackExtend({\n    stacker,\n    poxAddress,\n    extendCount,\n    ...txOptions\n  }: DelegateStackExtendOptions & BaseTxOptions): Promise<TxBroadcastResult> {\n    const poxInfo = await this.getPoxInfo();\n    const contract = poxInfo.contract_id;\n\n    const callOptions = this.getDelegateStackExtendOptions({\n      contract,\n      stacker,\n      poxAddress,\n      extendCount,\n    });\n    const tx = await makeContractCall({\n      ...callOptions,\n      ...renamePrivateKey(txOptions),\n    });\n\n    return broadcastTransaction(tx, callOptions.network as StacksNetwork);\n  }\n\n  /**\n   * As a delegator, generate and broadcast transactions to stack increase for multiple delegatees.\n   * @category PoX-2\n   * @param {DelegateStackIncreaseOptions} - a required delegate stack increase STX options object\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async delegateStackIncrease({\n    stacker,\n    poxAddress,\n    increaseBy,\n    ...txOptions\n  }: DelegateStackIncreaseOptions & BaseTxOptions): Promise<TxBroadcastResult> {\n    const poxInfo = await this.getPoxInfo();\n    const poxOperationInfo = await this.getPoxOperationInfo(poxInfo);\n    ensurePox2Activated(poxOperationInfo);\n\n    const callOptions = this.getDelegateStackIncreaseOptions({\n      contract: poxInfo.contract_id,\n      stacker,\n      poxAddress,\n      increaseBy,\n    });\n    const tx = await makeContractCall({\n      ...callOptions,\n      ...renamePrivateKey(txOptions),\n    });\n\n    return broadcastTransaction(tx, callOptions.network as StacksNetwork);\n  }\n\n  /**\n   * As a delegator, generate and broadcast a transaction to commit partially committed delegatee tokens\n   * @param {StackAggregationCommitOptions} options - a required stack aggregation commit options object\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async stackAggregationCommit({\n    poxAddress,\n    rewardCycle,\n    ...txOptions\n  }: StackAggregationCommitOptions & BaseTxOptions): Promise<TxBroadcastResult> {\n    // todo: deprecate this method in favor of Indexed as soon as PoX-2 is live\n    const contract = await this.getStackingContract();\n    ensureLegacyBtcAddressForPox1({ contract, poxAddress });\n\n    const callOptions = this.getStackAggregationCommitOptions({\n      contract,\n      poxAddress,\n      rewardCycle,\n    });\n    const tx = await makeContractCall({\n      ...callOptions,\n      ...renamePrivateKey(txOptions),\n    });\n\n    return broadcastTransaction(tx, callOptions.network as StacksNetwork);\n  }\n\n  /**\n   * As a delegator, generate and broadcast a transaction to commit partially committed delegatee tokens\n   *\n   * Commit partially stacked STX and allocate a new PoX reward address slot.\n   *   This allows a stacker/delegate to lock fewer STX than the minimal threshold in multiple transactions,\n   *   so long as: 1. The pox-addr is the same.\n   *               2. This \"commit\" transaction is called _before_ the PoX anchor block.\n   *   This ensures that each entry in the reward set returned to the stacks-node is greater than the threshold,\n   *   but does not require it be all locked up within a single transaction\n   *\n   * `stack-aggregation-commit-indexed` returns (ok uint) on success, where the given uint is the reward address's index in the list of reward\n   * addresses allocated in this reward cycle. This index can then be passed to `stack-aggregation-increase`\n   * to later increment the STX this PoX address represents, in amounts less than the stacking minimum.\n   *\n   * @category PoX-2\n   * @param {StackAggregationCommitOptions} options - a required stack aggregation commit options object\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async stackAggregationCommitIndexed({\n    poxAddress,\n    rewardCycle,\n    ...txOptions\n  }: StackAggregationCommitOptions & BaseTxOptions): Promise<TxBroadcastResult> {\n    const contract = await this.getStackingContract();\n    ensureLegacyBtcAddressForPox1({ contract, poxAddress });\n\n    const callOptions = this.getStackAggregationCommitOptionsIndexed({\n      contract,\n      poxAddress,\n      rewardCycle,\n    });\n    const tx = await makeContractCall({\n      ...callOptions,\n      ...renamePrivateKey(txOptions),\n    });\n\n    return broadcastTransaction(tx, callOptions.network as StacksNetwork);\n  }\n\n  /**\n   * As a delegator, generate and broadcast a transaction to increase partial commitment committed delegatee tokens\n   * @param {StackAggregationIncreaseOptions} options - a required stack aggregation increase options object\n   * @category PoX-2\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async stackAggregationIncrease({\n    poxAddress,\n    rewardCycle,\n    rewardIndex,\n    ...txOptions\n  }: StackAggregationIncreaseOptions & BaseTxOptions): Promise<TxBroadcastResult> {\n    // todo: deprecate this method in favor of Indexed as soon as PoX-2 is live\n    const contract = await this.getStackingContract();\n    ensureLegacyBtcAddressForPox1({ contract, poxAddress });\n\n    const callOptions = this.getStackAggregationIncreaseOptions({\n      contract,\n      poxAddress,\n      rewardCycle,\n      rewardCycleIndex: rewardIndex,\n    });\n    const tx = await makeContractCall({\n      ...callOptions,\n      ...renamePrivateKey(txOptions),\n    });\n\n    return broadcastTransaction(tx, callOptions.network as StacksNetwork);\n  }\n\n  /**\n   * As a delegatee, generate and broadcast a transaction to terminate the delegation relationship\n   * @param {string} privateKey - the private key to be used for the revoke call\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async revokeDelegateStx(privateKey: string): Promise<TxBroadcastResult>;\n  /**\n   * As a delegatee, generate and broadcast a transaction to terminate the delegation relationship\n   * @param {BaseTxOptions} txOptions - the private key, fee, and nonce to be used for the revoke call\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async revokeDelegateStx(txOptions: BaseTxOptions): Promise<TxBroadcastResult>;\n  async revokeDelegateStx(arg: string | BaseTxOptions): Promise<TxBroadcastResult> {\n    if (typeof arg === 'string') arg = { privateKey: arg };\n\n    const poxInfo = await this.getPoxInfo();\n    const contract = poxInfo.contract_id;\n\n    const callOptions = this.getRevokeDelegateStxOptions(contract);\n\n    const tx = await makeContractCall({\n      ...callOptions,\n      ...renamePrivateKey(arg),\n    });\n\n    return broadcastTransaction(tx, callOptions.network as StacksNetwork);\n  }\n\n  getStackOptions({\n    amountMicroStx,\n    poxAddress,\n    cycles,\n    contract,\n    burnBlockHeight,\n  }: {\n    cycles: number;\n    poxAddress: string;\n    amountMicroStx: IntegerType;\n    contract: string;\n    burnBlockHeight: number;\n  }) {\n    const address = poxAddressToTuple(poxAddress);\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const callOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'stack-stx',\n      // sum of uStx, address, burn_block_height, num_cycles\n      functionArgs: [uintCV(amountMicroStx), address, uintCV(burnBlockHeight), uintCV(cycles)],\n      validateWithAbi: true,\n      network: this.network,\n      anchorMode: AnchorMode.Any,\n    };\n    return callOptions;\n  }\n\n  getStackExtendOptions({\n    extendCycles,\n    poxAddress,\n    contract,\n  }: {\n    extendCycles: number;\n    poxAddress: string;\n    contract: string;\n  }) {\n    const address = poxAddressToTuple(poxAddress);\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const callOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'stack-extend',\n      functionArgs: [uintCV(extendCycles), address],\n      validateWithAbi: true,\n      network: this.network,\n      anchorMode: AnchorMode.Any,\n    };\n    return callOptions;\n  }\n\n  getStackIncreaseOptions({ increaseBy, contract }: { increaseBy: IntegerType; contract: string }) {\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const callOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'stack-increase',\n      functionArgs: [uintCV(increaseBy)],\n      validateWithAbi: true,\n      network: this.network,\n      anchorMode: AnchorMode.Any,\n    };\n    return callOptions;\n  }\n\n  getDelegateOptions({\n    contract,\n    amountMicroStx,\n    delegateTo,\n    untilBurnBlockHeight,\n    poxAddress,\n  }: {\n    contract: string;\n    amountMicroStx: IntegerType;\n    delegateTo: string;\n    untilBurnBlockHeight?: number;\n    poxAddress?: string;\n  }) {\n    const address = poxAddress ? someCV(poxAddressToTuple(poxAddress)) : noneCV();\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const callOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'delegate-stx',\n      functionArgs: [\n        uintCV(amountMicroStx),\n        principalCV(delegateTo),\n        untilBurnBlockHeight ? someCV(uintCV(untilBurnBlockHeight)) : noneCV(),\n        address,\n      ],\n      validateWithAbi: true,\n      network: this.network,\n      anchorMode: AnchorMode.Any,\n    };\n    return callOptions;\n  }\n\n  getDelegateStackOptions({\n    contract,\n    stacker,\n    amountMicroStx,\n    poxAddress,\n    burnBlockHeight,\n    cycles,\n  }: {\n    contract: string;\n    stacker: string;\n    amountMicroStx: IntegerType;\n    poxAddress: string;\n    burnBlockHeight: number;\n    cycles: number;\n  }) {\n    const address = poxAddressToTuple(poxAddress);\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const callOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'delegate-stack-stx',\n      functionArgs: [\n        principalCV(stacker),\n        uintCV(amountMicroStx),\n        address,\n        uintCV(burnBlockHeight),\n        uintCV(cycles),\n      ],\n      validateWithAbi: true,\n      network: this.network,\n      anchorMode: AnchorMode.Any,\n    };\n\n    return callOptions;\n  }\n\n  getDelegateStackExtendOptions({\n    contract,\n    stacker,\n    poxAddress,\n    extendCount,\n  }: {\n    contract: string;\n    stacker: string;\n    poxAddress: string;\n    extendCount: number;\n  }) {\n    const address = poxAddressToTuple(poxAddress);\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const callOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'delegate-stack-extend',\n      functionArgs: [principalCV(stacker), address, uintCV(extendCount)],\n      validateWithAbi: true,\n      network: this.network,\n      anchorMode: AnchorMode.Any,\n    };\n\n    return callOptions;\n  }\n\n  getDelegateStackIncreaseOptions({\n    contract,\n    stacker,\n    poxAddress,\n    increaseBy,\n  }: {\n    contract: string;\n    stacker: string;\n    poxAddress: string;\n    increaseBy: IntegerType;\n  }) {\n    const address = poxAddressToTuple(poxAddress);\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const callOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'delegate-stack-increase',\n      functionArgs: [principalCV(stacker), address, uintCV(increaseBy)],\n      validateWithAbi: true,\n      network: this.network,\n      anchorMode: AnchorMode.Any,\n    };\n\n    return callOptions;\n  }\n\n  getStackAggregationCommitOptions({\n    contract,\n    poxAddress,\n    rewardCycle,\n  }: {\n    contract: string;\n    poxAddress: string;\n    rewardCycle: number;\n  }) {\n    const address = poxAddressToTuple(poxAddress);\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const callOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'stack-aggregation-commit',\n      functionArgs: [address, uintCV(rewardCycle)],\n      validateWithAbi: true,\n      network: this.network,\n      anchorMode: AnchorMode.Any,\n    };\n    return callOptions;\n  }\n\n  getStackAggregationIncreaseOptions({\n    contract,\n    poxAddress,\n    rewardCycle,\n    rewardCycleIndex,\n  }: {\n    contract: string;\n    poxAddress: string;\n    rewardCycle: number;\n    rewardCycleIndex: number;\n  }) {\n    const address = poxAddressToTuple(poxAddress);\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const callOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'stack-aggregation-increase',\n      functionArgs: [address, uintCV(rewardCycle), uintCV(rewardCycleIndex)],\n      validateWithAbi: true,\n      network: this.network,\n      anchorMode: AnchorMode.Any,\n    };\n    return callOptions;\n  }\n\n  getStackAggregationCommitOptionsIndexed({\n    contract,\n    poxAddress,\n    rewardCycle,\n  }: {\n    contract: string;\n    poxAddress: string;\n    rewardCycle: number;\n  }) {\n    const address = poxAddressToTuple(poxAddress);\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const callOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'stack-aggregation-commit-indexed',\n      functionArgs: [address, uintCV(rewardCycle)],\n      validateWithAbi: true,\n      network: this.network,\n      anchorMode: AnchorMode.Any,\n    };\n    return callOptions;\n  }\n\n  getRevokeDelegateStxOptions(contract: string) {\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const callOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'revoke-delegate-stx',\n      functionArgs: [],\n      validateWithAbi: true,\n      network: this.network,\n      anchorMode: AnchorMode.Any,\n    };\n    return callOptions;\n  }\n\n  /**\n   * Check stacking status\n   *\n   * @returns {Promise<StackerInfo>} that resolves to a StackerInfo object if the operation succeeds\n   */\n  async getStatus(): Promise<StackerInfo> {\n    const poxInfo = await this.getPoxInfo();\n    const [contractAddress, contractName] = this.parseContractId(poxInfo.contract_id);\n    const account = await this.getAccountStatus();\n    const functionName = 'get-stacker-info';\n\n    return callReadOnlyFunction({\n      contractAddress,\n      contractName,\n      functionName,\n      senderAddress: this.address,\n      functionArgs: [principalCV(this.address)],\n      network: this.network,\n    }).then((responseCV: ClarityValue) => {\n      if (responseCV.type === ClarityType.OptionalSome) {\n        const someCV = responseCV;\n        const tupleCV: TupleCV = someCV.value as TupleCV;\n        const poxAddress: TupleCV = tupleCV.data['pox-addr'] as TupleCV;\n        const firstRewardCycle: UIntCV = tupleCV.data['first-reward-cycle'] as UIntCV;\n        const lockPeriod: UIntCV = tupleCV.data['lock-period'] as UIntCV;\n        const version: BufferCV = poxAddress.data['version'] as BufferCV;\n        const hashbytes: BufferCV = poxAddress.data['hashbytes'] as BufferCV;\n\n        return {\n          stacked: true,\n          details: {\n            first_reward_cycle: Number(firstRewardCycle.value),\n            lock_period: Number(lockPeriod.value),\n            unlock_height: account.unlock_height,\n            pox_address: {\n              version: version.buffer,\n              hashbytes: hashbytes.buffer,\n            },\n          },\n        };\n      } else if (responseCV.type === ClarityType.OptionalNone) {\n        return {\n          stacked: false,\n        };\n      } else {\n        throw new Error(`Error fetching stacker info`);\n      }\n    });\n  }\n\n  /**\n   * Check delegation status\n   *\n   * @returns {Promise<DelegationInfo>} that resolves to a DelegationInfo object if the operation succeeds\n   */\n  async getDelegationStatus(): Promise<DelegationInfo> {\n    const poxInfo = await this.getPoxInfo();\n    const [contractAddress, contractName] = this.parseContractId(poxInfo.contract_id);\n    const functionName = 'get-delegation-info';\n\n    return callReadOnlyFunction({\n      contractAddress,\n      contractName,\n      functionName,\n      senderAddress: this.address,\n      functionArgs: [principalCV(this.address)],\n      network: this.network,\n    }).then((responseCV: ClarityValue) => {\n      if (responseCV.type === ClarityType.OptionalSome) {\n        const tupleCV = responseCV.value as TupleCV;\n        const amountMicroStx = tupleCV.data['amount-ustx'] as UIntCV;\n        const delegatedTo = tupleCV.data['delegated-to'] as PrincipalCV;\n\n        const poxAddress = unwrapMap(tupleCV.data['pox-addr'] as OptionalCV<TupleCV>, tuple => ({\n          version: (tuple.data['version'] as BufferCV).buffer,\n          hashbytes: (tuple.data['hashbytes'] as BufferCV).buffer,\n        }));\n        const untilBurnBlockHeight = unwrap(tupleCV.data['until-burn-ht'] as OptionalCV<UIntCV>);\n\n        return {\n          delegated: true,\n          details: {\n            amount_micro_stx: BigInt(amountMicroStx.value),\n            delegated_to: principalToString(delegatedTo),\n            pox_address: poxAddress,\n            until_burn_ht: untilBurnBlockHeight ? Number(untilBurnBlockHeight.value) : undefined,\n          },\n        };\n      } else if (responseCV.type === ClarityType.OptionalNone) {\n        return {\n          delegated: false,\n        };\n      } else {\n        throw new Error(`Error fetching delegation info`);\n      }\n    });\n  }\n\n  /**\n   * @returns {Promise<string>} that resolves to the contract id (address and name) to use for stacking\n   */\n  async getStackingContract(poxOperationInfo?: PoxOperationInfo): Promise<string> {\n    poxOperationInfo = poxOperationInfo ?? (await this.getPoxOperationInfo());\n    switch (poxOperationInfo.period) {\n      case PoxOperationPeriod.Period1:\n        return poxOperationInfo.pox1.contract_id;\n      case PoxOperationPeriod.Period2a:\n      case PoxOperationPeriod.Period2b:\n        // in the 2.1 fork we can always stack to PoX-2\n        return poxOperationInfo.pox2.contract_id;\n      case PoxOperationPeriod.Period3:\n      default:\n        return poxOperationInfo.current.contract_id;\n    }\n  }\n\n  /**\n   * Adjust microstacks amount for locking after taking into account transaction fees\n   *\n   * @returns {StacksTransaction} that resolves to a transaction object if the operation succeeds\n   */\n  modifyLockTxFee({ tx, amountMicroStx }: { tx: StacksTransaction; amountMicroStx: IntegerType }) {\n    const fee = getFee(tx.auth);\n    (tx.payload as ContractCallPayload).functionArgs[0] = uintCV(\n      intToBigInt(amountMicroStx, false) - fee\n    );\n    return tx;\n  }\n\n  /**\n   * Parses a contract identifier and ensures it is formatted correctly\n   *\n   * @returns {Array<string>} a contract address and name\n   */\n  parseContractId(contract: string): string[] {\n    const parts = contract.split('.');\n\n    if (parts.length === 2 && validateStacksAddress(parts[0]) && parts[1].startsWith('pox')) {\n      return parts;\n    }\n\n    throw new Error('Stacking contract ID is malformed');\n  }\n}\n\n/** Rename `privateKey` to `senderKey`, for backwards compatibility */\nfunction renamePrivateKey(txOptions: BaseTxOptions) {\n  // @ts-ignore\n  txOptions.senderKey = txOptions.privateKey;\n  // @ts-ignore\n  delete txOptions.privateKey;\n  return txOptions as any as {\n    fee?: IntegerType;\n    nonce?: IntegerType;\n    senderKey: string;\n  };\n}\n"],"names":["root","factory","exports","module","define","amd","this","leafPrototypes","getProto","number","n","Number","isSafeInteger","Error","bool","b","bytes","lengths","Uint8Array","TypeError","length","includes","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","Object","defineProperty","value","assert","SHA2","_assert_js_1","utils_js_1","Hash","constructor","padOffset","isLE","super","pos","buffer","view","createView","update","data","default","len","toBytes","take","Math","set","subarray","process","dataView","roundClean","digestInto","fill","i","byteOffset","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","outLen","state","get","digest","res","slice","destroy","_cloneInto","to","crypto","node","undefined","web","self","sha224","sha256","_sha2_js_1","Maj","a","c","SHA256_K","Uint32Array","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","rotr","s1","T1","T2","SHA224","wrapConstructor","randomBytes","wrapConstructorWithOpts","checkOpts","concatBytes","utf8ToBytes","asyncLoop","nextTick","hexToBytes","bytesToHex","u32","u8","crypto_1","arr","byteLength","floor","DataView","word","shift","hexes","Array","from","v","toString","padStart","str","TextEncoder","encode","uint8a","hex","array","j","hexByte","byte","parseInt","isNaN","async","iters","tick","cb","ts","Date","now","diff","arrays","every","reduce","result","pad","clone","defaults","opts","obj","prototype","call","assign","hashConstructor","hashC","message","tmp","hashCons","msg","bytesLength","getRandomValues","ALPHABET","BASE_MAP","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","log","iFACTOR","decodeUnsafe","source","psz","zeroes","size","b256","carry","it3","it4","vch","ArrayBuffer","isView","isArray","pbegin","pend","b58","it1","it2","repeat","decode","string","basex","c32ToB58","b58ToC32","c32addressDecode","c32address","versions","checksum_1","base58check","utils_1","mainnet","p2pkh","p2sh","testnet","ADDR_BITCOIN_TO_STACKS","ADDR_STACKS_TO_BITCOIN","version","hash160hex","match","c32checkEncode","c32addr","c32checkDecode","b58check","addrInfo","hash160String","addrVersion","prefix","stacksVersion","c32string","bitcoinVersion","sha256_1","dataBytes","prefixBytes","checksum","forEach","check","index","encoding_1","c32checksum","dataHex","dataHash","toLowerCase","versionHex","checksumHex","c32str","c32encode","c32","c32data","c32normalize","c32decode","versionChar","indexOf","substring","c32input","toUpperCase","replace","inputHex","minLength","currentCode","nextCode","nextBits","nextLowBits","curC32Digit","unshift","C32leadingZeros","zeroPrefix","TextDecoder","numLeadingZeroBytesInHex","count","join","numLeadingZeroBytes","carryBits","currentValue","currentHexDigit","hexLeadingZeros","hexStr","address_1","enumerable","support","Symbol","Blob","e","viewClasses","isArrayBufferView","normalizeName","name","String","test","normalizeValue","iteratorFor","items","iterator","next","done","Headers","headers","map","append","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","type","rejected","arrayBuffer","then","text","readAsText","chars","fromCharCode","readArrayBufferAsText","formData","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","referrer","form","trim","split","decodeURIComponent","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","DOMException","err","stack","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","HASH_UNDEFINED","MAX_SAFE_INTEGER","argsTag","boolTag","dateTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFlags","reIsHostCtor","reIsUint","cloneableTags","freeGlobal","g","freeSelf","Function","freeExports","nodeType","freeModule","moduleExports","addMapEntry","pair","addSetEntry","add","arrayReduce","iteratee","accumulator","initAccum","isHostObject","mapToArray","overArg","func","transform","arg","setToArray","uid","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","exec","IE_PROTO","funcToString","objectToString","reIsNative","RegExp","Buffer","getPrototype","getPrototypeOf","objectCreate","propertyIsEnumerable","splice","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","getNative","Map","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","clear","entry","ListCache","MapCache","Stack","__data__","assignValue","object","objValue","eq","assocIndexOf","baseClone","isDeep","isFull","customizer","isObject","isArr","initCloneArray","copyArray","tag","getTag","isFunc","copy","cloneBuffer","isPrototype","proto","initCloneObject","copyObject","getSymbols","copySymbols","baseAssign","cloneFunc","symbol","Ctor","cloneArrayBuffer","cloneDataView","typedArray","cloneTypedArray","cloneMap","regexp","lastIndex","cloneRegExp","cloneSet","initCloneByTag","stacked","props","keysFunc","symbolsFunc","arrayPush","baseGetAllKeys","getAllKeys","arrayEach","subValue","newValue","getMapData","getValue","isFunction","baseIsNative","pop","cache","pairs","LARGE_ARRAY_SIZE","isIndex","other","ctorString","isArrayLike","isLength","inherited","isObjectLike","isArrayLikeObject","isArguments","baseTimes","skipIndexes","arrayLikeKeys","baseKeys","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","d","t","ns","r","def","current","definition","o","globalThis","window","prop","toStringTag","nmd","paths","children","intToBytes","signed","bigIntToBytes","parsedValue","isInteger","startsWith","SyntaxError","bn","width","nthBit","fromTwos","with0x","hexToBigInt","intToHex","integer","lengthBytes","_","u","paddedHex","asciiToBytes","byteArray","bytesToAscii","apply","isNotOctet","octet","octetsToBytes","numbers","some","elements","ChainID","PeerNetworkID","TransactionVersion","defaultFetchOpts","referrerPolicy","fetchWrapper","fetchOpts","createFetchFn","args","fetchLib","middlewares","argsForCreateFetchFn","fetchParams","middleware","pre","post","StacksNetworks","networkConfig","Mainnet","chainId","bnsLookupUrl","broadcastEndpoint","transferFeeEstimateEndpoint","transactionFeeEstimateEndpoint","accountEndpoint","contractAbiEndpoint","readOnlyFunctionCallEndpoint","isMainnet","getBroadcastApiUrl","coreApiUrl","getTransferFeeEstimateApiUrl","getTransactionFeeEstimateApiUrl","getAccountApiUrl","address","getAccountExtendedBalancesApiUrl","getAbiApiUrl","contract","getReadOnlyFunctionCallApiUrl","contractAddress","contractName","functionName","encodeURIComponent","getInfoUrl","getBlockTimeInfoUrl","getPoxInfoUrl","getRewardsUrl","limit","getRewardsTotalUrl","getRewardHoldersUrl","getStackerInfoUrl","getDataVarUrl","dataVarName","getMapEntryUrl","mapName","fetchFn","getNameInfo","fullyQualifiedName","nameLookupURL","resp","nameInfo","fromName","networkName","StacksDevnet","StacksMocknet","fromNameOrNetwork","network","Testnet","readUInt8","writeUInt32BE","destination","DEFAULT_CHAIN_ID","MAX_STRING_LENGTH_BYTES","CLARITY_INT_SIZE","CLARITY_INT_BYTE_SIZE","AnchorMode","ClarityVersion","PayloadType","StacksMessageType","AnchorModeNames","AnchorModeMap","OnChainOnly","OffChainOnly","Any","AssetType","TxRejectedReason","PostConditionPrincipalID","NonFungibleConditionCode","FungibleConditionCode","PubKeyEncoding","AddressVersion","AddressHashMode","AuthType","PostConditionType","PostConditionMode","Rho","Id","Pi","idxL","idxR","k","shifts","shiftsL","idx","shiftsR","Kl","Kr","rotl","f","group","y","z","BUF","RIPEMD160","h0","h1","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rl","rr","sl","sr","tl","tr","ripemd160","U32_MASK64","fromBig","le","lst","Ah","Al","s","Bh","Bl","Cl","low","Ch","Dl","Dh","Eh","El","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","sha512_256","_0n","_1n","_2n","_3n","_8n","CURVE","freeze","P","Gx","Gy","beta","divNearest","endo","splitScalar","a1","b1","a2","b2","POW_2_128","c1","c2","k1","mod","k2","k1neg","k2neg","fieldLen","groupLen","compressedLen","uncompressedLen","weierstrass","x2","x3","USE_ENDOMORPHISM","ShaError","assertJacPoint","JacobianPoint","fromAffine","p","Point","equals","ZERO","toAffineBatch","points","toInv","nums","scratch","inverted","invert","acc","num","reduceRight","invertBatch","toAffine","normalizeZ","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","negate","double","x1b","X3","Y3","Z3","HH","HHH","V","subtract","multiplyUnsafe","scalar","P0","normalizeScalar","k1p","k2p","precomputeWindow","W","windows","base","wNAF","affinePoint","_WINDOW_SIZE","precomputes","pointPrecomputes","windowSize","mask","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","constTimeNegate","multiply","point","fake","f1p","f2p","invZ","is0","iz1","iz2","iz3","ax","ay","zz","condition","item","neg","_setWindowSize","delete","hasEvenY","fromCompressedHex","isShort","bytesToNumber","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","rt","sqrtMod","isYOdd","assertValidity","fromUncompressedHex","fromHex","ensureBytes","fromPrivateKey","privateKey","normalizePrivateKey","fromSignature","msgHash","signature","recovery","Signature","fromDER","fromCompact","normalizeSignature","truncateHash","radj","rinv","u1","u2","R","numTo32bStr","Q","multiplyAndAddUnsafe","toRawBytes","isCompressed","toHex","toHexX","toRawX","left","aP","bQ","sum","sliceDER","parseDERInt","hexToNumber","sBytes","rBytesLeft","parseDERSignature","isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","sHexL","rHexL","sLen","rLen","toCompactRawBytes","toCompactHex","POW_2_256","numTo32b","power","modulo","q","m","truncateOnly","delta","bits2int_2","_sha256Sync","_hmacSha256Sync","HmacDrbg","hashLen","qByteLen","counter","hmac","hmacSha256","hmacSync","checkSync","incr","reseed","seed","reseedSync","generate","generateSync","kmdToSig","kBytes","lowS","kinv","sig","bits2int","bits2octets","z1","z2","int2octets","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","minLen","randomPrivateKey","precompute","cached","messages","subtle","createHash","ckey","importKey","sign","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","tagH","taggedHashSync","_JacobianPoint","defineProperties","configurable","val","HMAC","_key","iHash","oHash","COORDINATE_BYTES","Address","hash160","createStacksPublicKey","PublicKey","serializePublicKey","privKey","publicKey","compressed","privateKeyBuffer","signWithKey","messageHash","rawSignature","recoveryId","extraEntropy","seedArgs","initSigArgs","drbg","canonical","recSig","der","recovered","hashed","finalizeSig","MessageSignature","content","lengthPrefixBytes","maxLengthBytes","prefixLength","maxLength","LengthPrefixedString","createAddress","c32AddressString","addressData","serializePayload","payload","bytesArray","payloadType","TokenTransfer","recipient","amount","serializeStacksMessage","memo","ContractCall","numArgs","functionArgs","SmartContract","codeBody","VersionedSmartContract","clarityVersion","PoisonMicroblock","Coinbase","coinbaseBytes","CoinbaseToAltRecipient","AuthFieldType","ClarityType","createTransactionAuthField","pubKeyEncoding","contents","TransactionAuthField","serializeMessageSignature","messageSignature","serializeAddress","Principal","serializePrincipal","serializeLPString","MemoString","memoString","contentBytes","paddedContent","rightPadHexToLength","serializeMemoString","AssetInfo","serializeAssetInfo","PostCondition","postCondition","conditionType","principal","Fungible","NonFungible","assetInfo","assetName","conditionCode","STX","serializePostCondition","LengthPrefixedList","serializeLPList","Payload","field","Compressed","PublicKeyCompressed","PublicKeyUncompressed","compressPublicKey","SignatureCompressed","SignatureUncompressed","serializeTransactionAuthField","addressFromPublicKeys","hashMode","numSigs","publicKeys","SerializeP2PKH","SerializeP2WPKH","SerializeP2WSH","hashP2WPKH","SerializeP2SH","hashP2SH","hashP2WSH","bytesReader","readBytes","Contract","lps","info","lpList","list","msgs","TransactionError","captureStackTrace","SerializationError","NoEstimateAvailableError","SigningError","bytesWithTypeID","typeId","serializeStringCV","cv","encoding","BoolTrue","BoolFalse","serializeBoolCV","OptionalNone","OptionalSome","serializeBufferCV","UInt","serializeUIntCV","Int","toTwos","serializeIntCV","PrincipalStandard","serializeStandardPrincipalCV","PrincipalContract","serializeContractPrincipalCV","ResponseOk","ResponseErr","serializeResponseCV","List","serializedValue","serializeListCV","Tuple","lexicographicOrder","sort","localeCompare","nameWithLength","serializeTupleCV","StringASCII","serializeStringAsciiCV","StringUTF8","serializeStringUtf8CV","MAX_U128","MIN_U128","MAX_I128","MIN_I128","bigInt","stringify","addressString","contractPrincipalCVFromAddress","addr","someCV","tupleCV","enumCheckFunctions","isEnum","enumVariable","checker","newChecker","enumValues","filter","enumValueSet","createEnumChecker","readUInt32BE","readUInt16BE","readBigUIntLE","reverse","readBigUIntBE","readOffset","internalBytes","readUInt8Enum","invalidEnumErrorFormatter","serializedClarityValue","hasHexPrefix","bufferLength","responseErrorCV","listLength","listContents","tupleLength","tupleContents","clarityName","asciiStrLen","asciiStr","utf8StrLen","leftPadHex","hexString","padEnd","cloneDeep","txidFromData","keyHash","redeemScript","pubKeys","pubKey","scriptArray","script","emptyMessageSignature","nonce","fee","signer","keyEncoding","Uncompressed","isSingleSig","clearCondition","cloned","fields","serializeSpendingCondition","serializeSingleSigSpendingCondition","signaturesRequired","serializeMultiSigSpendingCondition","makeSigHashPreSign","curSigHash","authType","sigHash","makeSigHashPostSign","hashLength","sigHashBytes","nextVerification","initialSigHash","sigHashPreSign","parsedSignature","recoveryIdHex","parseRecoverableSignatureVrs","publicKeyFromSignatureVrs","nextSigHash","spendingCondition","Standard","sponsorSpendingCondition","Sponsored","intoInitialSighashAuth","auth","MainnetSingleSig","newInitialSigHash","cvToString","getCVTypeString","ClarityAbiTypeId","isClarityAbiPrimitive","isClarityAbiBuffer","isClarityAbiStringAscii","isClarityAbiStringUtf8","isClarityAbiResponse","isClarityAbiOptional","optional","isClarityAbiTuple","tuple","isClarityAbiList","getTypeString","matchType","abiType","union","ClarityAbiTypeUInt128","ClarityAbiTypeInt128","ClarityAbiTypeBool","ClarityAbiTypePrincipal","ClarityAbiTypeTraitReference","ClarityAbiTypeNone","ClarityAbiTypeBuffer","ClarityAbiTypeResponse","ClarityAbiTypeOptional","ClarityAbiTypeTuple","ClarityAbiTypeList","ClarityAbiTypeStringAscii","ClarityAbiTypeStringUtf8","getTypeUnion","abiTupleEntry","transaction","signBegin","originDone","checkOversign","checkOverlap","nextVerify","createSponsorSigner","tx","setSponsor","originSigHash","verifyOrigin","signOrigin","nextSighash","signNextOrigin","appendOrigin","appendPubkey","signSponsor","signNextSponsor","getTxInComplete","resume","postConditions","postConditionMode","anchorMode","Deny","anchorModeFromNameOrValue","txid","verifyBegin","addrBytes","verifySingleSig","haveUncompressed","foundPubKey","verifyMultiSig","signAndAppend","cond","nextSig","nextSignature","endsWith","serialized","serialize","setFee","setNonce","setSponsorNonce","chainIdBytes","serializeAuthorization","broadcastTransaction","attachment","rawTx","derivedNetwork","deriveNetwork","validateTxId","broadcastRawTransaction","makeUnsignedContractCall","txOptions","defaultOptions","sponsored","validateWithAbi","abi","catch","getAbi","filtered","functions","fn","abiArgs","payloadArg","abiArg","argNum","validateContractCall","authorization","numSignatures","lpPostConditions","estimatedLen","multiSigSpendingCondition","existingSignatures","totalSignatureLength","estimateTransactionByteLength","transactionPayload","transaction_payload","estimated_len","reason","reason_data","estimations","estimateTransaction","Accept","feeRateResult","txBytes","estimateTransferUnsafe","estimateTransactionFeeWithFallback","addressVersion","TestnetSingleSig","senderAddress","txNonce","getNonce","makeContractCall","senderKey","signerKeys","pk","callReadOnlyFunction","readOnlyFunctionOptions","sender","arguments","responseJson","okay","cause","parseReadOnlyResponse","PoXAddressVersion","BitcoinNetworkVersion","P2PKH","P2SH","devnet","mocknet","B58_ADDR_PREFIXES","SEGWIT_V0_ADDR_PREFIX","SEGWIT_V1_ADDR_PREFIX","SegwitPrefix","SEGWIT_ADDR_PREFIXES","SEGWIT_V0","SEGWIT_V1","PoxOperationPeriod","StackingErrors","assertNumber","chain","wrap","alphabet","digits","letter","separator","padding","bits","chr","end","normalize","convertRadix","digit","digitBase","gcd","radix2carry","convertRadix2","radix2","revPadding","unsafeWrapper","genBase58","abc","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","chk","bechChecksum","words","encodingConst","genBech32","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","lowered","sepIndex","lastIndexOf","actualLength","decodeToBytes","bech32","bech32m","InvalidAddressError","innerError","btcAddressVersionToLegacyHashMode","btcAddressVersion","decodeBtcAddress","btcAddress","newChecksum","base58CheckDecode","b32","bech32Words","witnessVersion","bech32Decode","bech32MWords","bech32MDecode","decodeNativeSegwitBtcAddress","dataLength","P2WPKH","P2WSH","P2TR","nativeAddressToSegwitVersion","extractPoxAddressFromClarityValue","poxAddrClarityValue","clarityValue","versionCV","hashBytesCV","hashBytes","getErrorString","ERR_STACKING_UNREACHABLE","ERR_STACKING_CORRUPTED_STATE","ERR_STACKING_INSUFFICIENT_FUNDS","ERR_STACKING_INVALID_LOCK_PERIOD","ERR_STACKING_ALREADY_STACKED","ERR_STACKING_NO_SUCH_PRINCIPAL","ERR_STACKING_EXPIRED","ERR_STACKING_STX_LOCKED","ERR_STACKING_PERMISSION_DENIED","ERR_STACKING_THRESHOLD_NOT_MET","ERR_STACKING_POX_ADDRESS_IN_USE","ERR_STACKING_INVALID_POX_ADDRESS","ERR_STACKING_ALREADY_REJECTED","ERR_STACKING_INVALID_AMOUNT","ERR_NOT_ALLOWED","ERR_STACKING_ALREADY_DELEGATED","ERR_DELEGATION_EXPIRES_DURING_LOCK","ERR_DELEGATION_TOO_MUCH_LOCKED","ERR_DELEGATION_POX_ADDR_REQUIRED","ERR_INVALID_START_BURN_HEIGHT","ERR_NOT_CURRENT_STACKER","ERR_STACK_EXTEND_NOT_LOCKED","ERR_STACK_INCREASE_NOT_LOCKED","ERR_DELEGATION_NO_REWARD_SLOT","ERR_DELEGATION_WRONG_REWARD_SLOT","ERR_STACKING_IS_DELEGATED","ERR_STACKING_NOT_DELEGATED","poxAddressToTuple","poxAddress","hashbytes","_poxAddressToBtcAddress_Values","P2SHP2WPKH","P2SHP2WSH","btcAddrVersion","legacyHashModeToBtcAddressVersion","base58Encode","base58CheckEncode","poxAddressToBtcAddress","poxAddr","_poxAddressToBtcAddress_ClarityValue","unwrap","unwrapMap","ensurePox2Activated","operationInfo","period","Period1","ensureLegacyBtcAddressForPox1","StackingClient","getCoreInfo","getPoxInfo","getTargetBlockTime","target_block_time","getAccountStatus","getAccountBalance","balance","getAccountExtendedBalances","getAccountBalanceLocked","locked","getCycleDuration","poxInfoPromise","targetBlockTimePromise","all","poxInfo","targetBlockTime","reward_cycle_length","getRewardsTotalForBtcAddress","getRewardsForBtcAddress","getRewardHoldersForBtcAddress","getRewardSet","parseContractId","contractId","rewardCyleId","rewardSetIndex","pox_address","total_ustx","getSecondsUntilNextCycle","coreInfoPromise","coreInfo","burn_block_height","first_burnchain_block_height","getSecondsUntilStackingDeadline","next_cycle","blocks_until_prepare_phase","getPoxOperationInfo","current_burnchain_block_height","contract_versions","pox1","contract_id","poxContractVersions","activation_burnchain_block_height","pox2","pox3","activatedPoxs","pox2ConfiguredUrl","Period2a","current_cycle","first_reward_cycle_id","Period2b","Period3","isStackingEnabledNextCycle","rejection_votes_left_required","hasMinimumStx","min_amount_ustx","canStack","cycles","balancePromise","reward_cycle_id","responseCV","eligible","amountMicroStx","burnBlockHeight","poxOperationInfo","getStackingContract","callOptions","getStackOptions","renamePrivateKey","stackExtend","extendCycles","getStackExtendOptions","stackIncrease","increaseBy","getStackIncreaseOptions","delegateStx","delegateTo","untilBurnBlockHeight","getDelegateOptions","delegateStackStx","stacker","getDelegateStackOptions","delegateStackExtend","extendCount","getDelegateStackExtendOptions","delegateStackIncrease","getDelegateStackIncreaseOptions","stackAggregationCommit","rewardCycle","getStackAggregationCommitOptions","stackAggregationCommitIndexed","getStackAggregationCommitOptionsIndexed","stackAggregationIncrease","rewardIndex","getStackAggregationIncreaseOptions","rewardCycleIndex","revokeDelegateStx","getRevokeDelegateStxOptions","getStatus","account","firstRewardCycle","lockPeriod","details","first_reward_cycle","lock_period","unlock_height","getDelegationStatus","delegatedTo","delegated","amount_micro_stx","delegated_to","until_burn_ht","modifyLockTxFee","getFee","stacksAddress","validateStacksAddress"],"sourceRoot":""}